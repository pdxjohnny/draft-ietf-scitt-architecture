{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2023-10-29T00:36:08.382380+00:00",
  "repo": "ietf-wg-scitt/draft-ietf-scitt-architecture",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "terminology",
      "description": "",
      "color": "1d76db"
    },
    {
      "name": "Registration Policy",
      "description": "",
      "color": "181CD4"
    },
    {
      "name": "receipts",
      "description": "",
      "color": "C2E0C6"
    },
    {
      "name": "multiple-instances",
      "description": "Issues related to replicas of an instance, or promoting across different instances",
      "color": "D4C5F9"
    },
    {
      "name": "RBAC-ABAC",
      "description": "Role (or Attribute) Based Access Control Issues",
      "color": "E99695"
    },
    {
      "name": "APIs",
      "description": "API related issues",
      "color": "6AE636"
    }
  ],
  "issues": [
    {
      "number": 4,
      "id": "I_kwDOIvmHss5ev0gQ",
      "title": "Add CODEOWNERS file for visibility of maintainership",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/4",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-02-17T16:09:43Z",
      "updatedAt": "2023-10-23T23:25:50Z",
      "closedAt": "2023-10-23T23:25:50Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Clsoing as IETF drafts use the authors to track",
          "createdAt": "2023-10-23T23:25:50Z",
          "updatedAt": "2023-10-23T23:25:50Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOIvmHss5ev4Yz",
      "title": "Cull through previous draft issues",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/5",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Which issues from https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues should be carried forward?",
      "createdAt": "2023-02-17T16:19:00Z",
      "updatedAt": "2023-02-27T16:04:22Z",
      "closedAt": "2023-02-27T16:04:22Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed, as complete",
          "createdAt": "2023-02-27T16:04:22Z",
          "updatedAt": "2023-02-27T16:04:22Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOIvmHss5e8RUk",
      "title": "make errors relating to aasvg, binread, and kramdown-rfc",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/6",
      "state": "CLOSED",
      "author": "nealmcb",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "When I run `make` to build the document as instructed, I get lots of new tools installed (in a local `lib/.venv/` directory), culminating in this output:\r\n```\r\n[...]\r\nInstalling collected packages: webencodings, wcwidth, sortedcontainers, iddiff, charset-normalizer, appdirs, urllib3, toml, six, rfc-tidy, pyyaml, pycountry, markupsafe, lxml, intervaltree, idna, configargparse, certifi, requests, python-dateutil, pyang, jinja2, html5lib, google-i18n-address, archive-repo, xml2rfc, svgcheck\r\nSuccessfully installed appdirs-1.4.4 archive-repo-0.0.2 certifi-2022.12.7 charset-normalizer-3.0.1 configargparse-1.5.3 google-i18n-address-2.5.2 html5lib-1.1 iddiff-0.4.3 idna-3.4 intervaltree-3.1.0 jinja2-3.1.2 lxml-4.9.2 markupsafe-2.1.2 pyang-2.5.3 pycountry-22.3.5 python-dateutil-2.8.2 pyyaml-6.0 requests-2.28.2 rfc-tidy-0.1.1 six-1.16.0 sortedcontainers-2.4.0 svgcheck-0.7.1 toml-0.10.2 urllib3-1.26.14 wcwidth-0.2.6 webencodings-0.5.1 xml2rfc-3.16.0\r\ntouch /srv/s/ietf/draft-ietf-scitt-architecture/lib/.venv/bin/.initialized-with-Makefile.venv\r\ncat draft-ietf-scitt-architecture.md  | kramdown-rfc --v3 | lib/trace.sh draft-ietf-scitt-architecture.xml -s venue /srv/s/ietf/draft-ietf-scitt-architecture/lib/.venv/bin/python lib/add-note.py | lib/trace.sh draft-ietf-scitt-architecture.xml -s v2v3 /srv/s/ietf/draft-ietf-scitt-architecture/lib/.venv/bin/xml2rfc -q -s 'Setting consensus=\"true\" for IETF STD document' --rfc-base-url https://www.rfc-editor.org/rfc/ --id-base-url https://datatracker.ietf.org/doc/html/ --cache=/home/neal/.cache/xml2rfc --v2v3 /dev/stdin -o /dev/stdout >draft-ietf-scitt-architecture.xml\r\nlib/trace.sh: line 14: exec: kramdown-rfc: not found\r\nError: Unable to parse the XML document: /dev/stdin\r\nmake: *** [lib/main.mk:72: draft-ietf-scitt-architecture.xml] Error 1\r\nmake: *** Deleting file 'draft-ietf-scitt-architecture.xml'\r\n```\r\n\r\nSo I looked at the setup doc: [i\\-d\\-template/SETUP\\.md at main \u00b7 martinthomson/i\\-d\\-template \u00b7 GitHub](https://github.com/martinthomson/i-d-template/blob/main/doc/SETUP.md)\r\n\r\nIt wasn't quite clear how to install bundler, but this seems to have worked on Ubuntu 20.04:\r\n\r\n`sudo apt install ruby-bundler`\r\n\r\nAfter running `make` again, I got an error with these interesting lines:\r\n\r\n```\r\n/srv/s/ietf/draft-ietf-scitt-architecture/lib/.gems/ruby/2.7.0/gems/kramdown-rfc2629-1.6.23/lib/kramdown-rfc2629.rb:463:in `binread': No such file or directory @ rb_sysopen - /home/neal/.cache/xml2rfc/kdrfc-1_6_23-svg_tool_process-f6af3c66d015d02c71df638c578665ec07ac4bde.cache (Errno::ENOENT)\r\n...\r\n/usr/lib/ruby/2.7.0/open3.rb:213:in `spawn': No such file or directory - aasvg (Errno::ENOENT)\r\n```\r\n\r\nAny hints on what else is needed?",
      "createdAt": "2023-02-21T05:55:22Z",
      "updatedAt": "2023-03-09T19:09:22Z",
      "closedAt": "2023-03-09T19:09:22Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@nealmcb, this looks to be fixed with several edits. Please re-open if you find new issues.",
          "createdAt": "2023-03-09T19:09:22Z",
          "updatedAt": "2023-03-09T19:09:22Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOIvmHss5e_acF",
      "title": "Terminology: Registry & Transparency Service ",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/7",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Copied over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/38\r\n\r\nThe architecture I-D, and other docs use Registry and Transparency Service (TS) interchangeably. \r\n\r\nThis issue is about consistent naming, and what we should use for an implementation that hosts the SCITT standards.  \r\nAs we've discussed various terms, I'm pasting a \"thousand words\" to highlight conceptual components.\r\n\r\n![image](https://user-images.githubusercontent.com/7647382/202588667-782e7227-ac9b-49f5-b740-0a2a27fd807d.png)\r\n\r\nHow do we finish this sentence:  \r\n*The user will submit a signed statement/claim (see issue #34) to the ___*\r\n\r\n1. The thing we're trying to name here, which is an implementation of a service.\r\n2. The **eNotary** component that evaluates the Registration Policy (3) before proceeding\r\n3. The **Registration Policy**, as the gatekeeper for what may be submitted to the ledger.\r\n4. The **eNotary** counter signing key/service\r\n5. The **ledger**, where statements/claims are persisted\r\n6. The ledger of a ___ (1) may be implemented through various \"ledger databases\", such as [Azure CCF](https://azure.microsoft.com/en-us/products/azure-confidential-ledger/), [QLDB](https://aws.amazon.com/qldb/), [Trillian](https://github.com/google/trillian)\r\n\r\nThis issue is to discuss what we call (1)\r\nPlease \"vote\" with a comment, representing a number, and any supporting thoughts:\r\n\r\n1. Transparency Service (with no acronym)\r\n2. Registry\r\n3. SCITT Implementation\r\n4. Transparency Service (TS as a acronym)\r\n5. _write in your own_",
      "createdAt": "2023-02-21T15:30:00Z",
      "updatedAt": "2023-09-05T23:31:27Z",
      "closedAt": "2023-09-05T23:31:27Z",
      "comments": [
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "4. Transparency Service (TS as a acronym)\r\n\r\nPlease look at the existing terminology section before proposing global substitutions. ",
          "createdAt": "2023-02-27T16:10:49Z",
          "updatedAt": "2023-02-27T16:10:49Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "The substitution of TS to Transparency Services was due to comments that highlighted a possible confusion with Timestamp that might be not intuitive to the generic reader.\r\n\r\nMaybe let us split that decision out to the list and then fix this with a %s/foo/bar/g?",
          "createdAt": "2023-02-27T16:17:56Z",
          "updatedAt": "2023-02-27T16:18:28Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "NONE",
          "body": "IMO a \"Transparency Service\" operates a SCITT Registry that contains authenticated statements expressing trust in an artifact. A SCITT Registry may employ multiple technologies to provide its services, i.e. blockchain ledger, relational database, evidence locker, REST API to query the Registry for statements, API's to submit new statements and evidence, etc. The operator of a Transparency Service serves as the Registry Gatekeeper to ensure the integrity of the Registry.",
          "createdAt": "2023-02-27T21:41:20Z",
          "updatedAt": "2023-02-27T21:43:16Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Adding a link to a higher level overview @raylutz \r\n assembled: https://docs.google.com/document/d/1qYljgugcraiamGjrhldQ1ZEoa4i_TkM3tzBg8yNzE_E/edit#",
          "createdAt": "2023-03-06T16:35:08Z",
          "updatedAt": "2023-03-06T16:35:08Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "#16 mostly converges on Transparency Service. However, #8 is also open as additional discussions commence.\r\nI'm leaving open to keep discussions with all the history, including updates to @raylutz's doc.",
          "createdAt": "2023-03-10T01:46:07Z",
          "updatedAt": "2023-03-10T01:46:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Assigning to @raylutz for confirmation and update. ",
          "createdAt": "2023-06-05T15:20:57Z",
          "updatedAt": "2023-06-05T15:20:57Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, due to inactivity and #16  and #8 cover open topics. ",
          "createdAt": "2023-09-05T23:31:27Z",
          "updatedAt": "2023-09-05T23:31:27Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOIvmHss5e_b-V",
      "title": "Converge Claim and Statement",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/8",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Copying over: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/34\r\n\r\nAt IETF-115, discussions involved:\r\n\r\n- Leverage existing IETF and/or W3C definitions and terms, or at least not conflict and cause confusion with existing terms.\r\n- Minimize the concept count\r\n\r\n### Existing Standards Terminology\r\n\r\n- [IETF: Remote Attestation Procedures Architecture (RATS)](https://www.ietf.org/archive/id/draft-ietf-rats-architecture-22.html#name-artifacts)\r\n- [IETF: SCITT Architecture](https://ietf-scitt.github.io/draft-birkholz-scitt-architecture/draft-birkholz-scitt-architecture.html#name-terminology)\r\n- [IETF: RFC7519](https://www.ietf.org/archive/id/draft-ietf-rats-architecture-22.html#RFC7519)\r\n\r\n### Proposal\r\n\r\nClaim conflicts with RATS and W3C\r\n\r\nComparison of terms across orgs as the object changes state:\r\n![](https://hackmd.io/_uploads/SklGkMSBs.png)\r\n\r\nInstead of transitioning from `statement` to `claim` to `transparent claim`, what if we used `statement` as the base concept:\r\n- Statement --> Signed Statment --> Transparent Statement",
      "createdAt": "2023-02-21T15:34:14Z",
      "updatedAt": "2023-10-23T23:26:14Z",
      "closedAt": "2023-10-23T23:26:14Z",
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "NONE",
          "body": "IMO, A \"Transparency Service\" has an operator (entity) that serves as a Gatekeeper to ensure integrity of the Registry and maintain a high availability service to ensure access to the Registry data via defined API's. ",
          "createdAt": "2023-02-27T21:46:07Z",
          "updatedAt": "2023-02-27T21:46:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "While reviewing the architecture terminology, we are considering various terms for information being placed on SCITT. What are the terms as the submission changes state? \r\n\r\nThe current [architecture document](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-architecture-overview) uses:\r\n- Statement\r\n- Claim\r\n- Transparent Claim\r\n\r\nTo converge on the terminology, please provide your suggestion for each stage. By the end of the week: (March 3, 2023), we'll consolidate the options and put it up for vote.",
          "createdAt": "2023-02-28T16:21:54Z",
          "updatedAt": "2023-02-28T16:21:54Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "- Statement\r\n- Signed Statement\r\n- Transparent Statement",
          "createdAt": "2023-02-28T16:22:42Z",
          "updatedAt": "2023-02-28T16:22:42Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "As a potentially more palatable alternative:\r\n\r\n* Assertion\r\n* Signed Statement\r\n* Transparent Statement",
          "createdAt": "2023-02-28T16:33:11Z",
          "updatedAt": "2023-02-28T16:33:11Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "NONE",
          "body": "Entries in REA's SAG-CTR are called a \"Declaration\";\r\n \r\n> a formal or explicit statement or announcement.\r\n> \"they issued a declaration at the close of the talks\"\r\n> \r\nThere are different types of declarations, in SAG-CTR i.e. \"Trusted Software\", \"Trusted Artifact\", \"SAGScore\" (TM) etc.",
          "createdAt": "2023-02-28T16:38:56Z",
          "updatedAt": "2023-02-28T16:43:11Z"
        },
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe the current architecture had **4** different notions: Statement, Claim, Signed Claim, and Transparent Claim.\r\nAs we often discussed, I think the terminology in the architecture should clearly distinguish between the notion of opaque payloads (previously known as statements) from \"things with headers\" which are consistently signed, made transparent, and communicated between SCITT parties. I care about it because in almost all use cases, headers matter a lot. \r\nMy proposed revised names for these 4 notions are: \r\n- Document (Assertion is fine too)\r\n- Statement (The document in an envelope with selected headers)\r\n- Signed Statement (Adding the issuer signature)\r\n- Transparent Statement (Adding the receipt to the Signed Statement).  \r\n",
          "createdAt": "2023-02-28T16:48:37Z",
          "updatedAt": "2023-02-28T16:51:18Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "What do folks think about @fournet latest suggestion?\r\n1. It accounts for users creating a thing (a `document`), \r\n2. they prepare it to be submitted (`statement`: becomes a cose payload with the surrounding information, such as a from/to on an envelope)\r\n3. it's signed by the issuer (`signed statement`)\r\n4. It's submitted to the transparency service and accepted as a result of any registration policies (`transparent statement`)\r\n\r\nPersonally, what I like about: it takes a generic document (`SBOM`, `VEX`, `scan result`, `artifact x meets foo conformance policy`, ...) and then uses the same noun (statement) with adjectives (`signed`, `transparent`) as it travels through the SCITT workflow.",
          "createdAt": "2023-03-02T18:47:30Z",
          "updatedAt": "2023-03-02T18:50:07Z"
        },
        {
          "author": "letmaik",
          "authorAssociation": "COLLABORATOR",
          "body": "I think introducing a term for the envelope without its signature (\"statement\" above) is confusing, simply because this piece does not exist as such (it's not something you can easily point to or even write to a file, or hash, etc.). And because of that, the transition would in practice be document -> signed statement, which is confusing. \r\n\r\nI think statement -> signed statement makes sense, even though it's a bit cumbersome and a single word for the latter would be nicer (thinking of APIs etc.). In practice, I think that's where it ends, and whether receipts from one or more TS exist (and are bundled in some way) and whether verifiers therefore consider the signed statement as more or less transparent is a policy decision I think. ",
          "createdAt": "2023-03-02T19:18:39Z",
          "updatedAt": "2023-03-02T19:18:39Z"
        },
        {
          "author": "kaywilliams",
          "authorAssociation": "NONE",
          "body": "Agree with Maik. I prefer statement -> signed statement. For describing to lay audiences (which I do with some frequency) there are fewer concepts which makes it easier for a) the presenter to describe and b) the audience to understand.",
          "createdAt": "2023-03-06T16:10:04Z",
          "updatedAt": "2023-03-06T16:10:04Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/commit/f73a68d938d2c20d20f321a3f3e07e7ef6a4719a hopefully addresses the core issues of most parties as a step forward to rough consensus.\r\n\r\n> Agree with Maik. I prefer statement -> signed statement. For describing to lay audiences (which I do with some frequency) there are fewer concepts which makes it easier for a) the presenter to describe and b) the audience to understand.\r\n\r\nFortunately, the current proposal still uses these terms \ud83d\ude0c\r\n",
          "createdAt": "2023-03-06T16:29:42Z",
          "updatedAt": "2023-03-06T16:29:42Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I was going to close this as #16 converges on Statement. \r\nHowever, there seems some additional discussions are happening. I'm leaving this open to assure we're capturing the history of ideas.",
          "createdAt": "2023-03-10T01:42:37Z",
          "updatedAt": "2023-03-10T01:42:37Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm deferring to 117 so we can use the current #16 terminology as a common baseline for 116 discussions and slides.",
          "createdAt": "2023-03-10T01:43:17Z",
          "updatedAt": "2023-03-10T01:43:17Z"
        },
        {
          "author": "kaywilliams",
          "authorAssociation": "NONE",
          "body": "@SteveLasker asked me to post this issue here rather than in the separate issue #20 that I had created (which has now been closed)\r\n\r\n----------------------------\r\nIn describing to lay audiences, I have found it easier to use the term 'registered statement' rather than 'transparent statement'. It reduces the number of concepts needed for understanding. Here is the workflow description I have been using:\r\n\r\nUser creates a statement\r\nUser signs a statement\r\nUser registers a statement on a transparency registry. Prior to registration, the statement is evaluated against registration policy.\r\nUser receives a receipt of registration\r\nUser shares a registered statement with interested parties\r\nAuditors and others query the transparency registry to get a history of registered statements\r\n\r\nSee related comment on Issue https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16\r\nSee related comment on Issue https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/20",
          "createdAt": "2023-03-13T22:59:19Z",
          "updatedAt": "2023-03-13T22:59:19Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Completed",
          "createdAt": "2023-10-23T23:26:14Z",
          "updatedAt": "2023-10-23T23:26:14Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOIvmHss5e_dxR",
      "title": "Change term 'artifact'",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/9",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Copying over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/42\r\n\r\nThe architecture document currently defines `artifact` as the \"physical or non-physical item that is moving along the supply chain\". In other forums, different terms are used, for example: `supplied good`, `product`, `asset`.",
      "createdAt": "2023-02-21T15:38:27Z",
      "updatedAt": "2023-09-05T23:33:43Z",
      "closedAt": "2023-09-05T23:33:43Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Adding some other names, to consider:\r\n- Asset",
          "createdAt": "2023-02-21T18:42:21Z",
          "updatedAt": "2023-02-21T18:42:21Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Another good discussion, but I don't see us landing consensus before the 116 deadline, or rather is this the highest priority?\r\nDeferring to 117",
          "createdAt": "2023-03-10T01:44:37Z",
          "updatedAt": "2023-03-10T01:44:37Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing due to inactivity",
          "createdAt": "2023-09-05T23:33:43Z",
          "updatedAt": "2023-09-05T23:33:43Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOIvmHss5e_fzJ",
      "title": "Mapping SLSA and SCITT terminology",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/10",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Within the terminology of https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/29#issuecomment-1384320432, @joshuagl brought up some good questions of SLSA terminology.\r\nThis issue is specific to SLSA mappings\r\n\r\n",
      "createdAt": "2023-02-21T15:44:01Z",
      "updatedAt": "2023-09-05T23:35:20Z",
      "closedAt": "2023-09-05T23:35:20Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@joshuagl, can you make a proposal?\r\nDeferring to 117",
          "createdAt": "2023-03-10T01:40:51Z",
          "updatedAt": "2023-03-10T01:40:51Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing due to inactivity. @joshuagl, please re-open if you'd like to make a proposal. ",
          "createdAt": "2023-09-05T23:35:20Z",
          "updatedAt": "2023-09-05T23:35:20Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOIvmHss5e_g6q",
      "title": "Refine Definition of Feed",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/11",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Copied over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/36\r\n\r\nA feed is a great base for how we can create a series of statements for different artifacts, getting freshness for a receipt/or VEX report.\r\nThe current definition likely needs to expand a bit to account for:\r\n- What are the versions of a specific artifact\r\n- What are all the statements for a version of an artifact\r\n- What is the latest statement for a specific `contentType` of a specific versioned `artifact`: (eg: what's the latest ~~`SBOM`~~ `application/spdx+json` or  `application/vnd.cyclonedx+json` for the `net-monitor:v1` software?\r\n- If the `contentType` is a referenced [statement by reference](#35), which stores SBOMs, Scan Reports, how do we drill into each if they all use the same payload `contentType` of satementByReference?\r\n",
      "createdAt": "2023-02-21T15:46:59Z",
      "updatedAt": "2023-10-20T18:06:54Z",
      "closedAt": "2023-10-20T18:06:54Z",
      "comments": [
        {
          "author": "raylutz",
          "authorAssociation": "NONE",
          "body": "I'm not sure if \"feed\" represents the right concept, when it seems to me that the API to the registry will need to offer the ability to query records for specific orgs-products-models-releases, and collect all the relevant records, which likely include a number of ledger entries to various related artifacts.  With that said, can imagine also the notion of a different API which would provide a feed of updates to the registry, esp. to allow a mirrored version or to perhaps aggregate from several source registries.",
          "createdAt": "2023-03-08T00:52:40Z",
          "updatedAt": "2023-03-08T00:52:40Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "> I'm not sure if \"feed\" represents the right concept, when it seems to me that the API to the registry will need to offer the ability to query records for specific orgs-products-models-releases, and collect all the relevant records, which likely include a number of ledger entries to various related artifacts. With that said, can imagine also the notion of a different API which would provide a feed of updates to the registry, esp. to allow a mirrored version or to perhaps aggregate from several source registries.\r\n\r\nThis is a good point and one possible improvement that was already brought up at the previous IETF meeting is to enable some structure in the feed header. For instance, using an array of strings would capture many of the common patterns (such as product > model > release), and allow some advanced functions in the API (such as prefix-based querying). Another approach would be to allow each issuer to structure their feed using arbitrary CBOR representations; while this captures many more complex usages (e.g. packages for different Linux distributions, binaries for different architectures) it becomes harder for the transparency service to understand what constitutes related claims (it requires interpretation of the feed format), and thus, harder to define auditing APIs.",
          "createdAt": "2023-03-08T09:59:08Z",
          "updatedAt": "2023-03-08T09:59:08Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@ad-l, I've got the notes on feeds and I've been working on a proposal. Would you like to collaborate on it?\r\n\r\nDeferring to 117 for prioritization, but a great discussion as many things will be built upon feeds.",
          "createdAt": "2023-03-10T01:39:44Z",
          "updatedAt": "2023-03-10T01:39:44Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "A note from the [SCITT call on 9/24/2023](https://datatracker.ietf.org/meeting/interim-2023-scitt-34/session/scitt)\r\nWe'll be iterating on this a bit more, to create some use cases and examples for how feeds help producers and consumers benefit from SCITT.",
          "createdAt": "2023-09-25T18:01:49Z",
          "updatedAt": "2023-09-25T18:01:49Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "See: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/0383ec2b5a23f11d1a42800aebbe38368e12376d/draft-ietf-scitt-architecture.md?plain=1#L188\r\n\r\n```\r\nFeed: \r\n\r\n: an identifier chosen by the Issuer for the Artifact.\r\nFor every Issuer and Feed, the Registry on a Transparency Service contains a sequence of Signed Statements about the same Artifact.\r\nIn COSE, Feed is a dedicated header attribute in the protected header of the Envelope.\r\n```\r\n\r\nThere are several problems with this definition.\r\n\r\n1. It conflates using aggregations over an header parameter, with the header parameter.\r\n2. It confuses how the TS uses the attribute with how the `iss` uses the attribute (same problem as above).\r\n\r\nSuggested changes:\r\n\r\n\r\n```\r\nFeed Identifier:\r\n\r\n: A feed identifier is chosen be the issuer who secured the signed statement.\r\nFeed identifier MUST NOT be present in unprotected headers.\r\nFeed identifier is registered in CWT Claims Registry as Tag TBD (Requested assignment 42).\r\n\r\nFeed Resource:\r\n\r\n: A feed resource is made available by a transparency service, \r\nand exposed via the SCITT API <ref scrapi>.\r\nTransparency services MAY leverage the feed identifier \r\nused by the issuer to construct the identifier for feed resources on the transparency service.\r\n\r\n```\r\n\r\nRegistration policies only apply to the feed identifier, they do not apply to the feed resource.\r\n\r\nSee https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/pull/2 regarding the Transparency Service exposing the Feed Resource.",
          "createdAt": "2023-09-26T14:39:10Z",
          "updatedAt": "2023-09-26T14:44:28Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOIvmHss5e_hiw",
      "title": "Considering the impact of claim semantics on policy layer",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/12",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Registration Policy"
      ],
      "body": "Copied over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/26\r\n\r\nWhen specific and detailed claims are provided an advanced policy might be applied.\r\n\r\nIf only shallow / simple claims are provided, there is not much of an opportunity to apply advanced policies.",
      "createdAt": "2023-02-21T15:48:42Z",
      "updatedAt": "2023-10-23T23:26:45Z",
      "closedAt": "2023-10-23T23:26:45Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117",
          "createdAt": "2023-03-10T01:37:19Z",
          "updatedAt": "2023-03-10T01:37:19Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 118",
          "createdAt": "2023-09-05T23:41:55Z",
          "updatedAt": "2023-09-05T23:41:55Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale",
          "createdAt": "2023-10-23T23:26:45Z",
          "updatedAt": "2023-10-23T23:26:45Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOIvmHss5e_jL3",
      "title": "Add a sequence diagram",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/13",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [],
      "body": "Copied over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/27\r\n\r\n##  Compound User Story / Sequence Diagram\r\n\r\nAs a consumer, I want to understand if I should trust an artifact\r\nAs a producer, I want to be assured that the integrity of my artifacts has been reviewed by a trusted 3rd party.\r\n\r\n```mermaid\r\nsequenceDiagram\r\n    participant Issuer\r\n    participant Notary\r\n    Note left of Issuer: I take responsibility for the artifacts I produce\r\n    Issuer ->> Notary: These are the policies I am committed to meeting\r\n    Issuer ->> Notary: I stand by my claims about my artifact\r\n    loop Claims Check\r\n        Notary ->> Notary: Review relevant claims and policies\r\n    end\r\n    Notary ->> Issuer: Here is my endorsement and receipt\r\n    Consumer->>Notary: Is this artifact safe to use?\r\n    loop Endorsement Check\r\n        Notary->>Notary: Review relevant claims and endorsements\r\n    end\r\n     Notary ->> Consumer: You can trust this artifact, the endorsement is still valid\r\n     Note right of Consumer: I have confidence in the artifacts I consume\r\n```\r\n",
      "createdAt": "2023-02-21T15:53:11Z",
      "updatedAt": "2023-10-23T23:27:21Z",
      "closedAt": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "This would be a great addition. @OR13, is this something you think you could do for 116? As more folks get connected with SCITT, it might help get started. \r\nI'll opportunistically assign 116 for now, but if you don't feel it's realistic, please just reassign 117 ",
          "createdAt": "2023-03-10T01:36:02Z",
          "updatedAt": "2023-03-10T01:36:23Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "What is the action? \n\nTo produce ASCII art from the mermaid? \n\nOpen a PR on the architecture with the ASCII art?",
          "createdAt": "2023-03-10T01:37:53Z",
          "updatedAt": "2023-03-10T01:37:53Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "ASCII Art seems to be the standard for the IETF Specs. @hannestschofenig, what do you think about mermaid?\r\n\r\nShould this go in the architecture or the new API draft? Or, maybe the http://scitt.io/ site?\r\n\r\nI think it would be a great addition, but you're bringing up a good tooling point.",
          "createdAt": "2023-03-10T02:01:18Z",
          "updatedAt": "2023-03-10T02:01:18Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "- related issue: https://github.com/mermaidjs/mermaid-live-editor/issues/36",
          "createdAt": "2023-03-10T22:37:43Z",
          "updatedAt": "2023-03-10T22:37:43Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @OR13. I do wonder if it's possible to generate an SVG, similar to [aasvg](https://github.com/martinthomson/aasvg) Was your thought that mermaid could output to aasvg?",
          "createdAt": "2023-03-10T23:33:36Z",
          "updatedAt": "2023-03-10T23:33:36Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "It is possible to generate svg from mermaid, the problem is that svg does work for ASCII version of RFC, so ASCII art is preferred.",
          "createdAt": "2023-03-11T01:26:32Z",
          "updatedAt": "2023-03-11T01:26:32Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Still interesting, bumped to 119",
          "createdAt": "2023-10-23T23:27:21Z",
          "updatedAt": "2023-10-23T23:27:21Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDOIvmHss5e_kHn",
      "title": "Registry Access Scenarios (RBAC)",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/14",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "RBAC-ABAC"
      ],
      "body": "Copied over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/25\r\n\r\n### Case 0 \r\n\r\n- Public Read\r\n- Private Write\r\n\r\n### Case 1\r\n\r\n- Private Read\r\n- Private Write\r\n\r\n\r\nWhen holding an endorsement, one might be be able to verify directly in a public read, or rely on an auditor in the case of a private read scenario.\r\n",
      "createdAt": "2023-02-21T15:55:50Z",
      "updatedAt": "2023-10-23T23:27:55Z",
      "closedAt": "2023-10-23T23:27:54Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "RBAC definition is a great topic, but deferring from 116 at this point for focus.",
          "createdAt": "2023-03-10T01:33:16Z",
          "updatedAt": "2023-03-10T01:33:16Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "RBAC has been discussed is implementation specific. \r\nClosing\r\n",
          "createdAt": "2023-10-23T23:27:54Z",
          "updatedAt": "2023-10-23T23:27:54Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOIvmHss5fBbAw",
      "title": "Global Terminology Overhaul & Some Text Issues",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/15",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Payload and Statement seem to be used intermixed in the text. I tried to disambiguate the via \"Statement payload\". If that does not work, please provide a counter proposal.\r\n\r\nThe term Claim sometimes seem to have meant Signed Statement and sometimes Transparent Statement. Using our interim terminology, that became a selection process for me. Please check, if I made the correct choice in all occurrences (sometimes I had to guess the intent).\r\n\r\nConsistent Capitalization was a mess. I hope I fixed most of that. Please check.\r\n\r\nThere is still no consistent use of \"Registry\" vs. \"log\" vs. \"ledger\" vs. \"Transparency Service\", I think. Please check.\r\n\r\nPlease check every use of the term \"Evidence\" and if an alternative expression could be used.\r\n\r\nPlease check every occurrence of the term \"guarantee\" or \"proof\" and if an alternative expression could be used.\r\n\r\nPrivacy Considerations and Security Considerations texts require significant improvement.",
      "createdAt": "2023-02-21T23:03:09Z",
      "updatedAt": "2023-03-09T15:44:11Z",
      "closedAt": "2023-03-09T15:44:11Z",
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "NONE",
          "body": "Here is my opinion:\r\nRegistry refers to the facilities used to store and retrieve \"Authenticated Statement Data\" that has been submitted to a \"Transparency Service\" \"operator\". A Registry contains specific \"Statements\" which the Transparency service supports, as documented in their registration policies document. A Registry may employ different technologies needed to carry out its function to store and retrieve \"Statements\" that are permitted in the Registry, per the registration policies defined by the Transparency Service operator. The operator of a Transparency Service serves the role of Gatekeeper to ensure the integrity of the Registry data and services provided to access the Registry data. A Statement is contained in a message \"Payload\" exchanged between a Transparency Service API function and other parties, i.e. consumer inquiries and Notary submissions.",
          "createdAt": "2023-02-27T21:58:30Z",
          "updatedAt": "2023-02-27T22:01:54Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "It would help to be able to read the document given the changes proposed here. But due to the make errors documented in #6 I haven't yet succeeded in doing so. Does the build infrastructure automatically build documents for other branches? Or can someone else build and publish the document based on this branch?",
          "createdAt": "2023-03-06T04:11:46Z",
          "updatedAt": "2023-03-06T04:11:46Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Editor's version build via github actions for #16 is located here: https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/core-terms/draft-ietf-scitt-architecture.html",
          "createdAt": "2023-03-06T17:05:15Z",
          "updatedAt": "2023-03-06T17:05:15Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOIvmHss5fEmZl",
      "title": "Define error codes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/17",
      "state": "CLOSED",
      "author": "letmaik",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/3#discussion_r1114223387.\r\n\r\nMore error codes should be defined.",
      "createdAt": "2023-02-22T12:43:22Z",
      "updatedAt": "2023-10-23T23:28:44Z",
      "closedAt": "2023-10-23T23:28:44Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@letmaik, with the focus to pull the API into another draft, should we close this, or transfer? ",
          "createdAt": "2023-03-10T01:32:20Z",
          "updatedAt": "2023-03-10T01:32:20Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as this is likely part of [SCRAPI](https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/)",
          "createdAt": "2023-10-23T23:28:44Z",
          "updatedAt": "2023-10-23T23:28:44Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOIvmHss5fdHKX",
      "title": "Statement by reference",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/18",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Copied over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/35\r\n\r\nAt IETF 115 there were discussions on having some kind of standard way to deal with statements by reference. Here are also the two relevant slides from https://datatracker.ietf.org/doc/slides-115-scitt-combined-scitt-presentations/:\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "createdAt": "2023-02-27T15:59:38Z",
      "updatedAt": "2023-10-23T23:29:31Z",
      "closedAt": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Reluctantly moving beyond 116. We do have some new work for clarifying statement types, but it won't be ready for 116 proper. \r\n\r\nIf someone has bandwidth to focus upon for the 116 hackathon, please grab this. In lieu of that, I'm differing for now. ",
          "createdAt": "2023-03-10T01:31:38Z",
          "updatedAt": "2023-03-10T01:31:38Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Statement by reference is still assumed through discussions, but not yet captured in the specs. Moving to 119",
          "createdAt": "2023-10-23T23:29:31Z",
          "updatedAt": "2023-10-23T23:29:31Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOIvmHss5fj1KR",
      "title": "Review Registration Policy",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/19",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Registration Policy"
      ],
      "body": "Discussion on the functionality of the registration policy, as defined in the architecture.",
      "createdAt": "2023-02-28T14:55:21Z",
      "updatedAt": "2023-10-23T23:29:59Z",
      "closedAt": null,
      "comments": [
        {
          "author": "raylutz",
          "authorAssociation": "NONE",
          "body": "\"Registration Policy\" describes the constraints imposed on who can submit signed statements and what metadata is required. The metadata AKA \"Artifact Properties\" is used for accessing the signed statements regarding data artifacts. There are two levels of properties: a) a base level which provides the licensee/owner, semantic label of the item, version, and category. The date submitted is calculated by the log manager. Category is used to determine the extended properties set. For example, for software use case, the base level would have Licensee:\"Company ABC\", ProductName:\"Widget package XYZ\", Version: \"2.1.3\", PropertiesCategory:\"sw\". In the extended set, we have properties such as a enumeration of possible artifact types, such SBOM, OCI container, binary, etc. \r\n\r\nThen, the registration policy includes 2 aspects. a) which property fields are completed so the item can be later accessed and b) whether the submitter is authorized to submit the item based on evaluating the signature on the submitted item.\r\n\r\nThe minimum metadata for each artifact must be specified in the base architecture, even if in some registration policies, no metadata is required. The extended metadata must be defined for the sw use case.\r\n\r\nThe signed statements that exist in the append only log must include both the base properties and optional (use-case specific) properties, these should be protected by any signatures, and they should not be encrypted nor considered part of the artifact.\r\n",
          "createdAt": "2023-06-25T16:09:39Z",
          "updatedAt": "2023-06-25T16:23:59Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Active for 118 on-site discussion, and inclusion for 119",
          "createdAt": "2023-10-23T23:29:59Z",
          "updatedAt": "2023-10-23T23:29:59Z"
        }
      ]
    },
    {
      "number": 20,
      "id": "I_kwDOIvmHss5gE3ct",
      "title": "Terminology: 'Transparent Statement' -> 'Registered Statement'",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/20",
      "state": "CLOSED",
      "author": "kaywilliams",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "duplicate"
      ],
      "body": "In describing to lay audiences, I have found it easier to use the term 'registered statement' rather than 'transparent statement'. It reduces the number of concepts needed for understanding. Here is the workflow description I have been using:\r\n\r\nUser creates a statement\r\nUser signs a statement\r\nUser registers a statement on a transparency registry. Prior to registration, the statement is evaluated against registration policy.\r\nUser receives a receipt of registration\r\nUser shares a registered statement with interested parties\r\nAuditors and others query the transparency registry to get a history of registered statements\r\n\r\nSee related comment on Issue #16 ",
      "createdAt": "2023-03-06T17:22:44Z",
      "updatedAt": "2023-03-13T23:00:21Z",
      "closedAt": "2023-03-10T01:29:45Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @kaywilliams. As the list of issues is growing, do you mind converging this discussion in #8?",
          "createdAt": "2023-03-08T22:34:17Z",
          "updatedAt": "2023-03-08T22:34:17Z"
        },
        {
          "author": "kaywilliams",
          "authorAssociation": "NONE",
          "body": "I don't mind, but please note that Henk did ask me to create a separate issue. So, perhaps we check with him first?",
          "createdAt": "2023-03-08T22:36:44Z",
          "updatedAt": "2023-03-08T22:36:44Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz, any reason to keep this separate from #8?",
          "createdAt": "2023-03-08T22:38:01Z",
          "updatedAt": "2023-03-08T22:38:01Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolving as a dupe of the #8 discussion and closing just to centralize common discussions. \r\n@kaywilliams, please review and copy your points to that issue. Also, please note the currently merged updates which use Statement.  \r\n",
          "createdAt": "2023-03-10T01:29:45Z",
          "updatedAt": "2023-03-10T01:29:45Z"
        },
        {
          "author": "kaywilliams",
          "authorAssociation": "NONE",
          "body": "Added comment to #8",
          "createdAt": "2023-03-13T23:00:20Z",
          "updatedAt": "2023-03-13T23:00:20Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "I_kwDOIvmHss5gFHY7",
      "title": "Support auditing of multiple replicas of a given Transparency Service, like in CT",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/21",
      "state": "OPEN",
      "author": "nealmcb",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "multiple-instances"
      ],
      "body": "> Unlike CT, where independent auditors are responsible for enforcing the consistency of multiple independent instances of the same global Registry, each Transparency Service is required to guarantee the consistency of its own Registry (for instance, through the use of a consensus algorithm between replicas of the Registry), but assume no consistency between different Transparency Services\r\n\r\nThe sentence _Unlike CT,..._ takes away an important aspect of any transparency service, and negates the overall notion that we are trying to generalize CT.\r\n\r\nInstead, we should note that any given TS will be well served by having replicas and auditors which confirm that relying parties can choose any replica they want.",
      "createdAt": "2023-03-06T18:04:01Z",
      "updatedAt": "2023-10-24T00:05:02Z",
      "closedAt": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring multiple instance discussions to post 116.",
          "createdAt": "2023-03-10T01:27:27Z",
          "updatedAt": "2023-03-10T01:27:27Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Linking to #79 ",
          "createdAt": "2023-10-23T23:31:32Z",
          "updatedAt": "2023-10-23T23:31:32Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOIvmHss5gLwUY",
      "title": "Incorporate cose-merkle-tree-proofs replacing SCITT Receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/22",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "fournet"
      ],
      "labels": [],
      "body": "[cose-merkle-tree-proofs](https://github.com/ietf-scitt/cose-merkle-tree-proofs)",
      "createdAt": "2023-03-07T15:30:58Z",
      "updatedAt": "2023-09-05T23:39:58Z",
      "closedAt": "2023-09-05T23:39:57Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "As we're working to complete [draft-steele-cose-merkle-tree-proofs](https://github.com/ietf-scitt/draft-steele-cose-merkle-tree-proofs) for 116, I'm assigning to 116",
          "createdAt": "2023-03-10T01:21:11Z",
          "updatedAt": "2023-03-10T01:21:11Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "See #68 for a proposed implementation",
          "createdAt": "2023-05-09T12:38:36Z",
          "updatedAt": "2023-05-09T12:38:36Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as #68 has been merged",
          "createdAt": "2023-09-05T23:39:57Z",
          "updatedAt": "2023-09-05T23:39:57Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "I_kwDOIvmHss5gLx5_",
      "title": "Clarification: Notarization is not the process of creating a signed statement",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/23",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [
        "terminology"
      ],
      "body": "              I don't love this language.\r\n\r\nI think notarizing applies to making a \"Signed Statement\" a \"Transparent Statement\"... but this sentence seems to imply notarization is part of the process of creating a \"Signed Statement\", which seems wrong.\r\n\r\n_Originally posted by @OR13 in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1126710441_\r\n            ",
      "createdAt": "2023-03-07T15:34:29Z",
      "updatedAt": "2023-10-23T23:34:30Z",
      "closedAt": "2023-10-23T23:34:30Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@yogeshbdeshpande, is it realistic to get some clarification in by this Friday so we can review and merge by Monday?\r\n",
          "createdAt": "2023-03-10T01:26:42Z",
          "updatedAt": "2023-03-10T01:26:42Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "For context, I think this is the _language_ in question:\r\n\r\n> If trust can be put into the operations that record Signed Statements (i.e., a believable notarization function) in a secure, append-only Registry via online operations, the same trust can be put into a corresponding Receipt that is the resulting documentation of these online operations issued by the Transparency Services and that can be validated in offline operations.\r\n",
          "createdAt": "2023-03-10T14:25:37Z",
          "updatedAt": "2023-03-10T14:25:37Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "^ yes, that is it.\r\n\r\nI prefer something closer to:\r\n\r\n> The issuer of a signed statement should been authenticated, and trusted to make the statements according to a registration policy for the transparency service. The issuer of a receipt for a transparent signed statement  (i.e., a believable notarization function), when trusted as a notary facilitates offline verification ... etc...\r\n\r\n\r\n",
          "createdAt": "2023-03-10T16:59:29Z",
          "updatedAt": "2023-03-10T16:59:29Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale. If the [current draft](https://datatracker.ietf.org/doc/draft-ietf-scitt-architecture/) doesn't reflect the needs, please open a new issue, and/or PR",
          "createdAt": "2023-10-23T23:34:30Z",
          "updatedAt": "2023-10-23T23:34:30Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "I_kwDOIvmHss5gLzx-",
      "title": "Clarification: add notarization",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/24",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [
        "terminology"
      ],
      "body": "              I think the concept of \"notarization\" needs to go here... or it needs to not be used anywhere.\r\n\r\n_Originally posted by @OR13 in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1126712923_\r\n            ",
      "createdAt": "2023-03-07T15:39:14Z",
      "updatedAt": "2023-10-23T23:35:57Z",
      "closedAt": "2023-10-23T23:35:56Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, is this a quick item for 116?  ",
          "createdAt": "2023-03-10T01:19:13Z",
          "updatedAt": "2023-03-10T01:19:13Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Possibly, what role do we assign the \"issuer\" of a transparent statement.\n\nHow do we distinguish issuing a transparent statement, from issuing a signed statement.\n\nWhat policies apply to transparent statements vs signed statements?\n\nDo we think the word notary is useful?\n\nIs the notary the name for identity that signs a transparent statement?\n\n\n\n",
          "createdAt": "2023-03-10T01:22:33Z",
          "updatedAt": "2023-03-10T01:22:33Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Roles is a good loaded word. \r\nSome thoughts:\r\n\r\n- A signed statement is signed by the issuer, external to the Transparency Service. \r\n- After the registration policy has been completed, the signed statement gets notarized and becomes a transparent statement.\r\n- It's the process of completing the registration policy which implies being notarized.\r\n- As we start to define how a SCITT Transparency Service would be configured, it does seem like the identity of the notarization process would be a Notary.",
          "createdAt": "2023-03-10T02:05:50Z",
          "updatedAt": "2023-03-10T02:05:50Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "I'm a fan of the recommendation to use the term registered statement rather than transparent statement. If we adopt that, it would seem clearer to use the term registrar rather than overloading the term notary in a way that seems novel to me. Are there examples in other areas where different notaries follow different registration policies?",
          "createdAt": "2023-03-10T13:56:56Z",
          "updatedAt": "2023-03-10T13:56:56Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, and the current draft has been updated quite a bit.\r\nPlease re-open if new text is needed.",
          "createdAt": "2023-10-23T23:35:57Z",
          "updatedAt": "2023-10-23T23:35:57Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "I_kwDOIvmHss5gL1VT",
      "title": "Clarification: \"DID Key Manifest\" to another term",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/25",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [
        "terminology"
      ],
      "body": "              I suggest maybe not using the words \"DID Key Manifest\"... \r\n\r\nMaybe \"Public Key Identifier\" or \"VerificationMethod\".\r\n\r\n_Originally posted by @OR13 in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1126717438_\r\n            ",
      "createdAt": "2023-03-07T15:42:18Z",
      "updatedAt": "2023-09-10T19:01:59Z",
      "closedAt": "2023-09-10T19:01:59Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117 as it's a good clarification as we dig deeper into registration policy, but doesn't seem a priority for 116",
          "createdAt": "2023-03-10T01:17:41Z",
          "updatedAt": "2023-03-10T01:17:41Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 do you want to take another look at this? Or shall we close due to inactivity? ",
          "createdAt": "2023-09-05T23:47:08Z",
          "updatedAt": "2023-09-05T23:47:08Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "The latest PR has several related corrections, I can't say if additional changes are needed but I am fine closing this issue ",
          "createdAt": "2023-09-05T23:49:46Z",
          "updatedAt": "2023-09-05T23:49:46Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOIvmHss5gL6MW",
      "title": "Break up paragraphs to single lines per sentence.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/26",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [],
      "body": "              This is a long sentence, maybe break it up into multiple 80 character lines?\r\nA policy could be 'unrecognized', 'unparsable', or 'not implemented'. Does 'unknown' imply all of these?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123556851_\r\n            ",
      "createdAt": "2023-03-07T15:53:51Z",
      "updatedAt": "2023-03-09T19:04:19Z",
      "closedAt": "2023-03-09T19:04:19Z",
      "comments": []
    },
    {
      "number": 27,
      "id": "I_kwDOIvmHss5gMC9H",
      "title": "Clarification: cannot delete or alter earlier Signed Statements",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/27",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              > cannot delete or alter earlier Signed Statements about certain Artifacts\r\n\r\ndrop \"about certain Artifacts\". It makes it seem like they could delete or alter Signed Statements about certain *other* Artifacts. But they can't delete or alter any earlier Signed Statements about anything.\r\n\r\n_Originally posted by @nealmcb in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1125888615_\r\n            ",
      "createdAt": "2023-03-07T16:14:28Z",
      "updatedAt": "2023-10-23T23:39:08Z",
      "closedAt": "2023-10-23T23:39:08Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Good clarification, but deferring to 117",
          "createdAt": "2023-03-10T01:08:13Z",
          "updatedAt": "2023-03-10T01:08:13Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as updates have been completed: [Line 173](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md?plain=1#L173)\r\n> Multiple Issuers may Register additional Signed Statements about the same Artifact, but they cannot delete or alter Signed Statements previously added to the Append-only Log.\r\n",
          "createdAt": "2023-10-23T23:39:08Z",
          "updatedAt": "2023-10-23T23:39:08Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "I_kwDOIvmHss5gMEQ7",
      "title": "Clarification: CT and TS generalization, replicas and auditors",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/28",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology",
        "multiple-instances"
      ],
      "body": "              The sentence *Unlike CT,...* takes away an important aspect of any transparency service, and negates the overall notion that we are trying to generalize CT.\r\n\r\nInstead, we should note that any given TS will be well served by having replicas and auditors which confirm that relying parties can choose any replica they want.\r\n\r\n_Originally posted by @nealmcb in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1125894980_\r\n            ",
      "createdAt": "2023-03-07T16:17:57Z",
      "updatedAt": "2023-10-24T00:03:33Z",
      "closedAt": "2023-10-24T00:03:32Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring replicas and reliability to post 116",
          "createdAt": "2023-03-10T01:06:01Z",
          "updatedAt": "2023-03-10T01:06:01Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale",
          "createdAt": "2023-10-24T00:03:32Z",
          "updatedAt": "2023-10-24T00:03:32Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "I_kwDOIvmHss5gMFqH",
      "title": "Clarification: need and trust references",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/29",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              I'd take out \"need to\" in both definitions.\r\n\r\nFor the end of the second one I'd get rid of the tricky and unnecessary word *trust* by substituting this:\r\n=> that access, validate, and evaluate the reliability of authentic Statements\r\n\r\n_Originally posted by @nealmcb in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1125902807_\r\n            ",
      "createdAt": "2023-03-07T16:21:37Z",
      "updatedAt": "2023-09-05T23:50:07Z",
      "closedAt": "2023-09-05T23:50:06Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "closing due to inactivity, and merger of #16. Please re-open or create a new issue/pr if needed.",
          "createdAt": "2023-09-05T23:50:06Z",
          "updatedAt": "2023-09-05T23:50:06Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "I_kwDOIvmHss5gMcOA",
      "title": "Clarification: SHOULD | MUST verify the ledger is consistent with a previously issued receipt",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/30",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              Why is this a SHOULD and not MUST?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123536590_\r\n            ",
      "createdAt": "2023-03-07T17:13:04Z",
      "updatedAt": "2023-03-10T01:02:48Z",
      "closedAt": "2023-03-10T01:02:48Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as I've re-read the comment from @nedmsmith and I think this is now covered.\r\nNed, if you feel otherwise, please re-open.",
          "createdAt": "2023-03-10T01:02:48Z",
          "updatedAt": "2023-03-10T01:02:48Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "I_kwDOIvmHss5gMcrm",
      "title": "Clarification: how does the Transparency Service ensure determinism?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/31",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "duplicate"
      ],
      "body": "              how does the TS ensure determinism?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123538125_\r\n            ",
      "createdAt": "2023-03-07T17:14:27Z",
      "updatedAt": "2023-03-09T17:26:19Z",
      "closedAt": "2023-03-09T17:26:19Z",
      "comments": [
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "Duplicate of #35",
          "createdAt": "2023-03-09T16:17:54Z",
          "updatedAt": "2023-03-09T16:17:54Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @nealmcb, for helping reduce the total number of issues ",
          "createdAt": "2023-03-09T17:26:19Z",
          "updatedAt": "2023-03-09T17:26:19Z"
        }
      ]
    },
    {
      "number": 32,
      "id": "I_kwDOIvmHss5gMgg1",
      "title": "Clarification: Requirements for SCITT implementations to build a suitable Transparency Service",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/32",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              Of course a compromised TS could do all sorts of malicious things. If the previous line / paragraph stated the 4 (or more?) bullet points below in terms of how a TS is supposed to behave. It might be easier to understand what requirements implementers must address in order to build a suitable TS?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123612216_\r\n            ",
      "createdAt": "2023-03-07T17:23:15Z",
      "updatedAt": "2023-10-23T23:37:20Z",
      "closedAt": "2023-10-23T23:37:20Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "This is similar to #37 where we may want to clarify what's in the spec, vs. a decision for an implementation.\r\nAssigning to post 116\r\n",
          "createdAt": "2023-03-10T00:59:59Z",
          "updatedAt": "2023-03-10T00:59:59Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Updates have been merged. Please re-open with new updates if needed.",
          "createdAt": "2023-10-23T23:37:20Z",
          "updatedAt": "2023-10-23T23:37:20Z"
        }
      ]
    },
    {
      "number": 33,
      "id": "I_kwDOIvmHss5gMiIO",
      "title": "Clarification: References to multiple Transparency Servies",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/33",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "multiple-instances"
      ],
      "body": "              Does this work if the TS cluster is behind a load balancer?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123564059_\r\n            ",
      "createdAt": "2023-03-07T17:27:16Z",
      "updatedAt": "2023-10-24T00:04:04Z",
      "closedAt": "2023-10-24T00:04:04Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Linking to #42, but also a good topic for client verification (verifiers).\r\nDeferring to 117 to provide time for discussion.",
          "createdAt": "2023-03-09T23:32:33Z",
          "updatedAt": "2023-03-09T23:32:33Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, with references to Federation added. ",
          "createdAt": "2023-10-24T00:04:04Z",
          "updatedAt": "2023-10-24T00:04:04Z"
        }
      ]
    },
    {
      "number": 34,
      "id": "I_kwDOIvmHss5gMjDr",
      "title": "Clarification: Reference to \"Local\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/34",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              please break up long sentences into shorter lines.\r\n\r\nThe term 'local' is subjective and contextual. If used, it needs to be defined.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123565919_\r\n            ",
      "createdAt": "2023-03-07T17:29:25Z",
      "updatedAt": "2023-10-24T00:03:15Z",
      "closedAt": "2023-10-24T00:03:15Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "line breaks complete (#44)\r\n\r\nLocality, verification and registration policies are likely great topics for 117",
          "createdAt": "2023-03-09T23:30:37Z",
          "updatedAt": "2023-03-09T23:30:37Z"
        }
      ]
    },
    {
      "number": 35,
      "id": "I_kwDOIvmHss5gMkV0",
      "title": "Clarification: How does a Transparency Service ensure determinism?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/35",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              how does the TS ensure determinism?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123538125_\r\n            ",
      "createdAt": "2023-03-07T17:32:38Z",
      "updatedAt": "2023-10-24T00:02:38Z",
      "closedAt": "2023-10-24T00:02:37Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117 as I suspect this will take a lot of discussions that won't land by 116.",
          "createdAt": "2023-03-09T23:28:45Z",
          "updatedAt": "2023-03-09T23:28:45Z"
        },
        {
          "author": "pdxjohnny",
          "authorAssociation": "NONE",
          "body": "Potentially related, hashing claims for use as entry IDs: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/79#issuecomment-1767445443",
          "createdAt": "2023-10-18T03:21:33Z",
          "updatedAt": "2023-10-18T03:21:59Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, with the link to #79 as a possible updated tracking item.\r\nPlease re-open if needed, with additional context. ",
          "createdAt": "2023-10-24T00:02:37Z",
          "updatedAt": "2023-10-24T00:02:37Z"
        }
      ]
    },
    {
      "number": 36,
      "id": "I_kwDOIvmHss5gMlbf",
      "title": "Clarification: Describe the properties of a DID resolution",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/36",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              It might be better to describe the properties of manifests that are desired instead of or in addition to simply requiring 'manifests' - which is ambiguous.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123542029_\r\n            ",
      "createdAt": "2023-03-07T17:35:25Z",
      "updatedAt": "2023-10-23T23:44:22Z",
      "closedAt": "2023-10-23T23:44:22Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117, as we dig into more details of the registration policy.",
          "createdAt": "2023-03-09T23:27:33Z",
          "updatedAt": "2023-03-09T23:27:33Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, with updates to CTW Claims (#108) added ",
          "createdAt": "2023-10-23T23:44:22Z",
          "updatedAt": "2023-10-23T23:44:22Z"
        }
      ]
    },
    {
      "number": 37,
      "id": "I_kwDOIvmHss5gMm2j",
      "title": "Clarification: SHOULD | MUST document governance procedure details.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/37",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "multiple-instances"
      ],
      "body": "Clarify what level of detail MUST or SHOULD be captured by a SCITT instance? \r\n\r\n              Why is this a SHOULD and not MUST? Otherwise it is an untrustworthy TS.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123544646_\r\n            ",
      "createdAt": "2023-03-07T17:39:12Z",
      "updatedAt": "2023-10-23T23:36:44Z",
      "closedAt": "2023-10-23T23:36:44Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring what would be in the spec as MUST, vs. what SHOULD. \r\nIt seems there's some clarity around what the spec requires, vs. a good, better, best implementation would do. It's possible some SCITT Transparency Services may have lighter weight infrastructure, but there should be some core capabilities that make a SCITT Transparency Service reliable.",
          "createdAt": "2023-03-09T23:26:26Z",
          "updatedAt": "2023-03-09T23:26:26Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "A number of changes have been applied. Please open new issues/prs with specific references if further is needed. ",
          "createdAt": "2023-10-23T23:36:44Z",
          "updatedAt": "2023-10-23T23:36:44Z"
        }
      ]
    },
    {
      "number": 38,
      "id": "I_kwDOIvmHss5gMoy0",
      "title": "Clarification: Ordering of entities, determinism, verifiable",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/38",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              This requires more explanation. Sounds dubious.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123539145_\r\n            ",
      "createdAt": "2023-03-07T17:44:29Z",
      "updatedAt": "2023-10-24T00:01:26Z",
      "closedAt": "2023-10-24T00:01:25Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117 to provide time for clarification",
          "createdAt": "2023-03-09T23:24:07Z",
          "updatedAt": "2023-03-09T23:24:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Believe this was resolved in #107, here: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/107/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R497\r\n",
          "createdAt": "2023-10-24T00:01:25Z",
          "updatedAt": "2023-10-24T00:01:25Z"
        }
      ]
    },
    {
      "number": 39,
      "id": "I_kwDOIvmHss5gMqhT",
      "title": "Clarification: Define consumer",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/39",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "From a terminology perspective, \"consumer\" can mean:\r\n- End users that \"consume\" software, akin to a consumer of purchased good and services\r\n- Anyone interacting with a SCITT Transparency Service - akin to publishers and consumers of a SCITT Transparency service\r\n\r\nSuggestion for tracking: add \"Consumer\" to the [Terminology](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-terminology) section\r\n\r\n              'consumer' might not be the best term. Does it mean ingress or someone engaging in commerce?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123549835_\r\n            ",
      "createdAt": "2023-03-07T17:49:05Z",
      "updatedAt": "2023-10-23T23:58:01Z",
      "closedAt": "2023-10-23T23:58:00Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "The header under terminology has been added. It now needs the details.\r\nAdding to 116, as this may be small enough to agree a Consumer is someone that interacts with a SCITT Transparency Service. If it takes a lot of discussion, I'd suggest defering to 117",
          "createdAt": "2023-03-09T23:22:29Z",
          "updatedAt": "2023-03-09T23:22:41Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "Yes, simply define as one who interacts with a SCITT service.",
          "createdAt": "2023-03-10T13:52:22Z",
          "updatedAt": "2023-03-10T13:52:22Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "There are references in the doc, as is. Deferring to 117, to create stability for 116.",
          "createdAt": "2023-03-13T16:56:18Z",
          "updatedAt": "2023-03-13T16:56:18Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Completed\r\n",
          "createdAt": "2023-10-23T23:58:00Z",
          "updatedAt": "2023-10-23T23:58:00Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "I_kwDOIvmHss5gMrqp",
      "title": "Clarification: Use of COSE is mandatory, SHOULD | MUST",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/40",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              Since the use of COSE is mandatory, shouldn't this be MUST?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123554033_\r\n            ",
      "createdAt": "2023-03-07T17:52:21Z",
      "updatedAt": "2023-03-10T10:19:25Z",
      "closedAt": "2023-03-10T10:19:24Z",
      "comments": []
    },
    {
      "number": 41,
      "id": "I_kwDOIvmHss5gMy9A",
      "title": "Clarification: Details for what verifiers should offer as options to share receipts.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/41",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "receipts"
      ],
      "body": "              The different available options should be described.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123568871_\r\n            ",
      "createdAt": "2023-03-07T18:12:59Z",
      "updatedAt": "2023-10-23T23:57:34Z",
      "closedAt": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Details about receipts are starting to shape up, but likely wont have all clarity by 116.\r\nDeferring to 117",
          "createdAt": "2023-03-09T23:17:39Z",
          "updatedAt": "2023-03-09T23:17:39Z"
        }
      ]
    },
    {
      "number": 42,
      "id": "I_kwDOIvmHss5gM1QP",
      "title": "Clarification: Multiple SCITT Instances and trust between them",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/42",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "multiple-instances"
      ],
      "body": "There will be multiple instances of SCITT Transparency services, run by different organizations. Multiples will likely exist for private software, where internal information is maintained for compliance and auditing, while public instances will provide the public info. \r\nThe suggestion here is to remove the reference to multiple SCITT Transparency Services trusting each other, as it's accepted that different instances will have different registration policies and neither have to trust the other, rather the consumer has to decide what's applicable to them.\r\n\r\n              If they have different governance, organization trust, and otherwise don't trust each other what is the basis for allowing them to interoperate? This seems very dubious and possibly should be called out as conditions for NOT interoperating.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123571906_\r\n            ",
      "createdAt": "2023-03-07T18:20:25Z",
      "updatedAt": "2023-10-23T23:59:04Z",
      "closedAt": "2023-10-23T23:59:03Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117",
          "createdAt": "2023-03-09T23:16:53Z",
          "updatedAt": "2023-03-09T23:16:53Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "A [Federation](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-04.html#name-federation) section was added. ",
          "createdAt": "2023-10-23T23:59:03Z",
          "updatedAt": "2023-10-23T23:59:03Z"
        }
      ]
    },
    {
      "number": 45,
      "id": "I_kwDOIvmHss5gcInY",
      "title": "Clarification: What options exist for registration policies that don't get published on the ledger?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/45",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Registration Policy",
        "RBAC-ABAC"
      ],
      "body": "              Maybe it would be better if the information owner is expected to apply privacy protections before contributing a Statement?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123624264_\r\n            ",
      "createdAt": "2023-03-09T20:59:51Z",
      "updatedAt": "2023-10-23T23:45:25Z",
      "closedAt": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "The architecture states: \r\n> The Transparency Service is trusted with the confidentiality of the Signed Statements presented for registration. Some Transparency Services may publish every Transparent Statement in their logs, to facilitate their dissemination and auditing. Others may just return Receipts to clients that present Singed Statements for registration, and disclose the ledger only to auditors trusted with the confidentiality of its contents.\r\n\r\nThe above portion has a number of questions that we should clarify:\r\n\r\n> Some Transparency Services may publish every Transparent Statement in their logs.\r\n\r\nIf the Registration Policy denies a statement from being registered, is it written to the diagnostics log? The Architecture uses log and ledger interchangeably. #54 consolidates log and ledger, leaving log to represent a diagnostics log.\r\n\r\n> Others may just return Receipts to clients that present Singed Statements for registration, and disclose the ledger only to auditors trusted with the confidentiality of its contents.\r\n\r\nThis line refers to entries written to the ledger, which may have restricted access. While the architecture doc refers to \"access\" in multiple places, and while I personally don't believe the spec should define the details of Role Based Access Control (RBAC), the topic comes up enough that we should likely define a section for RBAC, that leaves the details to the implementation. #49\r\n\r\n@nedmsmith brings up a question about privacy:\r\n\r\n>   Maybe it would be better if the information owner is expected to apply privacy protections before contributing a Statement?\r\n\r\nCan you clarify a bit? Is this a binary question of transparent or opaque? Or, are you suggesting some more granular privacy protection?",
          "createdAt": "2023-03-09T21:39:32Z",
          "updatedAt": "2023-03-09T23:15:32Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117, giving time for registration policy details. \r\n#54 is triaged to 116, while #49 is set to 117",
          "createdAt": "2023-03-09T23:16:37Z",
          "updatedAt": "2023-03-09T23:16:37Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Moving 119, as we'll hopefully be discussing Registration Policies at 118, and incorporating in 119",
          "createdAt": "2023-10-23T23:45:20Z",
          "updatedAt": "2023-10-23T23:45:20Z"
        }
      ]
    },
    {
      "number": 46,
      "id": "I_kwDOIvmHss5gcLto",
      "title": "Consolidate Log and Ledger",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/46",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [
        "terminology"
      ],
      "body": "The architecture terminology refers to:\r\n\r\n**Registry:** the verifiable append-only data structure that stores Signed Statements in a Transparency Service often referred to by the **synonym log or ledger**. \r\n\r\nTo minimize concept counts, and avoid confusion with diagnostic logs, shall we use Ledger as the persistent form of the Transparency Service?",
      "createdAt": "2023-03-09T21:09:40Z",
      "updatedAt": "2023-05-01T23:58:44Z",
      "closedAt": "2023-05-01T23:58:44Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I am not sure, that we are in a place to declare a winner. Maybe there is a chance to resolve this issue on the Monday meeting. I am not overly optimistic as more important changes are in the cue.",
          "createdAt": "2023-03-09T22:13:09Z",
          "updatedAt": "2023-03-09T22:13:09Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed. Log wasn't used very much, and while I understand the use of \"log\" for the persistence of statements, @nedmsmith highlighted a section that made me wonder if we were tossing failed registration into a diagnostics log, or placed on a RBAC enabled ledger.\r\n\r\nTo your point, I left this open as it warrants discussion.",
          "createdAt": "2023-03-09T22:20:39Z",
          "updatedAt": "2023-03-09T22:20:39Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, in lieu of #60 ",
          "createdAt": "2023-05-01T23:58:43Z",
          "updatedAt": "2023-05-01T23:58:43Z"
        }
      ]
    },
    {
      "number": 49,
      "id": "I_kwDOIvmHss5gcSim",
      "title": "Add RBAC Section",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/49",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "receipts",
        "RBAC-ABAC"
      ],
      "body": "The architecture doc refers to \"access\" in multiple places, and while I personally don't believe the spec should define the details of Role Based Access Control (RBAC), the topic comes up enough that we should likely define a section for RBAC, that leaves the details to the implementation. \r\n\r\nThis is to track an update that:\r\n\r\n- [ ] Captures a section for Role Based Access Control (RBAC), that defines the need, where feeds and possibly some contentTypes may be restricted to permissions assigned to a group\r\n- [ ] Leaves the details to an implementation\r\n- [ ] Defines the behavior if a consumer presents a receipt from the ledger, but the user doesn't have read-level access to the entry. SHOULD/MUST the Transparency Service acknowledges the receipt? Is that disclosure? ",
      "createdAt": "2023-03-09T21:37:12Z",
      "updatedAt": "2023-10-23T23:46:37Z",
      "closedAt": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117",
          "createdAt": "2023-03-09T23:14:30Z",
          "updatedAt": "2023-03-09T23:14:30Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Keeping as it revolves around Receipt validation, which should be clarified in the spec.",
          "createdAt": "2023-10-23T23:46:34Z",
          "updatedAt": "2023-10-23T23:46:34Z"
        }
      ]
    },
    {
      "number": 55,
      "id": "I_kwDOIvmHss5gcl57",
      "title": "Clarification: The registration policy should do revocation checking of identities.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/55",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Registration Policy"
      ],
      "body": "              It might scale better if the TSs request revocation status updates such as OCSP [RFC2560].\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123634020_\r\n            ",
      "createdAt": "2023-03-09T22:58:37Z",
      "updatedAt": "2023-10-23T23:57:14Z",
      "closedAt": "2023-10-23T23:57:14Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think we'll have time to land this for 116. Assigning to 117, giving time for discussion and clarity as we dig into the details of the registration policies.",
          "createdAt": "2023-03-09T23:14:07Z",
          "updatedAt": "2023-03-09T23:14:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale and belief the current doc addresses the original issue.\r\nPlease open new issues/prs with specific pointers if needed",
          "createdAt": "2023-10-23T23:57:14Z",
          "updatedAt": "2023-10-23T23:57:14Z"
        }
      ]
    },
    {
      "number": 57,
      "id": "I_kwDOIvmHss5gc4m8",
      "title": "Document rationale for COSE vs DSSE etc.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/57",
      "state": "CLOSED",
      "author": "nealmcb",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Re: #40:\r\n\r\nThe [SCITT charter](https://datatracker.ietf.org/wg/scitt/about/) says:\r\n> reuse existing work from IETF WGs such as COSE and RATS, as appropriate,\r\n\r\nThe words \"as appropriate\" suggest to me that we should have some discussion of the pros and cons of mandating COSE, and address alternatives.\r\n\r\nIn particular, there is already deployment experience with the closely-related effort [Sigstore](https://www.sigstore.dev/) which uses [DSSE: Dead Simple Signing Envelope](https://github.com/secure-systems-lab/dsse). Some googling will surface a comparison of [Signature Formats. Envelopes and Wrappers and Formats, Oh My! by Dan Lorenc](https://dlorenc.medium.com/signature-formats-9b7b2a127473) which recommends DSSE over the family of JOSE standards, which includes COSE to some extent, though COSE is not covered in that article.\r\n\r\nI think we'd should try to promote interoperability with Sigstore.\r\n\r\nIs there some background info somewhere on advantages of mandating COSE?",
      "createdAt": "2023-03-10T00:41:23Z",
      "updatedAt": "2023-09-12T00:00:10Z",
      "closedAt": "2023-09-04T15:20:15Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @nealmcb,\r\nHere's some background that was in the comment on #16:\r\n\r\n-------\r\n\r\nThanks, @nealmcb. COSE is intrinsic to SCITT as an extensible means to capture headers and payload in a consistent/standards-based format. The evaluation was captured here: [Digital Artifact Signing Envelope Format Comparison](https://docs.google.com/document/d/18YVGA4mq45wfUkWrAqWkymzdHRcXxlwINKXnEp86L0w/edit#heading=h.3v6vw85pjg5e)\r\nAs a result, sigstore/rekor added support through a [draft](https://github.com/sigstore/rekor/pull/731) then [subsequent merged PR](https://github.com/sigstore/rekor/pull/867) ",
          "createdAt": "2023-03-10T01:49:25Z",
          "updatedAt": "2023-03-10T01:49:25Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "Thank you @SteveLasker, that document is very helpful. What is the status and plan for the document, which is undated, marked as a \"Draft\", and has a note that it had been perhaps 1/3 reviewed as of a 2022-03-16 meeting.\r\n\r\nI'll note that Dan Lorenc and Laurent Simon have a number of critiques from last year which I find insightful, and which have not been addressed yet.\r\nThough, as you note, it was also Dan who signed off on supporting COSE in Sigstore's Rekor last June.... ",
          "createdAt": "2023-03-13T00:51:09Z",
          "updatedAt": "2023-03-13T00:51:09Z"
        },
        {
          "author": "roywill",
          "authorAssociation": "NONE",
          "body": "Neal, comparing an industry standard to arbitrary proprietary proposals seems to be a never ending game.  The current implementation of DSSE by SigStore as a starting point seems to be a weak reason to not use COSE.  From a technology point of view hoping the words Simple equals simple is not always true.  The future needs and extensibility of this space begs for mechanisms that pre-exist in COSE.  Having the IETF entertain a different signing serialization format pushes for it to be within the IETF.  Which COSE is.  I want to push back that before entertaining DSSE or something else bringing it to the IETF is the place to start.\r\n\r\nAsking if we should use S/MIME does meet that requirement listed above but picking one is a fair goal.  The COSE format is required for IOT devices and is built with all the knowledge of where S-MIME (and other formats) struggled, leads to it being top contender.  If you want to make a case why it is NOT a great choice, then please take pen to paper and make a case. \r\n\r\nIf the argument is that COSE is frozen and thus cannot be extended, that has been proven false in the current meetings.  The working groups have been very thoughtful and accepting of requirements such as Merkle proof receipts. \r\n\r\nIf the argument is that we should support more than one, we really need to have you explain your reasoning.",
          "createdAt": "2023-03-29T02:53:14Z",
          "updatedAt": "2023-03-29T02:53:14Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Building on IETF standards ensures widely available tooling and an expert community that can provide reviews, and support for profiles and extensions.\r\n\r\nThere is also an IETF procedural detail on citing envelope formats that are not RFCs or of an equivalent maturity level.\r\n\r\nI don't think we should support an envelope format other than COSE. \r\n\r\n",
          "createdAt": "2023-03-29T07:18:29Z",
          "updatedAt": "2023-03-29T07:18:29Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing the issue since there are not further actions.",
          "createdAt": "2023-09-04T15:20:15Z",
          "updatedAt": "2023-09-04T15:20:15Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "I appreciate the discussion here to date - it is helpful! And I don't mean to detract from SCITT progress, or question the decision to build on IETF signature format standards\r\n\r\nBut I still see value in getting more clarity on the technical tradeoffs between COSE and DSSE, as the current title of this issue reflects.\r\n\r\nA comment above describes DSSE as \"proprietary\". It may not be under change control of a recognized standards-making body, but it is [licenced via Apache License 2.0](https://github.com/secure-systems-lab/dsse/blob/master/LICENSE) and thus quite open and not proprietary.\r\n\r\nI note that the draft discussion document at [Digital Artifact Signing Envelope Format Comparison](https://docs.google.com/document/d/18YVGA4mq45wfUkWrAqWkymzdHRcXxlwINKXnEp86L0w/) still has lots of unresolved issues.\r\n\r\nI'll also note that I've added a similar comment to DSSE at [Document rationale for DSSE vs COSE etc](https://github.com/secure-systems-lab/dsse/issues/62).\r\n\r\nIn my mind, ideally the discussion document would end up published in a cleaned-up, if not fully agreed-upon form.\r\n\r\nIf nothing else, perhaps future web searches will more easily surface one of these documents, leading to useful insights.\r\n\r\nIf there is any hope that some folks may continue to engage on those fronts, I'd request that this issue be reopened, to help encourage that.",
          "createdAt": "2023-09-04T20:59:19Z",
          "updatedAt": "2023-09-04T20:59:19Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I closed this issue because I do not see a need to add text comparing a proprietary technology with standardized technology. If there is a decision in SCITT then it is about whehter to use JSON or CBOR (with the corresponding security wrappers). \r\n\r\nAs far as I know there is no ongoing work in the IETF to standardize DSSE. ",
          "createdAt": "2023-09-06T09:14:44Z",
          "updatedAt": "2023-09-06T09:14:44Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "Again, I think it is very misleading to describe DSSE as \"proprietary\". No one has exclusive rights to use it. From everything I see, it is an open spec designed by recognized experts and used by e.g. sigstore and in-toto, which are themselves managed by the Linux Foundation. The documents are [licenced via Apache License 2.0](https://github.com/secure-systems-lab/dsse/blob/master/LICENSE), making the whole thing more open from my standpoint than e.g. ISO standards.\r\n\r\nIt's ok for SCITT and IETF to decide to stick to formats they have better change control over. But I hope others take up the task of an inclusive technical comparison of the relevant signature envelope formats.",
          "createdAt": "2023-09-12T00:00:10Z",
          "updatedAt": "2023-09-12T00:00:10Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "I_kwDOIvmHss5gdLEq",
      "title": "Clarification: Honest reference",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/58",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "              use of 'honest' seems out of place. Is this describing TS operational integrity requirements such as ACID?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123609959_\r\n            ",
      "createdAt": "2023-03-10T02:27:03Z",
      "updatedAt": "2023-10-23T23:56:34Z",
      "closedAt": "2023-10-23T23:56:34Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith, would you like to make a suggestion/PR?",
          "createdAt": "2023-05-02T00:00:52Z",
          "updatedAt": "2023-05-02T00:00:52Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Ping to @nedmsmith for a suggestion",
          "createdAt": "2023-09-05T23:58:11Z",
          "updatedAt": "2023-09-05T23:58:11Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, and belief the latest doc covers the original concern.\r\nPlease open new issues/prs with specific pointers if needed",
          "createdAt": "2023-10-23T23:56:34Z",
          "updatedAt": "2023-10-23T23:56:34Z"
        }
      ]
    },
    {
      "number": 62,
      "id": "I_kwDOIvmHss5h0XKR",
      "title": "using media types for errors",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/62",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "`application/problem+json` vs `application/json`\r\n\r\nhttps://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/60#discussion_r1148486103\r\n\r\nWhy?\r\n\r\nAre there any references for this design choice I can review?",
      "createdAt": "2023-03-26T22:20:37Z",
      "updatedAt": "2023-10-23T23:50:06Z",
      "closedAt": null,
      "comments": [
        {
          "author": "pdxjohnny",
          "authorAssociation": "NONE",
          "body": "Running into this issue in https://github.com/scitt-community/scitt-api-emulator/pull/27 as well.  Would be great to return an object in addition to or instead of a string. Or allow for other properties which would be fully content-typeable to a custom response object within the error response on claim insert failure.\r\n\r\nLack of this prevents an automated conversation to resolve issues with claim insertion. Human readable strings are great, but ideally a human doesn't even get involved and machines can auto remediate issues due to detailed failure reasoning. This way the a human readable string might only be needed after a failed machine driven insert conversation (more than one call response).\r\n\r\nFor example  if the identity is an OIDC token with an invalid subject, the policy error could say what the subject and or other fields should contain or be set to.\r\n\r\n- References\r\n  - https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#example-requiring-a-reusable-workflow\r\n  - https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/using-openid-connect-with-reusable-workflows\r\n  - https://github.com/sigstore/fulcio/issues/305) mentions wanting `job_workflow_ref,repository_id,repository_owner_id` to effectively pin auth to a known workflow. Ideally this expands to attestable stacks, where stack is logged in SCITT, i.e. secure boot (example: [ChromeOS: Attesting Device Mode](https://www.chromium.org/developers/design-documents/tpm-usage/#attesting-device-mode)) and TEEs. A policy engine could require that a notary signed from an attested setup.\r\n    - `gh oidc-sub set --repo org/repo --subs \"job_workflow_ref,repository_id,repository_owner_id\"`\r\n  - `job_workflow_sha` may also be helpful for pinning to a release",
          "createdAt": "2023-04-27T21:17:15Z",
          "updatedAt": "2023-09-14T20:59:06Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Should this move to [SCRAPI](https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/)",
          "createdAt": "2023-10-23T23:49:42Z",
          "updatedAt": "2023-10-23T23:49:42Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "I_kwDOIvmHss5h87XY",
      "title": "Add the URL examples from IETF 116 slides",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/63",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@fournet add your DID URL examples here, then let us argue over their parameters, and work towards a pull request to the architecuture.",
      "createdAt": "2023-03-28T07:25:29Z",
      "updatedAt": "2023-06-05T15:47:27Z",
      "closedAt": "2023-06-05T15:47:27Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "here are some examples from the scitt.xyz prototype:\r\n\r\n- https://ts.example/urn:ietf:params:trans:inclusion:rfc9162_sha256:2:e7f16481e965db422b1d7dadf5c7f205ad6600445f5f9404a76cc85caab81688\r\n\r\n- https://ts.example/urn:ietf:params:trans:consistency:rfc9162_sha256:2:e7f16481e965db422b1d7dadf5c7f205ad6600445f5f9404a76cc85caab81688\r\n\r\nBoth of these are URLs than contain URNs",
          "createdAt": "2023-06-05T15:46:15Z",
          "updatedAt": "2023-06-05T15:46:15Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as a dupe of #66 ",
          "createdAt": "2023-06-05T15:47:27Z",
          "updatedAt": "2023-06-05T15:47:27Z"
        }
      ]
    },
    {
      "number": 65,
      "id": "I_kwDOIvmHss5iQqXQ",
      "title": "Issuer identity and key transparency",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/65",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Consider the case where an issuer of a signed statement has used a decentralized identifier method such as `did:web`.\r\n\r\nSimilar to OIDC, this issuer identity may rotate keys, and we want to know which keys were authoritative at the time of the evaluation of the registration policy.\r\n\r\nThis can be accomplished by having the transparency service leverage its own log to record a \"self notarized did resolution result\".\r\n\r\nHere is an example:\r\n\r\n#### Issuer Signed Statement\r\n\r\n{ iss: did:web:issuer.example, kid: key-0, ctyp: application/vnd.sbom+json } { ...sbom.json }\r\n\r\n#### Notarized Issuer Decentralized Identity Document\r\n\r\n{ iss: did:web:transparency.example, kid: key-1, ctyp: ***application/did+json*** } { ...did.json  }\r\n\r\nexample did document:\r\n\r\n```json\r\n{\r\n  \"@context\": [\r\n    \"https://www.w3.org/ns/did/v1\",\r\n    \"https://w3id.org/security/suites/jws-2020/v1\"\r\n  ],\r\n  \"id\": \"did:web:issuer.example\",\r\n  \"verificationMethod\": [\r\n    {\r\n      \"id\": \"#assertion-key\",\r\n      \"type\": \"JsonWebKey2020\",\r\n      \"controller\": \"did:web:issuer.example\",\r\n      \"publicKeyJwk\": {\r\n        \"kty\": \"EC\",\r\n        \"crv\": \"P-256\",\r\n        \"x\": \"SWlPDkBj-70Ys9Bm3sXw8rycgnfREDrYZIOYX-zegB0\",\r\n        \"y\": \"zYBAHi-xaSyrxy-QhnsrqrgzrLVO60NJUh3tcEwtp0g\"\r\n      }\r\n    },\r\n    {\r\n      \"id\": \"#authentication-key\",\r\n      \"type\": \"JsonWebKey2020\",\r\n      \"controller\": \"did:web:issuer.example\",\r\n      \"publicKeyJwk\": {\r\n        \"kid\": \"did:passkey:W29iamVjdCBBcnJheUJ1ZmZlcl0=\",\r\n        \"kty\": \"EC\",\r\n        \"crv\": \"P-256\",\r\n        \"x\": \"xNk9EZmfryirhVUVsD7lhX6QnRN4C8L-aWBePDODA3I\",\r\n        \"y\": \"LfRm9DlSNtJ0-7vy8UJsIqimAawi04h9gnz66srwxzM\",\r\n        \"key_ops\": [\r\n          \"verify\"\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  \"assertionMethod\": [\r\n    \"did:web:issuer.example#assertion-key\"\r\n  ],\r\n  \"authentication\": [\r\n    \"did:web:issuer.example#authentication-key\"\r\n  ]\r\n}\r\n```",
      "createdAt": "2023-03-31T01:36:26Z",
      "updatedAt": "2023-09-06T00:12:03Z",
      "closedAt": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "This use case also enables the transparency to provide confidence that a given issuer keys are authoritative, and therefore clients of such a service no longer need to contact the web origin used by the issuer.\r\n\r\nThis provides some privacy benefits, since no network log will be created during verification when a suitably fresh receipt for a did document is present.\r\n\r\nThe same \"offline verification benefits\" for \"signed statements\" now apply to \"offline access to issuer key material\".",
          "createdAt": "2023-03-31T01:40:21Z",
          "updatedAt": "2023-03-31T01:40:21Z"
        },
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "I like the general ideal. This is particularly useful with did:web; in fact we implemented something similar in our CCF-based SCITT prototype.\r\n\r\nAn interesting question is how to record this information. It could be in a separate  statement (shared by all statements signed with the resulting key) and/or as an additional registration-time header (possibly referring to a prior resolution statement if we have them). In our prototype, we used a separate enclave to fetch the DID document to sign and attest its correct resolution at the time of registration in a CCF transaction (but not in a custom statement). ",
          "createdAt": "2023-05-16T14:05:50Z",
          "updatedAt": "2023-05-16T14:05:50Z"
        }
      ]
    },
    {
      "number": 66,
      "id": "I_kwDOIvmHss5kVZhk",
      "title": "Policy Identifiers",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/66",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology",
        "receipts"
      ],
      "body": "Purpose of this issue is to disambiguate.\r\n\r\n### Policy\r\n\r\nA file that decides on registration,  (OPA /  REGO / JSON SCHEMA / CDDL, etc...)\r\n\r\n### Content ID for Policy\r\n\r\nA content identifier, such as `urn:sha256:digest(file)`, where file is a Policy.\r\n\r\n### Proposed Policy\r\n\r\nThis is a signed statement, where the statement is a Policy or a Content ID for a Policy\r\n\r\n(Registration policies apply to this object, sorta meta / recursive).\r\n\r\n### Transparent Policy\r\n\r\nA Proposed Policy with a receipt.\r\n\r\nThis is the same as a Transparent Statement for a content type that is a Policy or a Policy Content ID.\r\n\r\nWe think there is utility in defining a URN scheme for this, something like:\r\n\r\nurn + location of transparency service + identifiers for statement or identifiers for policy.\r\n\r\nFor example:\r\n\r\n- `did:web:transparency.example/policy/hash` -> resolves to a policy file\r\n- `did:web:transparency.example/statement-hashes/hash` -> resolves to a signed statement\r\n- `did:web:transparency.example/transparent-statement/hash` -> resolves to a transparent statement\r\n\r\n^ or some combined identifier built form combinations of these.\r\n\r\nIf you don't want DIDs, you can replace `did:web` with `urn:scitt`.",
      "createdAt": "2023-04-25T14:52:31Z",
      "updatedAt": "2023-10-23T23:48:01Z",
      "closedAt": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed dupe: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/63#issuecomment-1577047310",
          "createdAt": "2023-06-05T15:47:12Z",
          "updatedAt": "2023-06-05T15:47:12Z"
        }
      ]
    },
    {
      "number": 67,
      "id": "I_kwDOIvmHss5k4dAF",
      "title": "Do we need dedicated section on SCITT requirements for append-only log?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/67",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [
        "terminology"
      ],
      "body": "Maybe the term \"append-only log\" is self-descriptive and technology-agnostic enough by itself or maybe a set of examples is helpful.",
      "createdAt": "2023-05-02T14:20:29Z",
      "updatedAt": "2023-10-23T23:55:14Z",
      "closedAt": "2023-10-23T23:55:14Z",
      "comments": [
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "Examples could help, as long as we are not too demanding on implementations (notably on their need to commit & persist statements before issuing receipts, on serializability, on replication). This was controversial in several discussions so far. ",
          "createdAt": "2023-05-16T13:56:59Z",
          "updatedAt": "2023-05-16T13:56:59Z"
        },
        {
          "author": "raylutz",
          "authorAssociation": "NONE",
          "body": "I believe there is some functionality that is required that is not encompassed by the notion of an append only log:\r\n1. Ability to somehow tag and group items, perhaps to simulate the ability to add to an existing set of entries. For example, incremental cryptographic data as a larger data set is being built, or another example is test data that is applied later.\r\n\r\n2. Ability to submit just cryptographic data to the log, while storing the data elsewhere.\r\n\r\nThat said, it may also go too far. The idea of an append-only log is perhaps only one possible implementation that can securely store the statements and provide receipts.",
          "createdAt": "2023-05-22T15:00:58Z",
          "updatedAt": "2023-05-22T15:10:04Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, and belief we've captured this. \r\nPlease open new Issues/PRs with new new specific needs",
          "createdAt": "2023-10-23T23:55:14Z",
          "updatedAt": "2023-10-23T23:55:14Z"
        }
      ]
    },
    {
      "number": 69,
      "id": "I_kwDOIvmHss5magEo",
      "title": "URLs for Transparent Statements",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/69",
      "state": "OPEN",
      "author": "fournet",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13",
        "henkbirkholz"
      ],
      "labels": [
        "terminology"
      ],
      "body": "This issue summarizes discussions so far on references between transparent statements---see also slide 22 at the last IETF SCITT session. I am using \"reference\" below but identifier or URL may be better.  \r\n  \r\n**Motivation:** We need a standard way to refer to previously-registered statements. In particular, references to transparent statements may be included in new statements (in headers or payloads or receipts) to point, for example, to a policy statement, to some keying information, to a prior statement it replaces on a given stream, or to statements for artifacts it depends on in the supply chain. \r\n- Using a reference instead of a full transparent statement (or a full receipt) is more efficient (compact, enabling sharing/caching of common statements) and more transparent (everyone benefits from reviews/audits of common statements).\r\n- A reference to a transparent statement is more informative than a reference to its signed statement or its payload.\r\n- References enable federation and advanced registration policies. \r\n \r\n**Goals:**\r\n1. Given a transparent statement, we can compute its reference.\r\n2. Given a reference, we can discover its TS and transparent statement.\r\n3. A reference commits to a unique transparent statement.\r\n \r\n**Syntax:** references include both a locator and a commitment. Concretely, we may use DID URLs of the form \r\n \r\n`did:web:ts.software.org/42&digest=4ce2320130450...` \r\n \r\nwhere `42` is the serial registration index in the log of this TS and `digest` is the SHA256 hash of the transparent statement. \r\n\r\nWe may provide a more compact format by making the DID optional for local references within a TS, and making the digest optional when the transparent statement is attached.  \r\n\r\nWe may even just use the raw digest `4ce2320130450` as an opaque identifier (since the hash already authenticates the locator) and separately deal with locators.  \r\n \r\n**Discoverability** The TS, or an auxiliary database of transparent claims, may support transparent-statement lookups given their reference. This auxiliary lookup service is not a requirement (random access is hard to guarantee) and it need not be trusted (since clients can easily verify the receipt of the resulting transparent statement against their reference). Alternatively, a transparent statement may be distributed together with supporting transparent statements it refers to. This facilitates offline verification and auditing but is more verbose. Or it may include auxiliary headers to help retrieve the supporting statements from any other location.   \r\n\r\n**Open issues:**\r\n- A TS may produce multiple receipts for the same registered statement, hence multiple commitments with different digests. We could simply ignore the problem, and assume the \u201cprimary\u201d receipt is the first one produced by the TS. We could also provide flexibility, using something of the form \r\n  \r\n  `did:web:ts.software.org/42&registered=SHA256(signed statement)&digest=SHA256(receipt)`\r\n- Do we need different formats for different implementations? For example, we may use `digest-sha256=...` for agility; we also argued about a TS federating multiple logs, in which case we may need more than a serial registration index.\r\n \r\n",
      "createdAt": "2023-05-20T16:41:19Z",
      "updatedAt": "2023-10-23T23:50:54Z",
      "closedAt": null,
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "NEW (during WG discussion):\r\n\r\n* Use of DID in the scope of the Internet seems fine at first glance. A SCITT specific URI scheme also seems like a good route (based on comments from Hannes)\r\n* The duty to provide the content at the location the reference points to (maybe after resolving it) is a burden of the issuer, yes?\r\n* A solution specified should take into account historical analog data (that you cannot point at directly via resolved URL), (based on comments from Charlie). In cases of historical data that was previously not online available, there might be an issuer that vouches for having registered the corresponding statement after transforming analog statements into a digital representations and then making them available?\r\n\r\nOLD (I really missed the topic here, nvm):\r\n\r\nThe [SCITT architecture](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html) highlight in [Section 1](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#section-1):\r\n\r\n> A Statements payload content MAY be encrypted and opaque to the Transparency Services, if so desired: however the metadata MUST be transparent in order to warrant trust for later processing.\r\n\r\nFollowing this language, this type of reference would be a... `non-opaque` statement. `A statement that MUST be transparent and that has a well-known (standardized CBOR) structure`, maybe?.",
          "createdAt": "2023-05-22T15:10:24Z",
          "updatedAt": "2023-05-26T14:42:48Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Take a look at:\r\n\r\n- https://docs.ipfs.tech/concepts/content-addressing/\r\n- https://ipld.io/\r\n\r\nLots on inspiration there... see also:\r\n\r\n- https://datatracker.ietf.org/doc/draft-multiformats-multibase/",
          "createdAt": "2023-05-25T17:27:09Z",
          "updatedAt": "2023-05-25T17:27:09Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "NONE",
          "body": "> * https://datatracker.ietf.org/doc/draft-multiformats-multibase/\r\n\r\n???  What is the point of this specification?\r\nMinimizing interoperability while maximizing complexity?",
          "createdAt": "2023-05-26T14:49:04Z",
          "updatedAt": "2023-05-26T14:49:04Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@cabo string encodings for this table: https://github.com/multiformats/multicodec/blob/master/table.csv\r\n\r\nnotice the hash functions, public keys, and other \"binary types\", they get a byte prefix that is uvarint, and then they get a byte prefix for base encoding, such as base64url, base64, base32, base16, base2, base8, base32hex, base32z, base58btc, base58flickr, base64pad.... and of course my favorite: base256emoji\r\n\r\n",
          "createdAt": "2023-06-02T14:00:46Z",
          "updatedAt": "2023-06-02T14:00:46Z"
        }
      ]
    },
    {
      "number": 70,
      "id": "I_kwDOIvmHss5oJGeE",
      "title": "Add package.json for aasvg",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/70",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [],
      "body": "Consider adding `package.json` for this repository so that people are able to use this without having `aasvg` locally installed.\r\n\r\nSee https://github.com/martinthomson/i-d-template/blob/main/doc/TOOLS.md#installing-dependencies-for-ci",
      "createdAt": "2023-06-08T07:03:31Z",
      "updatedAt": "2023-10-23T23:54:28Z",
      "closedAt": "2023-10-23T23:54:27Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz, this seems like a good suggestion. Any additional context as you're our \"build master\" with viz across multiple IETF drafts.",
          "createdAt": "2023-09-06T00:09:16Z",
          "updatedAt": "2023-09-06T00:09:16Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "closing as stale.",
          "createdAt": "2023-10-23T23:54:27Z",
          "updatedAt": "2023-10-23T23:54:27Z"
        }
      ]
    },
    {
      "number": 79,
      "id": "I_kwDOIvmHss5q_F07",
      "title": "Federation part 1",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/79",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "multiple-instances"
      ],
      "body": "This issue tracks initial work to be completed regarding profiling of COSE to support federation for SCITT.\r\n\r\n\r\nSome initial topics that still need to be addressed:\r\n\r\n- How do transparency services discovery each other?\r\n- How do they know if their policies are compatible?\r\n- How do they know if they support the same issuers? \r\n- How do they know if they support the same artifact types?\r\n- How is issuer privacy impacted by federation? ",
      "createdAt": "2023-07-08T12:39:47Z",
      "updatedAt": "2023-10-23T23:55:45Z",
      "closedAt": null,
      "comments": [
        {
          "author": "pdxjohnny",
          "authorAssociation": "NONE",
          "body": "What are folks thoughts on making entry IDs hashes of claims? This would make it easy to manage state because claims and receipts are content addressable. The side effect is one can no longer register the same claim twice under a different entry ID. I wasn't able to find if the SCITT arch doc explicitly defined expected behavior there.\r\n\r\nExample of what this might look like within the SCITT API Emulator: https://github.com/scitt-community/scitt-api-emulator/commit/9c54f9c542f042954e4d02b291ea4856327223be\r\n\r\n```\r\n127.0.0.1 - - [17/Oct/2023 18:08:08] \"POST /entries HTTP/1.1\" 201 -\r\n127.0.0.1 - - [17/Oct/2023 18:08:08] \"GET /entries/sha384:76303a87c3ff728578d1e941ec4422193367e31fd37ab178257536cba79724d6411c457cd3c47654975dc924ff023666/receipt HTTP/1.1\" 200 -\r\n```",
          "createdAt": "2023-10-18T01:16:27Z",
          "updatedAt": "2023-10-18T01:17:12Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In your original comment, you mentioned a default hash algorithm and implementation.\r\n\r\n>The side effect is one can no longer register the same claim twice under a different entry ID.\r\n\r\nDoes this goes for entries under different hash algorithms and implementations, are those count as \"the same\" one entry ID?",
          "createdAt": "2023-10-18T01:47:01Z",
          "updatedAt": "2023-10-18T01:47:01Z"
        },
        {
          "author": "pdxjohnny",
          "authorAssociation": "NONE",
          "body": "At least as I was playing with it in that emulator pull request it the hash algorithm used you be part of the entry ID (similar to container image format reference by sha256 format). It the entry hash algorithm could also be part of the service parameters. If log A and log B had different entry id hash algorithms federation would involve an index or mapping so that federation mechanics don't end up re-inserting a claim which already exists Example: Log A federates Claim A1 to Log B. Log B inserts claim A1 as B1, federates event to Log A which inserts claims as A2. If entries were content addressable it would be fast to determine and A2 is in fact A1 and does not need to be re-inserted. If they aren't the same then a mapping transmitted with the federation event would include the known entry IDs within each log or something.",
          "createdAt": "2023-10-18T03:31:24Z",
          "updatedAt": "2023-10-18T03:31:24Z"
        }
      ]
    },
    {
      "number": 81,
      "id": "I_kwDOIvmHss5rGFHB",
      "title": "Add issue describing relative DID URLs",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/81",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [],
      "body": "based on https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/78/files#r1256894727\r\n\r\nspecifically the JSON and JSON-LD processing of the fragment part...",
      "createdAt": "2023-07-10T13:15:16Z",
      "updatedAt": "2023-09-10T19:01:40Z",
      "closedAt": "2023-09-10T19:01:40Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, does #78 cover this issue?",
          "createdAt": "2023-09-06T00:06:54Z",
          "updatedAt": "2023-09-06T00:06:54Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, I think we can close this one.",
          "createdAt": "2023-09-06T00:10:09Z",
          "updatedAt": "2023-09-06T00:10:09Z"
        }
      ]
    },
    {
      "number": 83,
      "id": "I_kwDOIvmHss5rHgV7",
      "title": "Add references to SBOM technologies",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/83",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [],
      "body": "The architecture draft lists a number of different SBOM technologies. References need to be added and acronymous expanded.\r\nYogesh volunteered to deal with this issue.",
      "createdAt": "2023-07-10T16:34:26Z",
      "updatedAt": "2023-10-23T20:15:31Z",
      "closedAt": "2023-10-23T20:15:30Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@hannestschofenig I will work on this on return from my holidays...",
          "createdAt": "2023-08-18T15:04:45Z",
          "updatedAt": "2023-08-18T15:04:45Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "ping",
          "createdAt": "2023-10-23T15:20:44Z",
          "updatedAt": "2023-10-23T15:20:44Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "ack: shall we attempt this today?",
          "createdAt": "2023-10-23T15:22:49Z",
          "updatedAt": "2023-10-23T15:22:49Z"
        }
      ]
    },
    {
      "number": 84,
      "id": "I_kwDOIvmHss5rHkvN",
      "title": "Requesting that existing software supply chain practice used in digital signatures be supported by SCITT",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/84",
      "state": "CLOSED",
      "author": "rjb4standards",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "As I mentioned during today's call. SCITT is entering into a large, established software supply chain corpus that uses common practices for digital signature verification, including PGP keys and X.509 digital certificates containing public keys. \r\nSCITT adoption of these existing practices will enable seamless adoption of SCITT. Failure to support existing software supply chain practices for digital signatures could prove to be a barrier to SCITT adoption.\r\n\r\nRecommendation: Include support for current software supply chain digital signature practices within the SCITT Architecture.",
      "createdAt": "2023-07-10T16:45:36Z",
      "updatedAt": "2023-07-10T17:15:16Z",
      "closedAt": "2023-07-10T16:49:39Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@rjb4standards here is how you would apply the same text we have for DIDs with COSE to DIDs with PGP:\r\n\r\n*somewhere in your PGP signature meta data*, you would put:\r\n\r\n`did:example:123#key-42` ... and it would need to `dereference` to :\r\n\r\n```\r\n-----BEGIN PGP PUBLIC KEY BLOCK-----\r\nVersion: OpenPGP.js v4.10.9\r\nComment: https://openpgpjs.org\r\nnxjMEYASIXxYJKwYBBAHaRw8BAQdAiEDH3eDo954hWbnf5srnHwL6WfTKXEwu\r\n....\r\n-----END PGP PUBLIC KEY BLOCK-----\r\n```\r\n\r\nThen anyone holding your `PGP Signed Message` would resolve the DID URL to get the key that verifiers the signature.\r\n\r\nInstead of emailing someone your PGP key, you could email them the DID URL that they can use to dereference it.\r\n\r\nThis is similar to how you could send me your PGP key, or you could send me:\r\n\r\nhttps://github.com/rjb4standards.gpg\r\n\r\nA DID URL is just an identifier for a key, that people know how to resolve to the key.\r\n\r\nAnother example: https://github.com/or13.gpg\r\n\r\nHowever, even if you have a PGP key, you will struggle to use it to verify anything other than PGP signatures.",
          "createdAt": "2023-07-10T16:56:31Z",
          "updatedAt": "2023-07-10T16:56:57Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "BTW, here is a CLI that already supports what I am saying: https://github.com/OR13/lds-pgp2021/\r\n\r\nBut it applies to a data format that we don't use in SCITT, \r\ncalled W3C Verifiable Credentials.... \r\nWe also don't use PGP Signatures in SCITT... \r\nbut you could \ud83d\ude87 tunnel \ud83d\ude87 a PGP signature through a cose sign 1 signature as follows:\r\n\r\n\r\n### Signed Statement Protected Header\r\n\r\n```\r\n{\r\n  alg: ES384\r\n  kid: did:example:123#key-42\r\n  content_type: application/pgp-signature\r\n}\r\n```\r\n\r\n### Signed Statement Protected Payload\r\n\r\n```\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQEzBAABCAAdFiEET9QBfWGI/5tPBymeAv7M1jBvKZwFAmAE1TkACgkQAv7M1jBv\r\n....\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n",
          "createdAt": "2023-07-10T17:02:53Z",
          "updatedAt": "2023-07-10T17:04:31Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "NONE",
          "body": "That looks reasonable Orie. \r\n\r\n \r\n\r\nDo you also have an example for X.509 cert support?\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nThanks,\r\n\r\n \r\n\r\nDick Brooks\r\n\r\n  \r\n\r\nActive Member of the CISA Critical Manufacturing Sector, \r\n\r\nSector Coordinating Council \u2013 A Public-Private Partnership\r\n\r\n \r\n\r\n <https://reliableenergyanalytics.com/products> Never trust software, always verify and report! \u2122\r\n\r\n <http://www.reliableenergyanalytics.com/> http://www.reliableenergyanalytics.com\r\n\r\nEmail:  ***@***.***> ***@***.***\r\n\r\nTel: +1 978-696-1788\r\n\r\n \r\n\r\n \r\n\r\nFrom: Orie Steele ***@***.***> \r\nSent: Monday, July 10, 2023 12:57 PM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Dick Brooks (REA) ***@***.***>; Mention ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Requesting that existing software supply chain practice used in digital signatures be supported by SCITT (Issue #84)\r\n\r\n \r\n\r\n@rjb4standards <https://github.com/rjb4standards>  here is how you would apply the same text we have for DIDs with COSE to DIDs with PGP:\r\n\r\nsomewhere in your PGP signature meta data, you would put:\r\n\r\ndid:example:123#key-42 ... and it would need to dereference to :\r\n\r\n-----BEGIN PGP PUBLIC KEY BLOCK-----\r\nVersion: OpenPGP.js v4.10.9\r\nComment: https://openpgpjs.org\r\nnxjMEYASIXxYJKwYBBAHaRw8BAQdAiEDH3eDo954hWbnf5srnHwL6WfTKXEwu\r\n....\r\n-----END PGP PUBLIC KEY BLOCK-----\r\n\r\nThen anyone holding your PGP Signed Message would resolve the DID to get the key that verifiers the signature.\r\n\r\nInstead of emailing someone your PGP key, you could email them the DID URL that they can use to dereference it.\r\n\r\nThis is similar to how you could send me your PGP key, or you could send me:\r\n\r\nhttps://github.com/rjb4standards.gpg\r\n\r\nA DID URL is just an identifier for a key, that people know how to resolve to the key.\r\n\r\nAnother example: https://github.com/or13.gpg\r\n\r\nHowever, even if you have a PGP key, you will struggle to use it to verify anything other than PGP signatures.\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/84#issuecomment-1629357095> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABFI3NEUZESIYBZTORTTM3DXPQX4VANCNFSM6AAAAAA2EZVHRU> .\r\nYou are receiving this because you were mentioned.Message ID: ***@***.***>\r\n\r\n",
          "createdAt": "2023-07-10T17:05:21Z",
          "updatedAt": "2023-07-10T17:05:21Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "You can also do the same with W3C Verifiable Credentials:\r\n\r\n\r\n### Signed Statement Protected Header\r\n\r\n```\r\n{\r\n  alg: ES384\r\n  kid: did:example:123#key-42\r\n  content_type: application/vc+ld+jwt\r\n}\r\n```\r\n\r\n### Signed Statement Protected Payload\r\n\r\n```\r\neyJhbGciOiJFUzM4NCIsInR5cCI6InZjK2xkK2p3dCIsImlzcyI6ImRpZDp3ZWI6Y29udG9zby5\r\nleGFtcGxlIiwiaWF0IjoxNjg4MTU1NDg2fQ.eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5\r\nvcmcvbnMvY3JlZGVudGlhbHMvdjIiLCJodHRwczovL3d3dy53My5vcmcvbnMvY3JlZGVudGlhbH\r\nMvZXhhbXBsZXMvdjIiXSwiaWQiOiJodHRwczovL2NvbnRvc28uZXhhbXBsZS9jcmVkZW50aWFsc\r\ny8zNTMyNzI1NSIsInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJLWUNFeGFtcGxlIl0s\r\nImlzc3VlciI6ImRpZDp3ZWI6Y29udG9zby5leGFtcGxlIiwidmFsaWRGcm9tIjoiMjAxOS0wNS0\r\nyNVQwMzoxMDoxNi45OTJaIiwidmFsaWRVbnRpbCI6IjIwMjctMDUtMjVUMDM6MTA6MTYuOTkyWi\r\nIsImNyZWRlbnRpYWxTY2hlbWEiOnsiaWQiOiJodHRwczovL2NvbnRvc28uZXhhbXBsZS9iYWZ5Y\r\nmVpZ2R5ci4uLmxxYWJmM29jbGd0cXk1NWZiemRpIiwidHlwZSI6Ikpzb25TY2hlbWEifSwiY3Jl\r\nZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6ZXhhbXBsZToxMjMxNTg4IiwidHlwZSI6IlBlcnN\r\nvbiJ9fQ.Mc6KqMurMIl2XfqY9_4abKvBJszOHEz4wQhHckwbVnkcb2cI1OH7JCu-YL9PK9-5_CA\r\n4egZZoM6yOr7FyOtOCHQFFaK-GNmtCAz-ydJGd6827u28B4pAbyk6ceJjmVWL\r\n```\r\n\r\n",
          "createdAt": "2023-07-10T17:05:59Z",
          "updatedAt": "2023-07-10T17:05:59Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@rjb4standards I'm not really an expert on JOSE or COSE x509, \r\n\r\nSee: https://datatracker.ietf.org/doc/html/rfc9360#name-x509-cose-header-parameters\r\n\r\nBut I think something like this would solve it:\r\n\r\n### Signed Statement Protected Header\r\n\r\n```\r\n{\r\n  alg: ES384\r\n  x5chain: ....\r\n  x5t: ....\r\n  x5u: ...\r\n  content_type: application/spdx+json\r\n}\r\n```\r\n\r\n### Signed Statement Protected Payload\r\n\r\n```\r\n.... \r\n```\r\n\r\n`kid` and `iss` are not meaningful to x509... or are they?... thats what would need to be documented.",
          "createdAt": "2023-07-10T17:09:00Z",
          "updatedAt": "2023-07-10T17:09:40Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "NONE",
          "body": "I\u2019ve provided an X.509 example to consider:\r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nThanks,\r\n\r\n \r\n\r\nDick Brooks\r\n\r\n  \r\n\r\nActive Member of the CISA Critical Manufacturing Sector, \r\n\r\nSector Coordinating Council \u2013 A Public-Private Partnership\r\n\r\n \r\n\r\n <https://reliableenergyanalytics.com/products> Never trust software, always verify and report! \u2122\r\n\r\n <http://www.reliableenergyanalytics.com/> http://www.reliableenergyanalytics.com\r\n\r\nEmail:  ***@***.***> ***@***.***\r\n\r\nTel: +1 978-696-1788\r\n\r\n \r\n\r\n \r\n\r\nFrom: Orie Steele ***@***.***> \r\nSent: Monday, July 10, 2023 1:09 PM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Dick Brooks (REA) ***@***.***>; Mention ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Requesting that existing software supply chain practice used in digital signatures be supported by SCITT (Issue #84)\r\n\r\n \r\n\r\n@rjb4standards <https://github.com/rjb4standards>  I'm not really an expert on JOSE or COSE x509,\r\n\r\nSee: https://datatracker.ietf.org/doc/html/rfc9360#name-x509-cose-header-parameters\r\n\r\nBut I think something like this would solve it:\r\n\r\n\r\nSigned Statement Protected Header\r\n\r\n{\r\n  alg: ES384\r\n  x5chain: ....\r\n  x5t: ....\r\n  x5u: ...\r\n  content_type: application/spdx+json\r\n}\r\n\r\nSigned Statement Protected Payload\r\n\r\n.... \r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/84#issuecomment-1629376319> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABFI3NDOVHKG7LN7IDJ5SVLXPQZLPANCNFSM6AAAAAA2EZVHRU> .\r\nYou are receiving this because you were mentioned.Message ID: ***@***.***>\r\n\r\n",
          "createdAt": "2023-07-10T17:15:16Z",
          "updatedAt": "2023-07-10T17:15:16Z"
        }
      ]
    },
    {
      "number": 86,
      "id": "I_kwDOIvmHss5rhJwe",
      "title": "REST API Thoughts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/86",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "APIs"
      ],
      "body": "## Key From Message\r\n\r\nPOST key.trans.scitt/resolve/verification-key\r\n{ ... prefer detached siganture }\r\n---content-type application/jwt            --> application/jwk+json\r\n---content-type application/cwt            --> application/cose-key\r\n---content-type application/pgp-signature  --> application/pgp-keys\r\n---content-type application/vc+ld+json     --> application/did+ld+json\r\n---content-type application/vc+json        --> application/did+json\r\n---content-type application/vc+sd-jwt      --> application/did+json\r\n---content-type application/vc+sd-jwt      --> application/jwk+json\r\n\r\n... cache public key locally indexed by meta data (iss, kid) ...\r\n\r\n... verify offline from cache\r\n\r\n## Feed ( Assertion Keys ) From Verified Messages\r\n\r\nGET key.trans.scitt/ {iss}   /verification-keys \r\n  -> feed of all public keys witnessed verifying signed statements for \"iss\" or \"kid\" ...\r\n\r\nDo we want these? https://www.w3.org/TR/did-core/#verification-relationships\r\n\r\n## Feed ( Artifact Statements ) From Verified Messages\r\n\r\nGET key.trans.scitt/ {iss}   /gtin/01/9506000134352\r\n  -> feed of all related signed statements from \"iss\" or \"kid\" ...\r\n\r\nGeneric feed URL structure:\r\n\r\n{iss} / {topic}\r\n      ? {filters} \r\n      # {client-hint}\r\n\r\ndid:example:123/gtin/01/9506000134352?origin-country=US#product-name\r\n\r\nGeneric values for iss:\r\n\r\nDomain: example.com\r\nDID: did:example:123\r\n... ?",
      "createdAt": "2023-07-13T22:34:20Z",
      "updatedAt": "2023-10-24T00:04:38Z",
      "closedAt": "2023-10-24T00:04:38Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Related to `vc` or `vc+ld+jwt`... https://openid.net/specs/openid-connect-userinfo-vc-1_0.html#name-userinfo-vc-verification",
          "createdAt": "2023-07-14T14:29:31Z",
          "updatedAt": "2023-07-14T14:29:31Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Should this move to [SCRAPI](https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/)",
          "createdAt": "2023-10-23T23:51:23Z",
          "updatedAt": "2023-10-24T00:04:23Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing. Please reactivate, or open in SCRAPI",
          "createdAt": "2023-10-24T00:04:38Z",
          "updatedAt": "2023-10-24T00:04:38Z"
        }
      ]
    },
    {
      "number": 87,
      "id": "I_kwDOIvmHss5rlelm",
      "title": "Document key discovery for OIDC",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/87",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@Sakurann mentioned we should reference more, and repeat or \"redefine\" less.... I agree.\r\n\r\nWe can possibly refer to this: \r\n\r\n- https://openid.net/specs/openid-connect-userinfo-vc-1_0.html#name-userinfo-vc-verification",
      "createdAt": "2023-07-14T14:32:30Z",
      "updatedAt": "2023-10-23T23:51:51Z",
      "closedAt": null,
      "comments": [
        {
          "author": "pdxjohnny",
          "authorAssociation": "NONE",
          "body": "How do we see OIDC working with SCITT other than for auth? I'm having trouble understanding how we could use a token as the issuer of a claim. It seems like that would immediately leak the token upon insertion to the log.",
          "createdAt": "2023-09-12T16:23:21Z",
          "updatedAt": "2023-09-12T16:23:21Z"
        }
      ]
    },
    {
      "number": 89,
      "id": "I_kwDOIvmHss5uQH-2",
      "title": "Harmonize Terms \"Auditor\", \"Consumer\" and \"Verifier\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/89",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "fournet"
      ],
      "labels": [
        "terminology"
      ],
      "body": "I think it would be better to use one common term for these roles since they are currently not well defined. For the specification work it does not matter whether an auditor, consumer or a verifier checks the append-only log.\r\n\r\nUsing only one term simplifies the document.",
      "createdAt": "2023-08-14T12:53:17Z",
      "updatedAt": "2023-10-23T23:03:49Z",
      "closedAt": "2023-10-23T23:03:48Z",
      "comments": [
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "We build on [RFC 9162 - Certificate Transparency Version 2.0](https://datatracker.ietf.org/doc/html/rfc9162) (CT) in various ways. CT defines the roles of \"monitor\" and \"auditor\":\r\n\r\n*   Monitors watch logs to check for correct behavior, for certificates of interest, or for both. For example, a monitor may be configured to report on all certificates that apply to a specific domain name when fetching new entries for consistency validation.\r\n\r\n* Auditing ensures that the current published state of a log is reachable from previously published states that are known to be good and that the promises made by the log, in the form of SCTs, have been kept. Audits are performed by monitors or TLS clients.\r\n\r\nI'm not up-to-date, but it would seem useful to define how the ecosystem can gain confidence that SCITT transparency logs are following the append-only rules, perhaps via similar roles as used in CT. Such client use cases may well have some different requirements for various aspects of the architecture or APIs, than what I'll call \"relying parties\" who are concerned with verifying a specific claim.",
          "createdAt": "2023-08-21T15:42:09Z",
          "updatedAt": "2023-08-21T15:42:09Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, as the current 04 draft moved to Auditor and Verifier. \r\nThere's additional debate, but this appears to be complete as those terms were adopted (per the title)",
          "createdAt": "2023-10-23T23:03:48Z",
          "updatedAt": "2023-10-23T23:03:48Z"
        }
      ]
    },
    {
      "number": 90,
      "id": "I_kwDOIvmHss5uQIpv",
      "title": "Harmonize terms \"issuer\" and \"client\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/90",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "The terminology section introduces the term \"issuer\" and it is a core role throughout the document. However, late in the spec the term \"client\" is then also introduced and it is not clear what the relationship between the issuer and the client is.\r\n\r\nI would recommend to only use issuer through the whole document.",
      "createdAt": "2023-08-14T12:54:59Z",
      "updatedAt": "2023-10-23T23:52:32Z",
      "closedAt": "2023-10-23T23:52:31Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved with #118",
          "createdAt": "2023-10-23T23:52:31Z",
          "updatedAt": "2023-10-23T23:52:31Z"
        }
      ]
    },
    {
      "number": 91,
      "id": "I_kwDOIvmHss5uQMTL",
      "title": "The use of \"SHOULD\" throughout the spec",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/91",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "ad-l"
      ],
      "labels": [
        "terminology"
      ],
      "body": "The specification uses the RFC 2119 \"SHOULD\" all over the place. A SHOULD needs to come with a description of when the developer should follow it and when it is not appropriate. Too many SHOULDs do not help with interoperability.\r\n\r\nAlso, check the use of normative language: Is it possible to create a test case that will help to improve interoperability?\r\n\r\nFor example, in the following sentence the use of the SHOULD is not useful:\r\n\r\n\"\r\nIssuers SHOULD use consistent decentralized identifiers for all their Statements about Artifacts, to simplify authorization by Verifiers and auditing.\r\n\"\r\n\r\nThe reader might ask themselves:\r\n\r\n* When should I use \"inconsistent decentralized identifiers\"?\r\n* What is a consistent decentralized identifier?\r\n\r\nHere is another sentence:\r\n\r\n\"\r\nIssuers MAY choose the DID method they prefer, but with no guarantee that all Transparency Services will be able to register their Signed Statements. To facilitate interoperability, all Transparency Service implementations SHOULD support the did:web method [[DID-WEB](https://w3c-ccg.github.io/did-method-web/)].\r\n\"\r\n\r\nWhy is there a SHOULD in this sentence instead of a MUST? If you want to accomplish interoperability you have to put a MUST there.\r\n",
      "createdAt": "2023-08-14T13:04:02Z",
      "updatedAt": "2023-09-19T14:51:46Z",
      "closedAt": "2023-09-19T14:51:45Z",
      "comments": [
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "See #95 ",
          "createdAt": "2023-08-29T13:53:29Z",
          "updatedAt": "2023-08-29T13:53:29Z"
        }
      ]
    },
    {
      "number": 92,
      "id": "I_kwDOIvmHss5uQNz8",
      "title": "Formatting of Section 5.1.1.1.1. Comment on OIDC",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/92",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "OR13"
      ],
      "labels": [],
      "body": "The formatting of that section is a nightmare. It makes me wonder whether it makes more sense to just illustrate an incomplete example. For example:\r\n\r\n```\r\n{\r\n   \"keys\":[\r\n      {\r\n         \"alg\":\"RS256\",\r\n         \"kty\":\"RSA\",\r\n         \"use\":\"sig\",\r\n         \"n\":\"wW9...4zw\",\r\n         \"e\":\"AQAB\",\r\n         \"kid\":\"NTBG..U5OA\",\r\n         \"x5t\":\"NTBG..U5OA\",\r\n         \"x5c\":[\r\n            \"MII...g3R+\"\r\n         ]\r\n      },\r\n      {\r\n         \"alg\":\"RS256\",\r\n         \"kty\":\"RSA\",\r\n         \"use\":\"sig\",\r\n         \"n\":\"ylg...DWw\",\r\n         \"e\":\"AQAB\",\r\n         \"kid\":\"aMI...9ln\",\r\n         \"x5t\":\"-xcT...Tbs\",\r\n         \"x5c\":[\r\n            \"MII...FZdA==\"\r\n         ]\r\n      }\r\n   ]\r\n}\r\n```",
      "createdAt": "2023-08-14T13:07:41Z",
      "updatedAt": "2023-10-23T23:53:43Z",
      "closedAt": "2023-10-23T23:53:42Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved as fixed.",
          "createdAt": "2023-10-23T23:53:42Z",
          "updatedAt": "2023-10-23T23:53:42Z"
        }
      ]
    },
    {
      "number": 93,
      "id": "I_kwDOIvmHss5uQPMe",
      "title": "Terminology: signed statement vs. envelope",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/93",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Section 6.1 describes the CDDL of the signed statement and calls it envelope. Why don't you call it signed statement?",
      "createdAt": "2023-08-14T13:11:14Z",
      "updatedAt": "2023-10-23T23:52:08Z",
      "closedAt": "2023-10-23T23:52:08Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed this in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/94",
          "createdAt": "2023-09-04T15:01:43Z",
          "updatedAt": "2023-09-04T15:01:43Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "I_kwDOIvmHss5wzzdy",
      "title": "Discovery of service parameters for receipt verification",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/96",
      "state": "CLOSED",
      "author": "pdxjohnny",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Knowledge of SCITT's tree algorithm and parameters for that tree algorithm are required for a client to verify receipts. It seems like we need to have an endpoint to enable discovery of those parameters.",
      "createdAt": "2023-09-12T14:18:47Z",
      "updatedAt": "2023-10-18T03:31:39Z",
      "closedAt": "2023-09-12T15:27:38Z",
      "comments": [
        {
          "author": "pdxjohnny",
          "authorAssociation": "NONE",
          "body": "Nevermind the client code just need to get the tree alg from the receipt.",
          "createdAt": "2023-09-12T15:27:38Z",
          "updatedAt": "2023-09-12T15:27:38Z"
        },
        {
          "author": "pdxjohnny",
          "authorAssociation": "NONE",
          "body": "Related: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/79#issuecomment-1767570492",
          "createdAt": "2023-10-18T03:31:38Z",
          "updatedAt": "2023-10-18T03:31:38Z"
        }
      ]
    },
    {
      "number": 97,
      "id": "I_kwDOIvmHss5xb9FT",
      "title": "Using only qualified \"Issuers\" for clarity",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/97",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "We should consider to use \"Statement Issuer\" and \"Receipt Issuer\" consistently instead of allowing for using stand-alone \"issuer\" - for better clarity.\r\nBase on Orie's comment: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/95/files#r1308908322",
      "createdAt": "2023-09-19T14:43:02Z",
      "updatedAt": "2023-10-23T23:40:46Z",
      "closedAt": "2023-10-23T23:40:45Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "cross linking other issues with context:\r\n\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/65\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/8\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/23\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/97",
          "createdAt": "2023-09-19T15:42:29Z",
          "updatedAt": "2023-09-19T15:42:29Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I suggest the following changes to the architecture:\r\n\r\n1. Revise \"issuer\" in terminology, and align it to \"iss\".\r\n2. Add \"Statement Issuer\" and \"Receipt Issuer\" to terminology, and clarify that they both rely on `iss`, and reflect the identifier of the entity making statements about artifacts and the entity making those statements transparent (aka the transparency service).\r\n3. Clarify that `iss` MUST be a DID.\r\n4. Clarify that `kid` MUST be a relative DID URL which `iss` as the base.",
          "createdAt": "2023-09-19T15:52:20Z",
          "updatedAt": "2023-09-19T15:52:20Z"
        },
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "1. Why is it important to align to \"iss\"? \r\n2. For now we use \"Transparency Service\" instead of \"Receipt Issuer\". Are you suggesting we merge the two? Otherwise where do we need to explicitly write \"Receipt Issuer\" in SCITT? Also, should \"Statement Issuer\" not be \"Signed Statement Issuer\" if it is fully qualified? In general the statement (e.g. the SBOM) is produced  by some of the party before being endorsed by the Issuer. \r\n3. Ok\r\n4. Does it apply both to statement signatures and receipts? ",
          "createdAt": "2023-09-19T17:54:35Z",
          "updatedAt": "2023-09-19T18:09:39Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale. Please reopen if need for the current draft",
          "createdAt": "2023-10-23T23:40:45Z",
          "updatedAt": "2023-10-23T23:40:45Z"
        }
      ]
    },
    {
      "number": 98,
      "id": "I_kwDOIvmHss5xb9H1",
      "title": "Better address implementation requirements of DID methods",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/98",
      "state": "CLOSED",
      "author": "ad-l",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ad-l"
      ],
      "labels": [],
      "body": "Current text is ambiguous about what TS must support vs what implementations of SCITT must implement. ",
      "createdAt": "2023-09-19T14:43:08Z",
      "updatedAt": "2023-10-23T23:41:24Z",
      "closedAt": "2023-10-23T23:41:24Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, with updates for SHOULD, MUST applied",
          "createdAt": "2023-10-23T23:41:24Z",
          "updatedAt": "2023-10-23T23:41:24Z"
        }
      ]
    },
    {
      "number": 99,
      "id": "I_kwDOIvmHss5xb-m2",
      "title": "Adjust language in PR",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/99",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [
        "terminology"
      ],
      "body": "I don't love the language we added in:\r\n\r\n> If an issuer uses multiple DIDs (for instance, because their clients support different resolution methods), they MUST ensure that statements signed under each DID are consistent.\r\n\r\nhttps://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/95#discussion_r1308967013\r\n\r\nI said:\r\n\r\n> The verifier is interested in the authenticity of the issuer of the transparent statement and signed statement... The verifier trusts the TS to vet the issuer of the signed statement... the verifier benefits from the transparency service, if they can't trust the TS, there is no reason to do SCITT.\r\n\r\n",
      "createdAt": "2023-09-19T14:46:20Z",
      "updatedAt": "2023-10-24T00:01:19Z",
      "closedAt": "2023-10-24T00:01:19Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I suggest we remove the MUST here, and just say that verifiers are required to trust all issuer keys associated with issuer identifiers, in order to perform their role.",
          "createdAt": "2023-09-19T14:59:13Z",
          "updatedAt": "2023-09-19T14:59:13Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, I just saw this. Can you this to a PR, and maybe update the Title of this issue?",
          "createdAt": "2023-10-23T23:01:04Z",
          "updatedAt": "2023-10-23T23:01:04Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the whole section on DIDs needs to be reworked.\n\nAlso the VCWG is currently trying to generalize the concept of DIDs to controller documents... And I'm starting to feel that perhaps it's better to remove references to them entirely.",
          "createdAt": "2023-10-23T23:05:34Z",
          "updatedAt": "2023-10-23T23:05:34Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, with the request to open a specific issue to DIDs, or build on #117 or #36 ",
          "createdAt": "2023-10-23T23:43:32Z",
          "updatedAt": "2023-10-23T23:43:32Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Accidental re-open for the wrong issue",
          "createdAt": "2023-10-24T00:01:19Z",
          "updatedAt": "2023-10-24T00:01:19Z"
        }
      ]
    },
    {
      "number": 100,
      "id": "I_kwDOIvmHss5xcA7c",
      "title": "Review all COSE parameters and normalize text and integers",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/100",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [],
      "body": "All our text references should look like:\r\n\r\n![Screen Shot 2023-09-19 at 9 51 01 AM](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/8295856/fc7507bc-dd37-4e8c-b68e-a5d5c65270ba)\r\n",
      "createdAt": "2023-09-19T14:51:19Z",
      "updatedAt": "2023-10-23T23:47:25Z",
      "closedAt": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Will align the text, before we cut the draft for 118",
          "createdAt": "2023-09-19T14:56:49Z",
          "updatedAt": "2023-09-19T14:56:49Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Missed this one, although we did get some updates. in for 118",
          "createdAt": "2023-10-23T23:47:21Z",
          "updatedAt": "2023-10-23T23:47:21Z"
        }
      ]
    },
    {
      "number": 102,
      "id": "I_kwDOIvmHss5xgoJV",
      "title": "Add client in terminology",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/102",
      "state": "OPEN",
      "author": "nikosft",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "In section 5.2.3.3 `client` appears out of the blue. It is not clear what a `client` is. ",
      "createdAt": "2023-09-20T07:46:53Z",
      "updatedAt": "2023-10-24T13:48:24Z",
      "closedAt": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi, @nikosft \r\nI'm looking for the reference to 5.2.3.3 in https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html and other versions. \r\nI don't see where that section exists.\r\nAre you referring to a reference where a client is calls the Transparency Service APIs?\r\nOr, as there a mention of \"client, synonymous with consumer, verifier, etc?\r\n",
          "createdAt": "2023-10-23T22:59:49Z",
          "updatedAt": "2023-10-23T22:59:49Z"
        },
        {
          "author": "nikosft",
          "authorAssociation": "NONE",
          "body": "E.g., \r\n\r\n> a Transparency Service MAY additionally support verifiability of client authentication and access control\r\n\r\nIs the client the issuer itself? A piece of software that the issuer uses (e.g., a la OAuth2 client)? Does it refer to any role (issuer, verifier, auditor)? IMHO the text should be more specific, e.g., Certificate Transparency RFC explicitly mentions `TLS client`\r\n",
          "createdAt": "2023-10-24T07:38:59Z",
          "updatedAt": "2023-10-24T07:38:59Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @nikosft \r\nThe above text is from Draft 04: [5.2.3.3. ](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-04.html#section-5.2.3.3)[Replayability and Auditing](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-04.html#name-replayability-and-auditing)\r\n\r\nI've labeled it for terminology clarification. ",
          "createdAt": "2023-10-24T13:48:16Z",
          "updatedAt": "2023-10-24T13:48:16Z"
        }
      ]
    },
    {
      "number": 103,
      "id": "I_kwDOIvmHss5yEQGq",
      "title": "Refine Definition of Reg_Info",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/103",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "```\r\nReg_Info = {\r\n  ? \"register_by\": uint .within (~time),\r\n  ? \"sequence_no\": uint,\r\n  ? \"issuance_ts\": uint .within (~time),\r\n  ? \"no_replay\": null,\r\n  * tstr => any\r\n}\r\n```\r\n\r\nhttps://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/0383ec2b5a23f11d1a42800aebbe38368e12376d/draft-ietf-scitt-architecture.md?plain=1#L670\r\n\r\nIMO these are parameters on the issuer's view of the feed identifier.\r\n\r\nsequence number is meaningless unless you know what topic you are trying to order.",
      "createdAt": "2023-09-26T15:00:22Z",
      "updatedAt": "2023-10-23T23:40:06Z",
      "closedAt": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I'd prefer to eliminate `Reg_Info` if possible, to keep the scitt envelopes as simple as possible, and to reuse related work, such as:\r\n\r\n- https://datatracker.ietf.org/doc/draft-ietf-cose-cwt-claims-in-headers/\r\n- https://datatracker.ietf.org/doc/draft-ietf-rats-eat/12/\r\n\r\nConsider the following alternative to:\r\n\r\n```\r\n\r\n1 => alg // ES384\r\n\r\n3 => content type \r\n// application/xml \r\n// application/json\r\n// application/cbor\r\n\r\n3 => kid \r\n// NzbLsXh8uDCcd-6MNwXF4W_7noWXFZAfHkxZsRGC9Xs  \r\n// urn:ietf:params:oauth:jwk-thumbprint:sha-256:NzbLsXh8uDCcd-6MNwXF4W_7noWXFZAfHkxZsRGC9Xs\r\n// 42\r\n      \r\n13 => CWT_Claims = {\r\n\r\n  1 => iss, \r\n  // example.com\r\n  // did:example:123\r\n  // urn:uuid:9a652678-4616-475d-af12-aca21cfbe06d\r\n  // fooBar\r\n\r\n  2 => sub, \r\n  // pkg:docker/customer/dockerimage@sha256:244fd47e07d1004f0aed9c?repository_url=gcr.io\r\n  // https://example.org/01/ { gtin } { ? exp }\r\n  // 5bdd1802-b0d9-4c27-b86c-8df099ef377e\r\n  // LibreOffice\r\n  // liber_office\r\n\r\n  3 => aud\r\n  // transparency.vendor1.example\r\n  // transparency.vendor2.example\r\n  // 8be80f34-4cc1-4e2b-a27e-79459c6bba11\r\n  // transparency.regulator3.example\r\n  \r\n  5 => nbf\r\n  // unix timestamp (not a secure timestamp)\r\n  \r\n  6 => iat\r\n  // unix timestamp (not a secure timestamp)\r\n  \r\n  257 => [sueids](https://datatracker.ietf.org/doc/html/draft-ietf-rats-eat-12#name-semi-permanent-ueids-sueids)\r\n  \r\n  \r\n  ...\r\n  \r\n  393 => Reg_Info // all the scitt fields we need that are not already defined better, by other WGs...\r\n  \r\n```",
          "createdAt": "2023-10-09T17:41:59Z",
          "updatedAt": "2023-10-09T17:43:43Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "\"subject\" is already used by many other standards:\r\n\r\n- https://w3c.github.io/vc-data-model/#credential-subject\r\n- https://pages.nist.gov/800-63-3/sp800-63-3.html\r\n\r\nAnd probably others.... \r\n\r\nThe dictionary definition of subject:\r\n\r\ne\r\n(1)\r\n: the term of a logical proposition that denotes the entity of which something is affirmed or denied\r\nalso : the entity denoted\r\n(2)\r\n: a word or word group denoting that of which something is predicated\r\n\r\n- https://www.merriam-webster.com/dictionary/subject\r\n\r\nIn plan english \"Statements are about Artifacts.... Artifacts are the subject of statements\".\r\n\r\n\"Software ABC, has Vulnerabilities XYZ\"\r\n\r\n\"Software ABC\" is the \"subject\"\r\n\r\n\"Vulnerabilities XYZ\" is the \"predicate\" (and its value is true).\r\n\r\n\"Software ABC, does not have Vulnerabilities XYZ\"\r\n\r\n\"Vulnerabilities XYZ\" is the \"predicate\" (and its value is false).\r\n\r\n\"Software ABC\" is still the subject...\r\n\r\n... etc...",
          "createdAt": "2023-10-09T18:08:11Z",
          "updatedAt": "2023-10-09T18:26:34Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "to furnish something essential to the development, sustenance, maintenance, or operation of...\r\n\r\nb\r\n: to supply (material to be operated on) to a machine\r\nc\r\n(1)\r\n: to insert and deposit (something) repeatedly or continuously\r\n(2)\r\n: to insert and deposit something into (something)\r\n\r\n- https://www.merriam-webster.com/dictionary/feed\r\n\r\nA feed is what you put into or get out of a transparency service... feeds are \"about subjects\", which are identified via \"sub\".\r\n\r\nThe input feed is the set of all signed statements accepted or rejected by a transparency service\r\n\r\nThe output feed is the set of all signed statements for which a receipt exists because a registration policy has been met.\r\n\r\nThis is what a feed looks like in factorio (input is iron ore and coal, output is steel plates):\r\n\r\n![862972621_preview_Belt Smelter 3](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/8295856/92ce71f2-7b7b-4180-987c-7f02097825b1)\r\n\r\nThe subject of each input might be \"iron ore\", \"hematite\", \"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=50818\", or \"chebi:50818\"...\r\n\r\nThe subject of each output might be \"steel plate 123\", \"ASTM709 Plate 456\", or \"urn:epc:tag:sgtin-96:1.7332402.026591.1234567890\" ... \r\n\r\nCWT Claims can also be present in the protected headers of receipts.\r\n\r\nThe \"logical grouping of all elements\", is not the same as \"the structured identifier chosen by an issuer to identify an element of a set\".",
          "createdAt": "2023-10-09T18:43:47Z",
          "updatedAt": "2023-10-09T18:45:43Z"
        }
      ]
    },
    {
      "number": 109,
      "id": "I_kwDOIvmHss5zYAoV",
      "title": "Adjust CDDL for Receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/109",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "```\r\n~~~~ cddl\r\nclaim-label = int / text\r\n\r\n; https://www.iana.org/assignments/cwt\r\nclaims = {\r\n  &(iss: 1) => tstr \r\n  ; https://software.vendor or \r\n  ; did:web:software.vendor\r\n  &(sub: 2) => tstr \r\n  ; https://software.vendor or \r\n  ; did:web:software.vendor\r\n  ; https://software.vendor/products/456 or \r\n  ; did:web:software.vendor:products:456 or \r\n  ; did:web:software.vendor/products/456 or \r\n  ; urn:epc:tag:sgtin-96:1.7332402.026591.1234567890\r\n  * claim-label => any\r\n}\r\n\r\nstatement-protected-header-map = {\r\n  &(alg-id: 1) => int\r\n  &(content-type: 3) => tstr\r\n  &(issuer-key-id: 4) => bstr\r\n  &(issuer-claims: 13) => claims\r\n  * cose-label => cose-value\r\n}\r\n\r\nreceipt-protected-header-map = {\r\n  &(alg-id: 1) => int\r\n  &(issuer-key-id: 4) => bstr\r\n  &(issuer-claims: 13) => claims\r\n  * cose-label => cose-value\r\n}\r\n\r\n~~~~\r\n```",
      "createdAt": "2023-10-10T15:43:17Z",
      "updatedAt": "2023-10-10T16:55:40Z",
      "closedAt": null,
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": ":sparkles:Beautiful:sparkles: Header definitions.\r\n\r\nIs `&(issuer-claims: 13) => claims` intended to be mandatory or optional? It could be empty, for example.\r\n\r\n",
          "createdAt": "2023-10-10T15:57:28Z",
          "updatedAt": "2023-10-10T15:57:28Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "https://datatracker.ietf.org/doc/draft-ietf-cose-cwt-claims-in-headers/\r\n\r\nAFAIK, it can be optional, and it can be empty.\r\n\r\nSCITT can make it required, and make it non empty.\r\n\r\nI would recommend doing that... reasoning:\r\n\r\n`iss` is mandatory, and so the minimum issuer claims includes the issuer's chosen identifier for itself.\r\n\r\nhence tag 13 would always be present and inside of it tag 1 would always be present:\r\n\r\nhttps://www.iana.org/assignments/cwt/cwt.xhtml",
          "createdAt": "2023-10-10T16:04:42Z",
          "updatedAt": "2023-10-10T16:04:42Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "If there is always a member present in `claims` we could even model that in the data definition, explicitly.",
          "createdAt": "2023-10-10T16:09:25Z",
          "updatedAt": "2023-10-10T16:09:25Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I updated the example to include mandatory `iss` and `sub`... and added examples in comments",
          "createdAt": "2023-10-10T16:14:59Z",
          "updatedAt": "2023-10-10T16:14:59Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Ready for transplant into PR, I think",
          "createdAt": "2023-10-10T16:55:40Z",
          "updatedAt": "2023-10-10T16:55:40Z"
        }
      ]
    },
    {
      "number": 112,
      "id": "I_kwDOIvmHss50EEbV",
      "title": "Registration Info might need some rewording",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/112",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "For the next submission deadline, Reg_Info needs more detail to convey it's purpose. Maybe... it may even need a new name, as Reg_Info might not be limited to key/value pairs about registration policy?",
      "createdAt": "2023-10-17T11:45:27Z",
      "updatedAt": "2023-10-18T15:20:05Z",
      "closedAt": "2023-10-18T15:20:05Z",
      "comments": []
    },
    {
      "number": 116,
      "id": "I_kwDOIvmHss50hYBT",
      "title": "Add non-equivocation to terminology",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/116",
      "state": "OPEN",
      "author": "aj-stein-nist",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Define the term non-equivocation formally as it relates to this architecture document, per https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/107#discussion_r1367393803.\r\n            ",
      "createdAt": "2023-10-20T19:26:50Z",
      "updatedAt": "2023-10-20T19:26:50Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 117,
      "id": "I_kwDOIvmHss50hpJA",
      "title": "Remap did to cwt_claims iss",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/117",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "PR #108 converged issuer and feed into the CTW_Claims iss and sub. \r\nThe doc needs a scrub to remap these properties\r\n",
      "createdAt": "2023-10-20T20:30:57Z",
      "updatedAt": "2023-10-23T23:39:56Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 120,
      "id": "I_kwDOIvmHss50rAoh",
      "title": "Consider replacing \"Verifier\" with \"Relying Party\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/120",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As discussed on today's call.\r\n\r\nFolks expressed concern that \"Verifier\" was not friendly enough to \"Consumers or Relying Parties\", that are supposed to process receipts.",
      "createdAt": "2023-10-23T15:22:39Z",
      "updatedAt": "2023-10-23T15:23:54Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 124,
      "id": "I_kwDOIvmHss507r-i",
      "title": "Transparent Statement Recursion",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/124",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "```\r\nstatement -> receipt\r\nstatement + receipt => transparent statement^1\r\ntransparent statement -> receipt\r\ntransparent statement + receipt => transparent statement^2\r\n...\r\n```\r\n\r\nThere are cases where you want to drop all unprotected data from the signed statement before the registration policy will be applied, and cases where you really want to preserve those unprotected data elements so that the registration policy can be applied.\r\n\r\nWe need to describe transparent statement inception in detail and comment on its correct usage (and its nonsensical usage).\r\n",
      "createdAt": "2023-10-25T16:26:36Z",
      "updatedAt": "2023-10-25T16:33:01Z",
      "closedAt": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "we use code like this, to pull the receipts from the transparent statement, and then we assume that the entry will always have an empty map as its unprotected header... thats not a great assumption, based on the current draft text.\r\n\r\n```ts\r\nexport const getEntryReceipts = ({ transparentStatement }: RequestEntryReceipts) => {\r\n  const decoded = cbor.decode(transparentStatement)\r\n  let unprotectedHeader = decoded.value[1]\r\n  if (!(unprotectedHeader instanceof Map)) {\r\n    unprotectedHeader = new Map()\r\n  }\r\n  const receipts = unprotectedHeader.get(tags.scitt_receipt) || []\r\n  decoded.value[1] = new Map()\r\n  const entry = cbor.encode(decoded)\r\n  return { entry, receipts }\r\n}\r\n```",
          "createdAt": "2023-10-25T16:33:00Z",
          "updatedAt": "2023-10-25T16:33:00Z"
        }
      ]
    },
    {
      "number": 125,
      "id": "I_kwDOIvmHss508dzY",
      "title": "x5c or x5u or both?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/125",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "For signed statements and receipts.",
      "createdAt": "2023-10-25T18:37:30Z",
      "updatedAt": "2023-10-25T18:37:30Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOIvmHss5KC23t",
      "title": "Disambiguate registration policy definitions",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/1",
      "state": "MERGED",
      "author": "letmaik",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR is a duplicate of what had been already merged in the old repository:\r\n\r\nhttps://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/41\r\n\r\nOriginal author: @darracott",
      "createdAt": "2023-02-15T15:29:48Z",
      "updatedAt": "2023-02-19T21:26:53Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "757b536c87c0425ce38e4bb034a5239f588e615a",
      "headRepository": "letmaik/draft-ietf-scitt-architecture",
      "headRefName": "letmaik/pr-41",
      "headRefOid": "84c06bdb626eef5ebccfd36c7b8dabe036b69b82",
      "closedAt": "2023-02-19T21:26:49Z",
      "mergedAt": "2023-02-19T21:26:49Z",
      "mergedBy": "letmaik",
      "mergeCommit": {
        "oid": "3fcf61106c2499fbcf3caf2ef14a470be4c7aa8e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOIvmHss5KC5OO",
      "title": "Nits from WG Adoption review",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/2",
      "state": "MERGED",
      "author": "letmaik",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR is a duplicate of what had been already merged in the old repository:\r\n\r\nhttps://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/39\r\n\r\nOriginal author: @cabo",
      "createdAt": "2023-02-15T15:36:07Z",
      "updatedAt": "2023-02-19T21:27:37Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "757b536c87c0425ce38e4bb034a5239f588e615a",
      "headRepository": "letmaik/draft-ietf-scitt-architecture",
      "headRefName": "letmaik/pr-39",
      "headRefOid": "a2565ffbf0aa0c93e97773497fcffd6937594a37",
      "closedAt": "2023-02-19T21:27:33Z",
      "mergedAt": "2023-02-19T21:27:33Z",
      "mergedBy": "letmaik",
      "mergeCommit": {
        "oid": "c8ad68740476eaf24c663147fd349b16bfa4f4d2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOIvmHss5KNOpx",
      "title": "Cleanup of REST API",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/3",
      "state": "MERGED",
      "author": "letmaik",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR is a duplicate of what had already been reviewed in the old repository:\r\n\r\nhttps://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/44\r\n",
      "createdAt": "2023-02-17T10:32:25Z",
      "updatedAt": "2023-02-22T14:33:57Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "c8ad68740476eaf24c663147fd349b16bfa4f4d2",
      "headRepository": "letmaik/draft-ietf-scitt-architecture",
      "headRefName": "letmaik/rest-api",
      "headRefOid": "e3260b92996cb7a9abe7401fc2c530ea6c495e37",
      "closedAt": "2023-02-22T14:33:53Z",
      "mergedAt": "2023-02-22T14:33:53Z",
      "mergedBy": "letmaik",
      "mergeCommit": {
        "oid": "2056dc9704ef7cad925f51c3c82719a71effd962"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@letmaik I am reviewing it now!",
          "createdAt": "2023-02-22T11:52:18Z",
          "updatedAt": "2023-02-22T11:52:18Z"
        },
        {
          "author": "letmaik",
          "authorAssociation": "COLLABORATOR",
          "body": "@yogeshbdeshpande Thanks for the review. I addressed your comments, please approve if you think it's good to go.",
          "createdAt": "2023-02-22T12:55:28Z",
          "updatedAt": "2023-02-22T12:55:28Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@letmaik DONE!",
          "createdAt": "2023-02-22T12:56:27Z",
          "updatedAt": "2023-02-22T12:56:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5NrBIb",
          "commit": {
            "abbreviatedOid": "b81183f"
          },
          "author": "thomas-fossati",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "LGTM, thanks for addressing my API concerns from the previous round.\r\n\r\nI have left a couple of purely editorial comments.",
          "createdAt": "2023-02-17T10:33:54Z",
          "updatedAt": "2023-02-17T10:53:37Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nIf the transparency service cannot process a client's request, it MUST return an HTTP 4xx or 5xx status code, and the body SHOULD be a JSON problem details object ({{RFC7807}}) containing:\r\n```",
              "createdAt": "2023-02-17T10:33:54Z",
              "updatedAt": "2023-02-17T10:53:37Z"
            },
            {
              "originalPosition": 17,
              "body": "the new URN namespace needs to be registered.  We need to a sub-section in the IANA considerations like this:\r\n```\r\n## URN Sub-namespace for SCITT (urn:ietf:params:scitt)\r\n\r\nIANA is requested to register the URN sub-namespace `urn:ietf:params:scitt`\r\nin the \"IETF URN Sub-namespace for Registered Protocol Parameter Identifiers\"\r\nregistry {{!IANA.params}}, following the template in {{!RFC3553}}:\r\n\r\n   Registry name:  scitt\r\n\r\n   Specification:  [RFCthis]\r\n\r\n   Repository:  http://www.iana.org/assignments/scitt\r\n\r\n   Index value:  No transformation needed.\r\n```",
              "createdAt": "2023-02-17T10:47:26Z",
              "updatedAt": "2023-02-17T10:53:37Z"
            },
            {
              "originalPosition": 117,
              "body": "looks like a leftover?",
              "createdAt": "2023-02-17T10:49:00Z",
              "updatedAt": "2023-02-17T10:53:37Z"
            },
            {
              "originalPosition": 199,
              "body": "_\"[...] see TBD\"_ ?",
              "createdAt": "2023-02-17T10:51:37Z",
              "updatedAt": "2023-02-17T10:53:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Nrvb_",
          "commit": {
            "abbreviatedOid": "b81183f"
          },
          "author": "letmaik",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-17T12:07:22Z",
          "updatedAt": "2023-02-17T12:07:23Z",
          "comments": [
            {
              "originalPosition": 199,
              "body": "I added the reference to the receipts I-D.",
              "createdAt": "2023-02-17T12:07:22Z",
              "updatedAt": "2023-02-17T12:07:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Nrvou",
          "commit": {
            "abbreviatedOid": "b81183f"
          },
          "author": "letmaik",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-17T12:07:45Z",
          "updatedAt": "2023-02-17T12:07:46Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "Not really, but I made it more clear: \"- [TODO]: more error codes to be defined\"",
              "createdAt": "2023-02-17T12:07:45Z",
              "updatedAt": "2023-02-17T12:07:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5NrvrM",
          "commit": {
            "abbreviatedOid": "b81183f"
          },
          "author": "letmaik",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-17T12:07:50Z",
          "updatedAt": "2023-02-17T12:07:50Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Added.",
              "createdAt": "2023-02-17T12:07:50Z",
              "updatedAt": "2023-02-17T12:07:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Nr4m6",
          "commit": {
            "abbreviatedOid": "df11553"
          },
          "author": "thomas-fossati",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "\ud83d\udea2 it\r\n\r\nI think eventually the API stuff should be moved into its own \"SCITT API\" document.",
          "createdAt": "2023-02-17T12:26:42Z",
          "updatedAt": "2023-02-17T12:26:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5OBxzV",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T11:55:38Z",
          "updatedAt": "2023-02-22T11:55:38Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "Perhaps add a github issue to define more error codes and refer it here!",
              "createdAt": "2023-02-22T11:55:38Z",
              "updatedAt": "2023-02-22T11:55:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OByN9",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T11:56:48Z",
          "updatedAt": "2023-02-22T11:56:49Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nIf 202 is returned, then clients should wait until registration succeeded or failed, by polling the registration status using the Operation ID returned in the response. Clients should always obtain a receipt as a proof that registration has succeeded.\r\n```",
              "createdAt": "2023-02-22T11:56:48Z",
              "updatedAt": "2023-02-22T11:56:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OBy7q",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T11:58:44Z",
          "updatedAt": "2023-02-22T11:58:44Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "On line 609, did you mean to say:\r\nUpon polling, client will always get a Receipt as a proof if registration has succeeded.",
              "createdAt": "2023-02-22T11:58:44Z",
              "updatedAt": "2023-02-22T11:58:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OBzko",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T12:00:28Z",
          "updatedAt": "2023-02-22T12:00:29Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Should we not return 202 here if the Registration is running ?",
              "createdAt": "2023-02-22T12:00:29Z",
              "updatedAt": "2023-02-22T12:00:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OB1Mb",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks, the API set looks quite tidy, left few minor .nits, please check and incorporate them.\r\n",
          "createdAt": "2023-02-22T12:04:52Z",
          "updatedAt": "2023-02-22T12:04:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5OCBsY",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "letmaik",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T12:39:37Z",
          "updatedAt": "2023-02-22T12:39:38Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "No, status codes are always relative to the given resource. Here, 200 means the server was able to return the representation of the operation status. If it returned 202, it would mean that the server can't currently report on the status but will be able soon, which is not the intent here.",
              "createdAt": "2023-02-22T12:39:37Z",
              "updatedAt": "2023-02-22T12:39:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OCGyQ",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "letmaik",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T12:52:51Z",
          "updatedAt": "2023-02-22T12:52:52Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "Done.",
              "createdAt": "2023-02-22T12:52:51Z",
              "updatedAt": "2023-02-22T12:52:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OCHY3",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "letmaik",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T12:54:29Z",
          "updatedAt": "2023-02-22T12:54:29Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "I think I prefer the current phrasing. It should be clear enough, saying essentially wait until it's done, then fetch the receipt to get a proof of registration.",
              "createdAt": "2023-02-22T12:54:29Z",
              "updatedAt": "2023-02-22T12:54:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OCIBL",
          "commit": {
            "abbreviatedOid": "e3260b9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!\r\n",
          "createdAt": "2023-02-22T12:56:06Z",
          "updatedAt": "2023-02-22T12:56:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOIvmHss5Kd623",
      "title": "Vast Terminology Overhaul",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Fixes #15\r\n\r\n(to some extend), please see #15 and check the issues highlighted there as part of reviewing this PR.",
      "createdAt": "2023-02-21T23:04:47Z",
      "updatedAt": "2023-10-23T23:24:02Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "2056dc9704ef7cad925f51c3c82719a71effd962",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "core-terms",
      "headRefOid": "67cbcd00b1ac346ebf8e27e3e831ac2b23f82156",
      "closedAt": "2023-03-09T15:44:09Z",
      "mergedAt": "2023-03-09T15:44:09Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "f1cbad3d7f035e1a2666130017b4cd520319b6cc"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz @fournet @letmaik \r\nAll claim terminology has been replaced with \"Signed Statement\" including the Architecture Diagram.\r\n\r\nPlease have a look!",
          "createdAt": "2023-02-22T18:51:07Z",
          "updatedAt": "2023-02-22T18:51:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you @nedmsmith, @nealmcb, @OR13, @yogeshbdeshpande, @fournet, @letmaik, @kaywilliams, @raylutz and a very speshal thanks to @henkbirkholz for all feedback and suggestions. \r\nAs noted above, we needed to get this overhaul merged for smaller PRs, to meet the [IETF 116 Monday milestone](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/milestone/1)\r\n\r\nIf we've missed anything, please open an issue for discussion, or if it's easy, a small PR may be more efficient.",
          "createdAt": "2023-03-09T23:03:17Z",
          "updatedAt": "2023-03-09T23:03:17Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "Great work @SteveLasker! Above-and-beyond the call, to take so many of our frequently-off-topic responses and capture them in new issues.",
          "createdAt": "2023-03-10T00:12:22Z",
          "updatedAt": "2023-03-10T00:12:22Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @nealmcb, and thank you for all the great feedback. Unfortunately, I didn't see GitHub was nice enough to \"hide\" many of the outstanding items, so I guess there's more to capture... \ud83e\udd37\u200d\u2642\ufe0f ",
          "createdAt": "2023-03-10T00:55:36Z",
          "updatedAt": "2023-03-10T00:55:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5OAztQ",
          "commit": {
            "abbreviatedOid": "e2a25f0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T09:25:16Z",
          "updatedAt": "2023-02-22T09:25:16Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "```suggestion\r\n: the pre-condition enforced by the Transparency Service before registering a Signed Statement,\r\n```",
              "createdAt": "2023-02-22T09:25:16Z",
              "updatedAt": "2023-02-22T09:25:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OBtua",
          "commit": {
            "abbreviatedOid": "69371b9"
          },
          "author": "letmaik",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T11:43:45Z",
          "updatedAt": "2023-02-22T11:43:46Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "```suggestion\r\nTransparent Statement:\r\n```",
              "createdAt": "2023-02-22T11:43:45Z",
              "updatedAt": "2023-02-22T11:43:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OFbDs",
          "commit": {
            "abbreviatedOid": "69371b9"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T19:37:06Z",
          "updatedAt": "2023-02-22T19:37:06Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "We have to check consistent use of Signed Statement vs. Transparent Statement.",
              "createdAt": "2023-02-22T19:37:06Z",
              "updatedAt": "2023-02-22T19:37:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OGPld",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "+1 to simplify a \"claim\" becomes \"statement\" and refer to statements that change \"state\" (#8)\r\n`Statement` --> `Signed Statment` --> `Transparent Statement`\r\n",
          "createdAt": "2023-02-22T21:23:50Z",
          "updatedAt": "2023-02-22T21:35:54Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "nit: case consistency on each bullet:\r\n\r\nr/I w/i",
              "createdAt": "2023-02-22T21:23:51Z",
              "updatedAt": "2023-02-22T21:35:54Z"
            },
            {
              "originalPosition": 41,
              "body": "+1 to the more expressive, expanded acronyms.\r\n\r\n>\"when was the Signed Statement about the Artifact registered in the Registry\" \r\n\r\nWhich term do we wish to settle on, and under what context? This is the question under #7 \r\nPersonally, I struggle with Registry as a generic term and Transparency Service, which I think confuses transparent with public. \r\nEither way, the use of registry and transparency service seem interchangeable here. Or, are we talking about different sub-components?\r\n\r\n",
              "createdAt": "2023-02-22T21:29:43Z",
              "updatedAt": "2023-02-22T21:35:54Z"
            },
            {
              "originalPosition": 50,
              "body": "cater--> caters",
              "createdAt": "2023-02-22T21:33:05Z",
              "updatedAt": "2023-02-22T21:35:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OGYs7",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T21:40:46Z",
          "updatedAt": "2023-02-22T21:40:47Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "> ...independent third party such as a reviewer or an endorser.\r\n\r\nI can see statements being made that are \"negative\", meaning a security company makes a statement the artifact has many critical vulnerabilities and should be replaced with version:foo.\r\nDo we want to elaborate endorser to include opposed, or another term that reflects a negative statement? \r\nOr, do we want to generalize all statements, and leave it to the consumer and artifactType to define the schema of positive/negative?",
              "createdAt": "2023-02-22T21:40:47Z",
              "updatedAt": "2023-02-22T21:40:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OGZF9",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T21:41:38Z",
          "updatedAt": "2023-02-22T21:41:38Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "> metadata and an Issuer's signature is added to a Statement via COSE envelope \r\n\r\nmetadata and an Issuer's signature is added to a Statement via _**a**_ COSE envelope ",
              "createdAt": "2023-02-22T21:41:38Z",
              "updatedAt": "2023-02-22T21:41:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5O0enJ",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Multiple comments ",
          "createdAt": "2023-03-02T18:17:52Z",
          "updatedAt": "2023-03-02T19:59:45Z",
          "comments": [
            {
              "originalPosition": 348,
              "body": "Why is this a SHOULD and not MUST?",
              "createdAt": "2023-03-02T18:17:53Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 355,
              "body": "how does the TS ensure determinism?",
              "createdAt": "2023-03-02T18:19:12Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 357,
              "body": "This requires more explanation. Sounds dubious.",
              "createdAt": "2023-03-02T18:20:20Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 360,
              "body": "It might be better to describe the properties of manifests that are desired instead of or in addition to simply requiring 'manifests' - which is ambiguous.",
              "createdAt": "2023-03-02T18:22:20Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 371,
              "body": "Why is this a SHOULD and not MUST? Otherwise it is an untrustworthy TS.",
              "createdAt": "2023-03-02T18:24:47Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 374,
              "body": "Some exemplary text describing what is meant by \"auxiliary governance\" would be helpful.",
              "createdAt": "2023-03-02T18:26:13Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 380,
              "body": "Why is this not a SHOULD instead of MAY? SHOULD implies the interfaces for performing reviews will be defined and implemented.",
              "createdAt": "2023-03-02T18:27:58Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 394,
              "body": "'consumer' might not be the best term. Does it mean ingress or someone engaging in commerce?",
              "createdAt": "2023-03-02T18:29:50Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 455,
              "body": "Since the use of COSE is mandatory, shouldn't this be MUST?",
              "createdAt": "2023-03-02T18:34:24Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 467,
              "body": "This is a long sentence, maybe break it up into multiple 80 character lines?\r\nA policy could be 'unrecognized', 'unparsable', or 'not implemented'. Does 'unknown' imply all of these? ",
              "createdAt": "2023-03-02T18:37:28Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 510,
              "body": "break up long lines please.\r\nThis seems to hint that a TS MUST have ACID properties and that \"registered\" is code for a committed transaction. Maybe make the expected TS integrity requirements more  clear in terms of durability, 'commit' and 'rollback', referential integrity of \"registered\" statements as well as what constitutes a sound or safe state when working with a blockchain. ",
              "createdAt": "2023-03-02T18:43:25Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 519,
              "body": "Does this work if the TS cluster is behind a load balancer?",
              "createdAt": "2023-03-02T18:44:25Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 522,
              "body": "please break up long sentences into shorter lines.\r\n\r\nThe term 'local' is subjective and contextual. If used, it needs to be defined.",
              "createdAt": "2023-03-02T18:46:11Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 525,
              "body": "Ambiguously describes things that may or may not be relevant or important. Consider deleting this or rewriting to focus on what Verifier MUST / SHOULD do to establish sufficient trust to interoperate with a TS.",
              "createdAt": "2023-03-02T18:48:41Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 528,
              "body": "The different available options should be described.",
              "createdAt": "2023-03-02T18:49:22Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 540,
              "body": "If they have different governance, organization trust, and otherwise don't trust each other what is the basis for allowing them to interoperate? This seems very dubious and possibly should be called out as conditions for NOT interoperating.",
              "createdAt": "2023-03-02T18:51:50Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 544,
              "body": "What is the value of having multiple registrations other than for availability? A Verifiler or relying party may have policies for not trusting one or more of the selected TSs and therefore, registration at multiple is potentially dubious if the reason for not trusting is the TS is compromised or malicious etc. The justification for why this is being considered needs to be motivated better.",
              "createdAt": "2023-03-02T18:55:27Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 585,
              "body": "This seems to be stating that a TS is intended to be trusted to protect privacy on behalf of the user community. It would be better if the user community is allowed to apply their own privacy protections independent of the TS. This might be in the form of blinded values in a Signed Statement.",
              "createdAt": "2023-03-02T18:59:38Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 591,
              "body": "Use of 'trustworthy' seems overly ambiguous. Does it mean the contents of the Transparent Statement are opaque to the TS? Does that further imply the contents could be privacy protected in some way including encrypted? If the TS provides registration assurances but contents are allowed to be opaque. Then wouldn't it make more sense to call it a \"Registered Statement\" instead of a \"Transparent Statement\"?",
              "createdAt": "2023-03-02T19:04:02Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 595,
              "body": "This seems to be describing the legal liability of the TS. If so, does it really belong here? If not, what is it trying to describe?",
              "createdAt": "2023-03-02T19:05:40Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 598,
              "body": "The wording needs to clarify the difference between a purposefully opaque payload from a payload that is described by a well-known schema.",
              "createdAt": "2023-03-02T19:07:05Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 602,
              "body": "What threat does this normative requirement counter? Given keys are certified (X.509) or described by DID or other certification process. Does this requirement override these other forms of qualifiers on keys or is it just giving advice?",
              "createdAt": "2023-03-02T19:08:20Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 607,
              "body": "'malicious' and 'misbehaved' might be better words.",
              "createdAt": "2023-03-02T19:11:33Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 618,
              "body": "This contradicts statements about dissimilar TSs interoperating or working together in a trusted way. The use of trust anchors to validate key credentials implies trust. All of this can be compromised or is subject to malicious or improper behavior. It seems impossible to achieve both objectives at the same time. Some aspects of this document is overstated, but it isn't clear which part.",
              "createdAt": "2023-03-02T19:16:49Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 621,
              "body": "This seems to contradict line 651.",
              "createdAt": "2023-03-02T19:17:25Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 624,
              "body": "Maybe 'accountable' is the wrong word. If the user contributes a purposefully opaque statement, that shouldn't be considered form of unaccountability. It appears that opaque statements are expected by the SCITT architecture. Use of the term 'false assertion' with an expectation that SCITT treats assertions as opaque doesn't make sense and seems biased or judgmental. Maybe the paragraph should focus on what properties of transparency, or trust that SCITT provides and leave other things out of scope?",
              "createdAt": "2023-03-02T19:25:26Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 627,
              "body": "break this into several lines.",
              "createdAt": "2023-03-02T19:26:41Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 630,
              "body": "please break into multiple lines.\r\nIt isn't clear who's liability is being described.",
              "createdAt": "2023-03-02T19:28:51Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 639,
              "body": "use of 'honest' seems out of place. Is this describing TS operational integrity requirements such as ACID?",
              "createdAt": "2023-03-02T19:31:01Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 646,
              "body": "Of course a compromised TS could do all sorts of malicious things. If the previous line / paragraph stated the 4 (or more?) bullet points below in terms of how a TS is supposed to behave. It might be easier to understand what requirements implementers must address in order to build a suitable TS?",
              "createdAt": "2023-03-02T19:33:47Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 653,
              "body": "This is confusing.",
              "createdAt": "2023-03-02T19:34:58Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 665,
              "body": "I don't think 'trust' is the right word. Availability is facilitated by networks and storage subsystems, but this paragraph doesn't explain how. If a deployment of SCITT utilizes a trusted network, the inclusion of SCITT doesn't superficially make the network untrusted. ",
              "createdAt": "2023-03-02T19:38:50Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 668,
              "body": "Auditing isn't normally regarded as a mechanism for establishing or ensuring availability. Should this be in a different section?",
              "createdAt": "2023-03-02T19:40:09Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 673,
              "body": "Availability strategies generally involve replication and redundancy techniques. This seems to contradict that. This is confusing as an availability strategy.",
              "createdAt": "2023-03-02T19:42:01Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 684,
              "body": "Maybe it would be better if the information owner is expected to apply privacy protections before contributing a Statement?",
              "createdAt": "2023-03-02T19:47:46Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 687,
              "body": "Is this describing a requirement on TSs, Issuers (users), or Verifiers? It's confusing.",
              "createdAt": "2023-03-02T19:49:17Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 701,
              "body": "It is unclear who 'we' is. - Possibly, \"the SCITT architecture\"?",
              "createdAt": "2023-03-02T19:50:53Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 710,
              "body": "An untrusted Client could obtain legitimate credentials and masquerade as a legitimate user only to perform a denial of service attack in the form of out of order registrations and the like. The SCITT architecture should have some mechanism for ensuring operational integrity despite having untrusted Clients or it should require Client trust and employ some form of vetting process to register, authenticate and authorize them.",
              "createdAt": "2023-03-02T19:55:37Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 718,
              "body": "It might scale better if the TSs request revocation status updates such as OCSP [RFC2560].",
              "createdAt": "2023-03-02T19:58:51Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PAYsU",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T04:25:32Z",
          "updatedAt": "2023-03-06T04:25:32Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "> cannot delete or alter earlier Signed Statements about certain Artifacts\r\n\r\ndrop \"about certain Artifacts\". It makes it seem like they could delete or alter Signed Statements about certain *other* Artifacts. But they can't delete or alter any earlier Signed Statements about anything.\r\n\r\n\r\n\r\n",
              "createdAt": "2023-03-06T04:25:32Z",
              "updatedAt": "2023-03-06T04:25:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PAZyt",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T04:34:34Z",
          "updatedAt": "2023-03-06T04:34:34Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "The sentence *Unlike CT,...* takes away an important aspect of any transparency service, and negates the overall notion that we are trying to generalize CT.\r\n\r\nInstead, we should note that any given TS will be well served by having replicas and auditors which confirm that relying parties can choose any replica they want.",
              "createdAt": "2023-03-06T04:34:34Z",
              "updatedAt": "2023-03-06T04:34:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PAbsC",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T04:46:22Z",
          "updatedAt": "2023-03-06T04:46:22Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "I'd take out \"need to\" in both definitions.\r\n\r\nFor the end of the second one I'd get rid of the tricky and unnecessary word *trust* by substituting this:\r\n=> that access, validate, and evaluate the reliability of authentic Statements",
              "createdAt": "2023-03-06T04:46:22Z",
              "updatedAt": "2023-03-06T04:46:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE3Mg",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:25:40Z",
          "updatedAt": "2023-03-06T16:25:41Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I don't love this language.\r\n\r\nI think notarizing applies to making a \"Signed Statement\" a \"Transparent Statement\"... but this sentence seems to imply notarization is part of the process of creating a \"Signed Statement\", which seems wrong.\r\n",
              "createdAt": "2023-03-06T16:25:40Z",
              "updatedAt": "2023-03-06T16:25:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE3Wa",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:26:02Z",
          "updatedAt": "2023-03-06T16:26:04Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "```suggestion\r\nThe global interoperability enabled and guaranteed by the Transparency Services is enabled via core components (architectural constituents) that come with prescriptive requirements (that are typically hidden away from the user audience via APIs). The core components are based on the Concise Signing and Encryption standard specified in {{-COSE}}, which is used to sign released Statements about Artifacts and to build and maintain a Merkle tree that functions as an append-only Registry for corresponding Signed Statements.\r\n```",
              "createdAt": "2023-03-06T16:26:02Z",
              "updatedAt": "2023-03-06T16:26:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE3-n",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:27:07Z",
          "updatedAt": "2023-03-06T16:27:07Z",
          "comments": [
            {
              "originalPosition": 114,
              "body": "I think the concept of \"notarization\" needs to go here... or it needs to not be used anywhere.",
              "createdAt": "2023-03-06T16:27:07Z",
              "updatedAt": "2023-03-06T16:27:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE47V",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:28:34Z",
          "updatedAt": "2023-03-06T16:28:35Z",
          "comments": [
            {
              "originalPosition": 209,
              "body": "love these updates!",
              "createdAt": "2023-03-06T16:28:34Z",
              "updatedAt": "2023-03-06T16:28:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE5rk",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:29:40Z",
          "updatedAt": "2023-03-06T16:29:41Z",
          "comments": [
            {
              "originalPosition": 212,
              "body": "I suggest maybe not using the words \"DID Key Manifest\"... \r\n\r\nMaybe \"Public Key Identifier\" or \"VerificationMethod\".",
              "createdAt": "2023-03-06T16:29:40Z",
              "updatedAt": "2023-03-06T16:29:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE59s",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:30:02Z",
          "updatedAt": "2023-03-06T16:30:03Z",
          "comments": [
            {
              "originalPosition": 213,
              "body": "extra \"(decentralized)\" seems redundant.",
              "createdAt": "2023-03-06T16:30:03Z",
              "updatedAt": "2023-03-06T16:30:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE6LB",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:30:21Z",
          "updatedAt": "2023-03-06T16:30:22Z",
          "comments": [
            {
              "originalPosition": 208,
              "body": "```suggestion\r\n                    .----+----.  .----------.    Decentralized Identifier\r\n```",
              "createdAt": "2023-03-06T16:30:22Z",
              "updatedAt": "2023-03-06T16:30:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE6dX",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:30:47Z",
          "updatedAt": "2023-03-06T16:30:48Z",
          "comments": [
            {
              "originalPosition": 212,
              "body": "```suggestion\r\n                          '----. .----'            | Public Key Identifiers |\r\n```",
              "createdAt": "2023-03-06T16:30:48Z",
              "updatedAt": "2023-03-06T16:31:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE6oB",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:31:03Z",
          "updatedAt": "2023-03-06T16:31:04Z",
          "comments": [
            {
              "originalPosition": 213,
              "body": "```suggestion\r\n                                |                  |   |\r\n```",
              "createdAt": "2023-03-06T16:31:03Z",
              "updatedAt": "2023-03-06T16:31:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFCwO",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:42:27Z",
          "updatedAt": "2023-03-06T16:42:27Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "This PR intends to do three things (and is not complete in doing it yet):\r\n\r\n1. using Statement, Signed Statement & Transparent Statement\r\n2. expanding TS to Transparency Services\r\n3. updating Figure 1, aligning with 1. and 2.\r\n\r\nThe issues you raise are all valid, but I would like to get 1-3 done in this PR and get another one going for others (if possible).",
              "createdAt": "2023-03-06T16:42:27Z",
              "updatedAt": "2023-03-06T16:42:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFETZ",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:44:51Z",
          "updatedAt": "2023-03-06T16:44:51Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "@nealmcb, could you create a proposal (maybe in separate PR) after we merged this PR in?",
              "createdAt": "2023-03-06T16:44:51Z",
              "updatedAt": "2023-03-06T16:44:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFEfE",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:45:09Z",
          "updatedAt": "2023-03-06T16:45:10Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "```suggestion\r\nThe Transparency Services specified in this architecture caters to two types of audiences:\r\n```",
              "createdAt": "2023-03-06T16:45:09Z",
              "updatedAt": "2023-03-06T16:45:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFHHX",
          "commit": {
            "abbreviatedOid": "81c750a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:49:12Z",
          "updatedAt": "2023-03-06T16:49:12Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "```suggestion\r\n: metadata and an Issuer's signature is added to a Statement via a COSE envelope by the Issuer to produce a Signed Statement.\r\n```",
              "createdAt": "2023-03-06T16:49:12Z",
              "updatedAt": "2023-03-06T16:49:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFZaK",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T17:19:13Z",
          "updatedAt": "2023-03-06T17:19:14Z",
          "comments": [
            {
              "originalPosition": 348,
              "body": "Re the discussion at the end of the call March 6, on the benefits of quickly merging this PR:\r\nThis is one of many examples (including ones I have made...) of a comment on the original document, not on the proposed change. Comments like this need to be resolved quickly, or kept alive somehow, via a new issue.\r\n\r\nIf we don't merge this PR quickly, we risk accumulating more of these comments which should really be issues.",
              "createdAt": "2023-03-06T17:19:13Z",
              "updatedAt": "2023-03-06T17:19:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFath",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Massive PR, lots of comments from other reviewers, assuming they are addressed, I think it can be merged, I don't have any blocking feedback.",
          "createdAt": "2023-03-06T17:21:23Z",
          "updatedAt": "2023-03-06T17:21:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5PFb26",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T17:23:17Z",
          "updatedAt": "2023-03-06T17:23:18Z",
          "comments": [
            {
              "originalPosition": 455,
              "body": "Parenthetically, it might be helpful to point to a discussion of why COSE is mandatory. Does that choice preclude interoperability with Sigstore, which uses DSSE instead, I think?",
              "createdAt": "2023-03-06T17:23:17Z",
              "updatedAt": "2023-03-06T17:23:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFeZF",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T17:27:30Z",
          "updatedAt": "2023-03-06T17:27:30Z",
          "comments": [
            {
              "originalPosition": 540,
              "body": "Perhaps just taking out the always-overloaded term \"trust\" would help. In this context, it is easy to imagine a consumer choosing to rely on multiple transparency services which choose not to \"trust\" each other, based on quite distinct notions of trust relating to budget or jurisdictional issues.",
              "createdAt": "2023-03-06T17:27:30Z",
              "updatedAt": "2023-03-06T17:27:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFfOJ",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T17:28:56Z",
          "updatedAt": "2023-03-06T18:06:57Z",
          "comments": [
            {
              "originalPosition": 544,
              "body": "They may have different accessibility policies - confidential vs public, or different performance characteristics (detailed internal view vs customer-facing view.",
              "createdAt": "2023-03-06T17:28:57Z",
              "updatedAt": "2023-03-06T18:06:57Z"
            },
            {
              "originalPosition": 618,
              "body": "This is just a statement of fact. Trust is in the eye of the beholder. Different relying parties will have different threat models and requirements for how they handle artifacts. Some TS will screw up and be compromised, and hopefully auditors will catch that.",
              "createdAt": "2023-03-06T17:39:27Z",
              "updatedAt": "2023-03-06T18:06:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNHZa",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T15:37:26Z",
          "updatedAt": "2023-03-07T15:37:27Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Tracked at #23 ",
              "createdAt": "2023-03-07T15:37:27Z",
              "updatedAt": "2023-03-07T15:37:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNI47",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T15:39:30Z",
          "updatedAt": "2023-03-07T15:39:30Z",
          "comments": [
            {
              "originalPosition": 114,
              "body": "Tracked at #24 ",
              "createdAt": "2023-03-07T15:39:30Z",
              "updatedAt": "2023-03-07T15:39:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNMJz",
          "commit": {
            "abbreviatedOid": "2897db5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T15:42:35Z",
          "updatedAt": "2023-03-07T15:42:36Z",
          "comments": [
            {
              "originalPosition": 212,
              "body": "Captured in #25 ",
              "createdAt": "2023-03-07T15:42:35Z",
              "updatedAt": "2023-03-07T15:42:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNMwX",
          "commit": {
            "abbreviatedOid": "2897db5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T15:43:20Z",
          "updatedAt": "2023-03-07T15:43:21Z",
          "comments": [
            {
              "originalPosition": 212,
              "body": "Captured in #25 ",
              "createdAt": "2023-03-07T15:43:21Z",
              "updatedAt": "2023-03-07T15:43:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNT-6",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T15:53:14Z",
          "updatedAt": "2023-03-07T15:53:15Z",
          "comments": [
            {
              "originalPosition": 467,
              "body": "Thanks @nedmsmith, we discussed on an editors call, and agreed to simplify content feedback to use sentence-based lines. And, we'll create a document for conventions for this org.",
              "createdAt": "2023-03-07T15:53:15Z",
              "updatedAt": "2023-03-07T15:53:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNjFc",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T16:15:03Z",
          "updatedAt": "2023-03-07T16:15:04Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Captured in #27 ",
              "createdAt": "2023-03-07T16:15:03Z",
              "updatedAt": "2023-03-07T16:15:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNl47",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T16:19:02Z",
          "updatedAt": "2023-03-07T16:19:03Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "Captured in #28 ",
              "createdAt": "2023-03-07T16:19:02Z",
              "updatedAt": "2023-03-07T16:19:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNo5d",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T16:23:22Z",
          "updatedAt": "2023-03-07T16:23:22Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Captured in #29",
              "createdAt": "2023-03-07T16:23:22Z",
              "updatedAt": "2023-03-07T16:23:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNpNS",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "raylutz",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T16:23:50Z",
          "updatedAt": "2023-03-07T16:23:50Z",
          "comments": [
            {
              "originalPosition": 640,
              "body": "```suggestion\r\nVerifiers and Auditors need not have a previously established trust relationship with other actors. In particular, they cannot \"frame\" an Issuer or a Transparency Service for Signed Statements they did not issue or register.\r\n```",
              "createdAt": "2023-03-07T16:23:50Z",
              "updatedAt": "2023-03-07T16:23:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POLNx",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:13:45Z",
          "updatedAt": "2023-03-07T17:13:46Z",
          "comments": [
            {
              "originalPosition": 348,
              "body": "Captured in #30 ",
              "createdAt": "2023-03-07T17:13:45Z",
              "updatedAt": "2023-03-07T17:13:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POMR8",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:15:50Z",
          "updatedAt": "2023-03-07T17:15:51Z",
          "comments": [
            {
              "originalPosition": 627,
              "body": "Captured in #26 ",
              "createdAt": "2023-03-07T17:15:51Z",
              "updatedAt": "2023-03-07T17:15:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POMg4",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:16:09Z",
          "updatedAt": "2023-03-07T17:16:09Z",
          "comments": [
            {
              "originalPosition": 630,
              "body": "Line breaks captured in #26 \r\n@nedmsmith, the multiple \"hands\" could use some more tweaking. Please open a new issue or PR for further clarification on liability. ",
              "createdAt": "2023-03-07T17:16:09Z",
              "updatedAt": "2023-03-07T17:18:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POPAr",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:20:44Z",
          "updatedAt": "2023-03-07T17:20:44Z",
          "comments": [
            {
              "originalPosition": 640,
              "body": "Thanks, @raylutz, in the spirit of merging this doc, and creating new issues/PRs for additional changes, I'm resolving this one. I did think we were avoiding the reference to \"trust relationship\", but please open an issue/PR if you feel otherwise.",
              "createdAt": "2023-03-07T17:20:44Z",
              "updatedAt": "2023-03-07T17:20:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PORvQ",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:25:01Z",
          "updatedAt": "2023-03-07T17:25:02Z",
          "comments": [
            {
              "originalPosition": 467,
              "body": "Captured in #26 ",
              "createdAt": "2023-03-07T17:25:02Z",
              "updatedAt": "2023-03-07T17:25:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POSKT",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:26:02Z",
          "updatedAt": "2023-03-07T17:26:02Z",
          "comments": [
            {
              "originalPosition": 510,
              "body": "@nedmsmith, can you confirm #32 captures your need here? If not, can you please open a new issue/PR?",
              "createdAt": "2023-03-07T17:26:02Z",
              "updatedAt": "2023-03-07T17:26:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POTBT",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:28:07Z",
          "updatedAt": "2023-03-07T17:28:08Z",
          "comments": [
            {
              "originalPosition": 519,
              "body": "Captured in #33 ",
              "createdAt": "2023-03-07T17:28:07Z",
              "updatedAt": "2023-03-07T17:28:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POTxY",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:29:55Z",
          "updatedAt": "2023-03-07T17:29:56Z",
          "comments": [
            {
              "originalPosition": 522,
              "body": "Captured in #34 ",
              "createdAt": "2023-03-07T17:29:56Z",
              "updatedAt": "2023-03-07T17:29:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POWgn",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:34:11Z",
          "updatedAt": "2023-03-07T17:34:12Z",
          "comments": [
            {
              "originalPosition": 355,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #35 ",
              "createdAt": "2023-03-07T17:34:12Z",
              "updatedAt": "2023-03-07T17:34:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POXqx",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:36:14Z",
          "updatedAt": "2023-03-07T17:36:14Z",
          "comments": [
            {
              "originalPosition": 360,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #36 ",
              "createdAt": "2023-03-07T17:36:14Z",
              "updatedAt": "2023-03-07T17:36:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POZbY",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:39:56Z",
          "updatedAt": "2023-03-07T17:39:57Z",
          "comments": [
            {
              "originalPosition": 371,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #37 ",
              "createdAt": "2023-03-07T17:39:56Z",
              "updatedAt": "2023-03-07T17:39:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POZ7g",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:41:05Z",
          "updatedAt": "2023-03-07T17:41:05Z",
          "comments": [
            {
              "originalPosition": 374,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #36. \r\nIf you feel \"auxiliary governance\" should be tracked separately, please open a new issue/pr.",
              "createdAt": "2023-03-07T17:41:05Z",
              "updatedAt": "2023-03-07T17:41:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POaJ2",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:41:33Z",
          "updatedAt": "2023-03-07T17:41:34Z",
          "comments": [
            {
              "originalPosition": 380,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #36",
              "createdAt": "2023-03-07T17:41:33Z",
              "updatedAt": "2023-03-07T17:41:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POcF2",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:45:11Z",
          "updatedAt": "2023-03-07T17:45:11Z",
          "comments": [
            {
              "originalPosition": 357,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #38 ",
              "createdAt": "2023-03-07T17:45:11Z",
              "updatedAt": "2023-03-07T17:45:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POevA",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:50:53Z",
          "updatedAt": "2023-03-07T17:50:54Z",
          "comments": [
            {
              "originalPosition": 394,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #39 ",
              "createdAt": "2023-03-07T17:50:53Z",
              "updatedAt": "2023-03-07T17:50:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POltR",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T18:06:13Z",
          "updatedAt": "2023-03-07T18:06:13Z",
          "comments": [
            {
              "originalPosition": 455,
              "body": "Thanks, @nedmsmith, to make iterative progress, this has been captured in #40 \r\nThanks, @nealmcb. COSE is intrinsic to SCITT as an extensible means to capture headers and payload in a consistent/standards-based format. The evaluation was captured here: [Digital Artifact Signing Envelope Format Comparison](https://docs.google.com/document/d/18YVGA4mq45wfUkWrAqWkymzdHRcXxlwINKXnEp86L0w/edit#heading=h.3v6vw85pjg5e)\r\nAs a result, sigstore/rekor added support through a [draft](https://github.com/sigstore/rekor/pull/731) then [subsequent merged PR](https://github.com/sigstore/rekor/pull/867)",
              "createdAt": "2023-03-07T18:06:13Z",
              "updatedAt": "2023-03-07T18:06:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POnbK",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T18:10:54Z",
          "updatedAt": "2023-03-07T18:10:55Z",
          "comments": [
            {
              "originalPosition": 525,
              "body": "Thanks @nedmsmith, to make iterative progress, I believe this has been captured in #34. \r\nIf you consider an external validation (local), may wish to re-verify information the service ran through its registration policy, the term local may help.\r\nRegistration policies will change over time, which also need to be captured as statements. So, a consumer may wish to validate specific policies unique to its environment.\r\nPlease do open another issue/PR if you feel this needs further clarification.",
              "createdAt": "2023-03-07T18:10:54Z",
              "updatedAt": "2023-03-07T18:10:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POoge",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T18:13:31Z",
          "updatedAt": "2023-03-07T18:13:31Z",
          "comments": [
            {
              "originalPosition": 528,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #41",
              "createdAt": "2023-03-07T18:13:31Z",
              "updatedAt": "2023-03-07T18:13:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POrhn",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T18:21:22Z",
          "updatedAt": "2023-03-07T18:21:23Z",
          "comments": [
            {
              "originalPosition": 540,
              "body": "Thanks @nedmsmith, @nealmcb: to make iterative progress, this has been captured in #42 ",
              "createdAt": "2023-03-07T18:21:22Z",
              "updatedAt": "2023-03-07T18:21:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POtn8",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T18:26:21Z",
          "updatedAt": "2023-03-07T18:26:21Z",
          "comments": [
            {
              "originalPosition": 544,
              "body": "Thanks @nedmsmith, there's been a few discussions around the need for multiple instances, operated by different entities for their specific purpose.  There's some more explanation here: https://scitt.io/supply-chain where a publisher and consumer will operate their own SCITT Transparency Service. Please open an issue if you feel we need further clarification on multiple instances, beyond the reliability/availability discussion. ",
              "createdAt": "2023-03-07T18:26:21Z",
              "updatedAt": "2023-03-07T18:26:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POvTc",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T18:29:40Z",
          "updatedAt": "2023-03-07T18:29:41Z",
          "comments": [
            {
              "originalPosition": 585,
              "body": "Thanks @nedmsmith, this is meant to capture PII or other privacy information. I read it as: anything in a SCITT Transparency Service should not be considered private, so don't put private information in SCITT, particularly in plaintext. \r\n\r\nTo make iterative progress, please open an issue/pr if you feel this needs further clarification. ",
              "createdAt": "2023-03-07T18:29:40Z",
              "updatedAt": "2023-03-07T18:29:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PgQKJ",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-09T21:39:56Z",
          "updatedAt": "2023-03-09T21:39:57Z",
          "comments": [
            {
              "originalPosition": 684,
              "body": "See #45 ",
              "createdAt": "2023-03-09T21:39:56Z",
              "updatedAt": "2023-03-09T21:39:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PgZKI",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-09T22:12:23Z",
          "updatedAt": "2023-03-09T22:12:24Z",
          "comments": [
            {
              "originalPosition": 687,
              "body": "@nedmsmith, please see #51 to see if this clarifies things. If not, please open a new issue. ",
              "createdAt": "2023-03-09T22:12:23Z",
              "updatedAt": "2023-03-09T22:12:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PgalT",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-09T22:18:05Z",
          "updatedAt": "2023-03-09T22:18:06Z",
          "comments": [
            {
              "originalPosition": 701,
              "body": "@nedmsmith, thanks for identifying ambiguity. Please see #52, and open a new issue if that doesn't help.",
              "createdAt": "2023-03-09T22:18:05Z",
              "updatedAt": "2023-03-09T22:18:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Pgidi",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-09T22:51:53Z",
          "updatedAt": "2023-03-09T22:51:53Z",
          "comments": [
            {
              "originalPosition": 710,
              "body": "Thanks @nedmsmith. The registration policy provides for a SCITT Transparency Service implementation to create various policies, including which identities, and or identity types are permitted. \r\nNote, there is a difference between a user that has RBAC writes to a ledger (Steve), and whether the signed statement from `the-ned-smith-project`, with an Issuer of `the-ned-smith-project` is accepted. \r\n\r\nThe first barrier is RBAC control. And implementations will have various DOS configurations. Do you think this should be captured in the SCITT architecture, or be part of an implementation?\r\n\r\nIf there's additional clarity needed, can you please open a new issue?",
              "createdAt": "2023-03-09T22:51:53Z",
              "updatedAt": "2023-03-09T22:51:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Pgj6c",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-09T22:58:53Z",
          "updatedAt": "2023-03-09T22:58:54Z",
          "comments": [
            {
              "originalPosition": 718,
              "body": "Thanks @nedmsmith. This is a good clarification. See #55 ",
              "createdAt": "2023-03-09T22:58:53Z",
              "updatedAt": "2023-03-09T22:58:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PhG44",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T02:24:57Z",
          "updatedAt": "2023-03-10T02:24:57Z",
          "comments": [
            {
              "originalPosition": 591,
              "body": "Thanks @nedmsmith \r\nThere's a combination of goal and boundary. \r\nThe goal of SCITT is to provide verified registration, based on the identity and a registration policy. This is why you see the authors focus on the notary concept. The notary doesn't evaluate the validatiy of the document that's being notarized. Rather the notary evaluates the trustworthiness of the identities signing. It's up to a consumer to decide if the content represents the info they can act upon. However, if you can't trust the issuer, the content is no different than a piece of info found \"on the street\", or \"on the web\".\r\n\r\nThe boundary, is related to SCITT doesn't evaluate the content. \r\n\r\nFor the Registered vs. Transparent Statement, @kaywilliams did open #20, which was duped to #8\r\n\r\nFWIW, I do see the concern with calling everything \"transparent\", when the contents may be opaque. Lets see if we can continue the conversation in #8 regarding terminology. \r\n",
              "createdAt": "2023-03-10T02:24:57Z",
              "updatedAt": "2023-03-10T02:24:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PhHBM",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T02:25:52Z",
          "updatedAt": "2023-03-10T02:25:53Z",
          "comments": [
            {
              "originalPosition": 607,
              "body": "@nedmsmith, do you mind opening a PR as a suggestion?",
              "createdAt": "2023-03-10T02:25:52Z",
              "updatedAt": "2023-03-10T02:25:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PhHZs",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T02:28:33Z",
          "updatedAt": "2023-03-10T02:28:33Z",
          "comments": [
            {
              "originalPosition": 639,
              "body": "Thanks, @nedmsmith Please see #58 and feel free to open a PR for some discussion.",
              "createdAt": "2023-03-10T02:28:33Z",
              "updatedAt": "2023-03-10T02:28:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 43,
      "id": "PR_kwDOIvmHss5LsXfz",
      "title": "Apply line wrapping at each sentance",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/43",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves issue #26",
      "createdAt": "2023-03-09T16:19:08Z",
      "updatedAt": "2023-03-09T16:28:26Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f1cbad3d7f035e1a2666130017b4cd520319b6cc",
      "headRepository": null,
      "headRefName": "issue-26",
      "headRefOid": "f1cbad3d7f035e1a2666130017b4cd520319b6cc",
      "closedAt": "2023-03-09T16:28:25Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 44,
      "id": "PR_kwDOIvmHss5Lsek3",
      "title": "Apply line wrapping at each sentence",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/44",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #26 ",
      "createdAt": "2023-03-09T16:39:43Z",
      "updatedAt": "2023-03-09T19:07:13Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f1cbad3d7f035e1a2666130017b4cd520319b6cc",
      "headRepository": null,
      "headRefName": "line-wraps",
      "headRefOid": "9b8445f5d9082c122ce0e34cd95597f94606d8ce",
      "closedAt": "2023-03-09T19:04:18Z",
      "mergedAt": "2023-03-09T19:04:18Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "0e3785939f8110ac67c36ebcbca1f4fc3dba9286"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 47,
      "id": "PR_kwDOIvmHss5Lt3yP",
      "title": "Consolidate Log to Ledger",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/47",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #46 ",
      "createdAt": "2023-03-09T21:12:47Z",
      "updatedAt": "2023-03-09T22:44:39Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "63f2a465b46ac3d2bc4cde1688b918ee0ce33f03",
      "headRepository": null,
      "headRefName": "issue-46",
      "headRefOid": "3de3fab4030585d2af27fda336b0c3cf7e08e417",
      "closedAt": "2023-03-09T22:32:23Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Replaced with #54 ",
          "createdAt": "2023-03-09T22:44:39Z",
          "updatedAt": "2023-03-09T22:44:39Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 48,
      "id": "PR_kwDOIvmHss5Lt5uM",
      "title": "Fix Terminology alpha ordering",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/48",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "No content changes. Fixes ordering after terminology renaming",
      "createdAt": "2023-03-09T21:21:37Z",
      "updatedAt": "2023-03-09T21:56:23Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0e3785939f8110ac67c36ebcbca1f4fc3dba9286",
      "headRepository": null,
      "headRefName": "terminology-ordering",
      "headRefOid": "9456f141418f75267757202b61ce643b82e23ae1",
      "closedAt": "2023-03-09T21:23:22Z",
      "mergedAt": "2023-03-09T21:23:22Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "63f2a465b46ac3d2bc4cde1688b918ee0ce33f03"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "With no content changes, build success, and to assure other PRs aren't blocked, I'm merging as editor.",
          "createdAt": "2023-03-09T21:23:10Z",
          "updatedAt": "2023-03-09T21:23:10Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 50,
      "id": "PR_kwDOIvmHss5LuBEQ",
      "title": "Spelling fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/50",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-09T21:56:01Z",
      "updatedAt": "2023-03-09T22:10:01Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "63f2a465b46ac3d2bc4cde1688b918ee0ce33f03",
      "headRepository": null,
      "headRefName": "nits",
      "headRefOid": "8c5283e7f1dd1ba48cd67e7186a61e99c9ff9cf5",
      "closedAt": "2023-03-09T21:56:57Z",
      "mergedAt": "2023-03-09T21:56:57Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "0b8a9b6ed17339467498c3fe436f0715395dc9b5"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "With no content changes (beyond spelling), build success, and to assure other PRs aren't blocked, I'm merging as editor.",
          "createdAt": "2023-03-09T21:56:49Z",
          "updatedAt": "2023-03-09T21:56:49Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "+1",
          "createdAt": "2023-03-09T22:10:00Z",
          "updatedAt": "2023-03-09T22:10:00Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 51,
      "id": "PR_kwDOIvmHss5LuFC-",
      "title": "Clarify PII info",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/51",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-09T22:11:56Z",
      "updatedAt": "2023-03-09T22:40:53Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0b8a9b6ed17339467498c3fe436f0715395dc9b5",
      "headRepository": null,
      "headRefName": "pii-info",
      "headRefOid": "dc95a996220afb5be6c11791446094b48073e286",
      "closedAt": "2023-03-09T22:32:24Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Replaced with #53",
          "createdAt": "2023-03-09T22:40:53Z",
          "updatedAt": "2023-03-09T22:40:53Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 52,
      "id": "PR_kwDOIvmHss5LuGIJ",
      "title": "Clarify use of we",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/52",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-09T22:17:15Z",
      "updatedAt": "2023-03-09T22:31:59Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0b8a9b6ed17339467498c3fe436f0715395dc9b5",
      "headRepository": null,
      "headRefName": "clarify-we",
      "headRefOid": "5a1a1b454586cbecfdc8ad6bd65406bab2eb5580",
      "closedAt": "2023-03-09T22:21:08Z",
      "mergedAt": "2023-03-09T22:21:08Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "44649625141c8f13140deb2896a145172001d3d2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5Pga8r",
          "commit": {
            "abbreviatedOid": "5a1a1b4"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "better",
          "createdAt": "2023-03-09T22:19:43Z",
          "updatedAt": "2023-03-09T22:19:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 53,
      "id": "PR_kwDOIvmHss5LuKwG",
      "title": "Clarify PII info",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/53",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-09T22:40:38Z",
      "updatedAt": "2023-05-02T14:19:29Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "44649625141c8f13140deb2896a145172001d3d2",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "pii-info",
      "headRefOid": "d481f03e920f144cbdc04590125a3bca6d72e9de",
      "closedAt": "2023-05-02T14:19:28Z",
      "mergedAt": "2023-05-02T14:19:28Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "e20a2aacbdb9062f9ffc862b3b5de9db21376f88"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5PkMdz",
          "commit": {
            "abbreviatedOid": "cd96de3"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T13:43:28Z",
          "updatedAt": "2023-03-10T13:43:29Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "There are cases where pii is exactly the information that we want to include and verify in the ledger, for example in genealogical applications. So I would say `issuers should not unnecessarily include` pii as clear text.",
              "createdAt": "2023-03-10T13:43:28Z",
              "updatedAt": "2023-03-10T13:43:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PtdgU",
          "commit": {
            "abbreviatedOid": "cd96de3"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-13T15:14:04Z",
          "updatedAt": "2023-03-13T15:14:05Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nA collection of Transparent Statements must not leak information about the contents of other Transparent Statements registered on the Transparency Service.\r\n```",
              "createdAt": "2023-03-13T15:14:04Z",
              "updatedAt": "2023-03-13T15:14:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Ptf_O",
          "commit": {
            "abbreviatedOid": "cd96de3"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-13T15:18:29Z",
          "updatedAt": "2023-03-13T15:18:30Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "We should leave this to a generic statement, like as much as possible PII as clear statements should be avoided (unless the use case demands it).",
              "createdAt": "2023-03-13T15:18:29Z",
              "updatedAt": "2023-03-13T15:18:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PthH1",
          "commit": {
            "abbreviatedOid": "cd96de3"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Left few comments, kindly absorb and move on.\r\n\r\nI have approved it now!",
          "createdAt": "2023-03-13T15:20:36Z",
          "updatedAt": "2023-03-13T15:20:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5Q8Lvy",
          "commit": {
            "abbreviatedOid": "cd96de3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-26T06:27:30Z",
          "updatedAt": "2023-03-26T06:27:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5SOB9y",
          "commit": {
            "abbreviatedOid": "cd96de3"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-11T14:31:25Z",
          "updatedAt": "2023-04-11T14:31:26Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Concerns around the term PII, as its definition is inconsistent across various governing bodies.\r\nShould we:\r\n- use a more generic reference for the user to be aware of the type of confidential materials?\r\n- use PII as a bucket, that can be interpreted by the user, for the scenario?\r\n\r\nA payload can contain:\r\n- clear text - transparent\r\n- opaque, as they may be encrypted\r\n- a link to an external service/storage \r\n",
              "createdAt": "2023-04-11T14:31:25Z",
              "updatedAt": "2023-04-11T14:31:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 54,
      "id": "PR_kwDOIvmHss5LuLZc",
      "title": "Consolidate Log to Ledger",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/54",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #46 ",
      "createdAt": "2023-03-09T22:44:28Z",
      "updatedAt": "2023-05-01T23:58:07Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "44649625141c8f13140deb2896a145172001d3d2",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "issue-46",
      "headRefOid": "3b558594b57d3134cc7ecb89a2a6aa61e6e59939",
      "closedAt": "2023-05-01T23:58:06Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker I think way back we all agreed not to use Ledger as a term in the Architecture document.\r\n\r\nNot sure why we are bringing it up here again ?",
          "createdAt": "2023-03-10T09:27:21Z",
          "updatedAt": "2023-03-10T09:27:21Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker to reverse log and ledger",
          "createdAt": "2023-04-11T14:33:04Z",
          "updatedAt": "2023-04-11T14:33:04Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, in lieu of #60 ",
          "createdAt": "2023-05-01T23:58:06Z",
          "updatedAt": "2023-05-01T23:58:06Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5Q8Lrw",
          "commit": {
            "abbreviatedOid": "3b55859"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-26T06:25:37Z",
          "updatedAt": "2023-03-26T06:25:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDOIvmHss5LuTYp",
      "title": "Clarify COSE as MUST",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/56",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #40 \r\n\r\n@nedmsmith, PTAL",
      "createdAt": "2023-03-09T23:20:49Z",
      "updatedAt": "2023-03-10T10:19:23Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "44649625141c8f13140deb2896a145172001d3d2",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "issue-40",
      "headRefOid": "8d6eb1d686a260982e9c0bb3b6b86cbd22844e7b",
      "closedAt": "2023-03-10T10:19:23Z",
      "mergedAt": "2023-03-10T10:19:23Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "cab90cc1fb43a34c7b42bfa78b1ec79401a44125"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5Pg4MA",
          "commit": {
            "abbreviatedOid": "8d6eb1d"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "> Once all the Envelope headers are set, an Issuer MUST use a standard COSE implementation to produce an appropriately serialized Signed Statement\r\n\r\nIt would seem more appropriate to just say `MUST produce an appropriately serialized COSE-compliant Signed Statement`, rather than introduce the notion of a \"standard COSE implementation\". The latter would seem to involve a need to have a certification program for COSE implementations or something unnecessarily involved like that.\r\n\r\n> (the SCITT tag of `COSE_Sign1_Tagged` is outside the scope of COSE, and used to indicate that a signed object is a Signed Statement).\r\n\r\nI don't follow the implications of this. Can it be spelled out some more?\r\n\r\nI'll also note #57",
          "createdAt": "2023-03-10T00:48:26Z",
          "updatedAt": "2023-03-10T00:48:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5Pi1OA",
          "commit": {
            "abbreviatedOid": "8d6eb1d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-03-10T10:19:16Z",
          "updatedAt": "2023-03-10T10:19:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 59,
      "id": "PR_kwDOIvmHss5Lyxv8",
      "title": "Clarify notarization function",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/59",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-10T18:57:09Z",
      "updatedAt": "2023-05-02T14:30:44Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cab90cc1fb43a34c7b42bfa78b1ec79401a44125",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "issue-23",
      "headRefOid": "77985b917c5c02a4ba17fe182ffb4c29653a47db",
      "closedAt": "2023-05-02T14:30:41Z",
      "mergedAt": "2023-05-02T14:30:41Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "66506ac9e7400a42405e8b24904d7594c38d789b"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker Incorporated Review Comments!",
          "createdAt": "2023-03-13T15:40:39Z",
          "updatedAt": "2023-03-13T15:40:39Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @yogeshbdeshpande \r\nlets see if we can agree on append-only log|registry today so we can adapt and merge. ",
          "createdAt": "2023-03-13T16:35:24Z",
          "updatedAt": "2023-03-13T16:35:24Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "For the sake of clarity, suggesting \"append only log\"",
          "createdAt": "2023-04-11T14:36:01Z",
          "updatedAt": "2023-04-11T14:36:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5PmXUV",
          "commit": {
            "abbreviatedOid": "f4ebfa9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T18:58:02Z",
          "updatedAt": "2023-03-10T18:58:03Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nThe issuer of a Signed Statement should be authenticated and trusted according to the registration policy of the transparency service.\r\n```",
              "createdAt": "2023-03-10T18:58:02Z",
              "updatedAt": "2023-03-10T18:58:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Pmm24",
          "commit": {
            "abbreviatedOid": "f3a8b2d"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T19:45:29Z",
          "updatedAt": "2023-03-10T19:45:29Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "can we remove \"believable\" as it opens a bunch of questions for believable by whom and such. \r\n```suggestion\r\nIf trust can be put into the operations that record Signed Statements in a secure, append-only Registry via online operations, the same trust can be put into a corresponding Receipt that is the resulting documentation (i.e transparent signed statement, via an endorsement from a notarization function) issued by the Transparency Services and that can be validated in offline operations.\r\n```",
              "createdAt": "2023-03-10T19:45:29Z",
              "updatedAt": "2023-03-10T19:45:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Pthgr",
          "commit": {
            "abbreviatedOid": "f3a8b2d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-13T15:21:22Z",
          "updatedAt": "2023-03-13T15:21:22Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "@SteveLasker Agree you have a valid point, I will change this!",
              "createdAt": "2023-03-13T15:21:22Z",
              "updatedAt": "2023-03-13T15:21:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q8Lq8",
          "commit": {
            "abbreviatedOid": "3869b76"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-26T06:24:59Z",
          "updatedAt": "2023-03-26T06:24:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5T7_Ro",
          "commit": {
            "abbreviatedOid": "3869b76"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-01T23:55:27Z",
          "updatedAt": "2023-05-01T23:55:38Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Nit for consistency:\r\n> append-only Registry \r\n\r\nAppend-only Log ",
              "createdAt": "2023-05-01T23:55:27Z",
              "updatedAt": "2023-05-01T23:55:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T_vpi",
          "commit": {
            "abbreviatedOid": "3869b76"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T14:23:41Z",
          "updatedAt": "2023-05-02T14:23:42Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nIf trust can be put into the operations that record Signed Statements in a secure, append-only log via online operations, the same trust can be put into a corresponding Receipt that is the resulting documentation (i.e transparent signed statement, via an endorsement from a notarization\r\n```",
              "createdAt": "2023-05-02T14:23:41Z",
              "updatedAt": "2023-05-02T14:23:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T_yJF",
          "commit": {
            "abbreviatedOid": "58c3f74"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T14:26:20Z",
          "updatedAt": "2023-05-02T14:26:21Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nIf trust can be put into the operations that record Signed Statements in a secure, append-only log via online operations, the same trust can be put into the resulting transparent statement,\r\n```",
              "createdAt": "2023-05-02T14:26:20Z",
              "updatedAt": "2023-05-02T14:26:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T_y8q",
          "commit": {
            "abbreviatedOid": "58c3f74"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T14:26:51Z",
          "updatedAt": "2023-05-02T14:26:52Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nThe issuer of a Signed Statement should be authenticated and authorized according to the registration policy of the transparency service.\r\n```",
              "createdAt": "2023-05-02T14:26:51Z",
              "updatedAt": "2023-05-02T14:26:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T_0UP",
          "commit": {
            "abbreviatedOid": "53de12b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T14:29:15Z",
          "updatedAt": "2023-05-02T14:29:15Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nissued by the Transparency Services and that can be validated in offline operations.\r\n```",
              "createdAt": "2023-05-02T14:29:15Z",
              "updatedAt": "2023-05-02T14:29:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T_03t",
          "commit": {
            "abbreviatedOid": "77985b9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-05-02T14:30:20Z",
          "updatedAt": "2023-05-02T14:30:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 60,
      "id": "PR_kwDOIvmHss5L1wN9",
      "title": "Consistency fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/60",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A scan of the document to align terminology consistency.\r\n\r\nThe changes account for:\r\n- Registry and Transparency Service being used interchangeably.\r\n- Log and Ledger being used interchangeably.\r\n\r\nFor the purpose of this PR:\r\n\r\n- **append-only Log** has been replaced with **append-only Ledger**. **Reasonsing:** As we're focusing on a Transparency Service verifying the identity of the issuer, this aligns with the Notary concept. A Notary writes entries to a Ledger. This also leaves the term Log available for diagnostics logs used to troubleshoot a Transparency Service.\r\n- **Transparency Service**: An entity operating an instance of this specification. Personally, I struggle as \"Transparent\" suggests everything is visible and public. We later discuss Opaque statements being placed in the Transparency Service. My personal suggestion is to call it a \"SCITT Registry\" and we leave the terms Transparent and Opaque to the types of payloads placed in the Statement.\r\n\r\nI've only completed to line 141, with an edit to terminology.  I'll try pickup later today.\r\nI've created this PR under a `consistency-fixes` branch here, so others can also make proposed changes.\r\n",
      "createdAt": "2023-03-12T17:16:50Z",
      "updatedAt": "2023-10-23T23:24:05Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e835300b89a744b909f81eb46035bf119ff4fb15",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "consistency-fixes",
      "headRefOid": "888fc609259f7ed7a261a9c436dd8cedb5bf155d",
      "closedAt": "2023-06-13T14:07:54Z",
      "mergedAt": "2023-06-13T14:07:54Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "be2b399f23617dd5a231aa8380579ea69c6de963"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker , I think, we are going in circles here.\r\n\r\nWe agreed we will use SCITT Registry and where applicable, an append only log and not use the term ledger, consistently throughout the document.\r\n\r\nThis was agreed between all the Architecture authors in consensus during the Monday meeting.\r\n\r\nRequest please do not push more PR's with Ledger terminology.\r\n\r\nI would request please we stick to the same concept now also ",
          "createdAt": "2023-03-13T09:33:42Z",
          "updatedAt": "2023-03-13T09:33:42Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @yogeshbdeshpande,\r\nI hadn\u2019t seen the note. \r\nThe doc currently uses several terms interchangeably. \r\n- append-only log is fine over ledger as a notary writes to a log\r\n- - we\u2019ve consolidated on statement, signed statement and transparent statement \u2705 :\r\n- but what are we using to refer to an instance of SCITT? Transparency Service or Registry?",
          "createdAt": "2023-03-13T14:46:50Z",
          "updatedAt": "2023-03-13T14:47:26Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> * instance of SCITT\r\n\r\nInstance of SCITT is a Transparency Service. It is a logical layer, which has Registration Functions, Notary Function baked into it.\r\n\r\nRegistry is a synonym to an \"Append Only Log\"",
          "createdAt": "2023-03-13T15:04:18Z",
          "updatedAt": "2023-03-13T15:04:18Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Can we capture the decisions in these issues:\r\n- [Terminology: Registry & Transparency Service #7](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/7)\r\n- [Converge Claim and Statement #8](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/8)\r\n- [Change term artifact #9](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/9)",
          "createdAt": "2023-03-13T15:59:19Z",
          "updatedAt": "2023-03-13T15:59:19Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker to replace \"append-only registry\" with \"append-only log\"",
          "createdAt": "2023-04-11T14:38:05Z",
          "updatedAt": "2023-04-11T14:38:05Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @OR13 , @mprorock, @yogeshbdeshpande for the feedback. Can you please take a look and confirm the latest changes meet the outcome we agreed to?",
          "createdAt": "2023-05-01T21:07:48Z",
          "updatedAt": "2023-05-01T21:07:48Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5Q8LSO",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T06:13:09Z",
          "updatedAt": "2023-03-26T06:13:09Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\nProducing a Transparent Statement is also referred to as a form of notarization.\r\n```",
              "createdAt": "2023-03-26T06:13:09Z",
              "updatedAt": "2023-03-26T06:13:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q8LVH",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T06:15:30Z",
          "updatedAt": "2023-03-26T06:15:31Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nThe core components are based on the Concise Signing and Encryption standard specified in {{-COSE}}, which is used to produce Signed Statements about Artifacts and to build and maintain a Merkle tree that functions as an append-only Ledger for corresponding Signed Statements.\r\n```",
              "createdAt": "2023-03-26T06:15:30Z",
              "updatedAt": "2023-03-26T06:15:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q8LgQ",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T06:19:49Z",
          "updatedAt": "2023-03-26T06:19:49Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-03-26T06:19:49Z",
              "updatedAt": "2023-03-26T06:19:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q8LhK",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T06:20:31Z",
          "updatedAt": "2023-03-26T06:20:32Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "I think this is ledger specific implementation detail, not \"cross ledger\" or \"SCITT\".",
              "createdAt": "2023-03-26T06:20:31Z",
              "updatedAt": "2023-03-26T06:20:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q8LoB",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T06:22:54Z",
          "updatedAt": "2023-03-26T06:22:54Z",
          "comments": [
            {
              "originalPosition": 395,
              "body": "why not `application/json`....",
              "createdAt": "2023-03-26T06:22:54Z",
              "updatedAt": "2023-03-26T06:22:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q8Lp2",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "A few nits",
          "createdAt": "2023-03-26T06:24:08Z",
          "updatedAt": "2023-03-26T06:24:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5Q8UwG",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "letmaik",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T10:33:51Z",
          "updatedAt": "2023-03-26T10:33:51Z",
          "comments": [
            {
              "originalPosition": 395,
              "body": "Out of scope for this PR I would say. Maybe open an issue to discuss it? ",
              "createdAt": "2023-03-26T10:33:51Z",
              "updatedAt": "2023-03-26T10:33:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q84Cu",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T22:19:31Z",
          "updatedAt": "2023-03-26T22:19:31Z",
          "comments": [
            {
              "originalPosition": 395,
              "body": "yeah, def out of scope, was just wondering if this had been discussed, I will file an issue.",
              "createdAt": "2023-03-26T22:19:31Z",
              "updatedAt": "2023-03-26T22:19:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q84Fp",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T22:20:45Z",
          "updatedAt": "2023-03-26T22:20:45Z",
          "comments": [
            {
              "originalPosition": 395,
              "body": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/62",
              "createdAt": "2023-03-26T22:20:45Z",
              "updatedAt": "2023-03-26T22:20:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5TzCrK",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-28T12:55:11Z",
          "updatedAt": "2023-04-28T12:55:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5T7fdL",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-01T20:53:15Z",
          "updatedAt": "2023-05-01T20:53:16Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "Added. Note, I'm not using the GithUb commit suggestion as it bypasses signing :(",
              "createdAt": "2023-05-01T20:53:16Z",
              "updatedAt": "2023-05-01T20:53:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T7gQp",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-01T20:56:28Z",
          "updatedAt": "2023-05-01T20:56:28Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "@OR13, while I agree, I'm not sure what you're suggesting we'd change here. I was reading this as how SCITT could operate, acknowledging different implemetnations are still consistent with a SCITT spec. ",
              "createdAt": "2023-05-01T20:56:28Z",
              "updatedAt": "2023-05-01T20:56:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T_5OX",
          "commit": {
            "abbreviatedOid": "c934d09"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T14:39:02Z",
          "updatedAt": "2023-05-02T14:39:03Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-05-02T14:39:02Z",
              "updatedAt": "2023-05-02T14:39:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UBcL9",
          "commit": {
            "abbreviatedOid": "c934d09"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T18:30:41Z",
          "updatedAt": "2023-05-02T18:30:41Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "I've removed line 123 above: \r\n> Producing a Transparent Statement is also referred to as a form of notarization.\r\n\r\nAdded:\r\n\r\n> Producing a Transparent Statement is also referred to as a form of notarization.",
              "createdAt": "2023-05-02T18:30:41Z",
              "updatedAt": "2023-05-02T18:30:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5YDWbo",
          "commit": {
            "abbreviatedOid": "888fc60"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-06-13T14:07:14Z",
          "updatedAt": "2023-06-13T14:07:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 61,
      "id": "PR_kwDOIvmHss5MUmWm",
      "title": "Adding Seve Lasker as editor",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/61",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-17T16:31:29Z",
      "updatedAt": "2023-10-23T23:24:01Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cab90cc1fb43a34c7b42bfa78b1ec79401a44125",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "roster-update",
      "headRefOid": "57681e544179426c650f61f14bd20a8bba6ba429",
      "closedAt": "2023-03-24T19:40:08Z",
      "mergedAt": "2023-03-24T19:40:08Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "bf0486811a272acd157de0db9a561476d3221f29"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5QPtPs",
          "commit": {
            "abbreviatedOid": "57681e5"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-17T16:33:13Z",
          "updatedAt": "2023-03-17T16:33:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 64,
      "id": "PR_kwDOIvmHss5NIT03",
      "title": "Issue 45",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/64",
      "state": "CLOSED",
      "author": "roywill",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Suggested way to address Issue 45",
      "createdAt": "2023-03-29T06:23:45Z",
      "updatedAt": "2023-07-10T04:14:34Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "bf0486811a272acd157de0db9a561476d3221f29",
      "headRepository": "roywill/draft-ietf-scitt-architecture-Issue-45",
      "headRefName": "main",
      "headRefOid": "2fb1eaeff710ed05d863bf8af629c81364f43562",
      "closedAt": "2023-07-10T04:14:33Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@roywill can you help with some updates?",
          "createdAt": "2023-06-13T14:04:52Z",
          "updatedAt": "2023-06-13T14:04:52Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I suggest this PR be closed it seems over taken by events, and has conflicts.",
          "createdAt": "2023-06-22T18:14:40Z",
          "updatedAt": "2023-06-22T18:14:40Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I support @OR13 view on this PR. We should abandon this PR, give a fresh pass on the Architecture and proceed from there!",
          "createdAt": "2023-06-23T09:05:26Z",
          "updatedAt": "2023-06-23T09:05:26Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as it's aged, with other edits. If portions are still needed, please open a new PR, on the current branch.",
          "createdAt": "2023-07-10T04:14:33Z",
          "updatedAt": "2023-07-10T04:14:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5RbWCI",
          "commit": {
            "abbreviatedOid": "f832d00"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T01:12:02Z",
          "updatedAt": "2023-03-31T01:12:02Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Are we sure that the transparent statement goes in the log?\r\n\r\nThat seems a bit meta, since the signed statement gets a receipt when it goes in the log, and then the signed statement with the embedded receipt becomes a transparent statement, if that goes in the log, the receipt you would get would be for a transparent statement, not a signed statement.\r\n\r\nMy mental model is:\r\n\r\nsigned statement \r\n-> registration \r\n-> (log entry, with evidence) \r\n-> receipt (proof of inclusion for statement and evidence)\r\n-> (notary signature, from transparency service)\r\n-> transparent statement\r\n\r\n> \"The act of registration will always record in the logs the Transparent Statement and associated resolution evidence.\"\r\n\r\nI think this should be:\r\n\r\n\"Successful registration implies that the **Signed Statement** and any associated evidence, have been appended to the transparency log\"",
              "createdAt": "2023-03-31T01:12:02Z",
              "updatedAt": "2023-03-31T01:13:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5RbW42",
          "commit": {
            "abbreviatedOid": "f832d00"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T01:18:25Z",
          "updatedAt": "2023-03-31T01:18:26Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nNonetheless, Issuers should carefully review the inclusion of private/confidential materials in their issued Signed Statements; they may for instance remove any PII, or leverage payloads based on opaque cryptographic commitments, such as hashes of the original payload content.  The pattern of leveraging COSE Sign1 with detached payloads, and embedded URL in the protected header, results in a situation where the envelope content is on the log (and viewable) and a different access policy can be used for the confidential content, based on the values provided in the protected header. Furthermore, for confidentiality or compliance reasons the original content of the signed statement may no longer be retained when it is referenced by hash, leaving just the record of registration.\r\n```",
              "createdAt": "2023-03-31T01:18:25Z",
              "updatedAt": "2023-03-31T02:20:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5RbXGr",
          "commit": {
            "abbreviatedOid": "f832d00"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I think we can tighten this language up a bit.",
          "createdAt": "2023-03-31T01:20:05Z",
          "updatedAt": "2023-03-31T01:20:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5S3Qd4",
          "commit": {
            "abbreviatedOid": "f832d00"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-18T14:09:05Z",
          "updatedAt": "2023-04-18T14:09:06Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Re: \"mental model\" sequence, I see the production of a receipt as a two-step process: (1) the transparency service signs and persists the log entry; (2) anyone (e.g. the transparency service) can extract from the extended log the receipt by collecting the signature and intermediate hashes.",
              "createdAt": "2023-04-18T14:09:05Z",
              "updatedAt": "2023-04-18T14:09:06Z"
            }
          ]
        }
      ]
    },
    {
      "number": 68,
      "id": "PR_kwDOIvmHss5QFre6",
      "title": "Use COSE Signed Merkle Tree Proofs as a basis for receipts (#22)",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/68",
      "state": "MERGED",
      "author": "ad-l",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As proposed in at the WG meeting in Tokyo, we would like to move receipts as a generic primitive in COSE. (see issue #22)\r\n\r\nThis PR removes all explicit references to the SCITT receipt ID and instead defines Receipts based on [Orie's COSE Signer Merkle Tree Proof ID](https://ietf-scitt.github.io/draft-steele-cose-merkle-tree-proofs/letmaik/remove-non-rfc-tree-algs/draft-steele-cose-merkle-tree-proofs.html#name-signed-merkle-tree-proof).\r\n\r\nNote that I also incorporated 2 proposed changes to make SCITT statement and receipt signature more symmetrical:\r\n- Receipts now include the DID of the transparency service. This can be optionally used to discover the receipt signing key. This change was originally proposed at the IETF WG meeting in London. It simplifies statement authorization, as verifiers can only trust the stable DID of the TS instead of worry about keys or certificate that may be rotated\r\n- Transparency services can now indicate the registration policies that were actually applied. This is very helpful for verifier, for instance to check the freshness of claims. This was proposed in Tokyo",
      "createdAt": "2023-05-09T12:37:04Z",
      "updatedAt": "2023-06-13T14:23:16Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "be2b399f23617dd5a231aa8380579ea69c6de963",
      "headRepository": "ad-l/draft-ietf-scitt-architecture",
      "headRefName": "cose_receipts",
      "headRefOid": "90bd8c830d86f22a5fe093ab321fba5936bf2880",
      "closedAt": "2023-06-13T14:23:16Z",
      "mergedAt": "2023-06-13T14:23:16Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM, see this implementation:\r\n\r\n- https://github.com/transmute-industries/cose/blob/main/test/readme.md.test.ts\r\n\r\nand demo:\r\n\r\n- https://scitt.xyz",
          "createdAt": "2023-05-30T15:03:02Z",
          "updatedAt": "2023-05-30T15:03:02Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz, can you help resolve the errors? ",
          "createdAt": "2023-06-05T14:50:18Z",
          "updatedAt": "2023-06-05T14:50:18Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "NONE",
          "body": "Hi,\r\nDoes this change mean that implementations based on native merkle tries (eg [ethereum erc 1186](https://eips.ethereum.org/EIPS/eip-1186) will have to translate proofs to this format ? And if that is so, what is the basis for trusting the service that does that ? \r\n\r\nOr is there scope for registering trie algorithms based on native proofs like ERC 1186 ?",
          "createdAt": "2023-06-07T11:48:12Z",
          "updatedAt": "2023-06-07T11:48:12Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5Uj8Io",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I'd like to more generally discuss additional information provided by the TS as it issues receipts:\r\n- Some information \"at the root\" refers to its signing (timestamp, keying, ID, etc) but implicitly applies to every statement recorded so far.\r\n- As discussed at the last hackathon, some information \"at the leaf\" is the outcome of applying the TS registration policy to each signed statement, including e.g. the configuration of the TS at that point (timestamp, authorized keys, DID resolution results, etc) ",
          "createdAt": "2023-05-09T13:58:38Z",
          "updatedAt": "2023-05-09T13:58:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5UkB2j",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:08:00Z",
          "updatedAt": "2023-05-09T14:08:00Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n  I-D.draft-steele-cose-merkle-tree-proofs: COMETRE\r\n```",
              "createdAt": "2023-05-09T14:08:00Z",
              "updatedAt": "2023-05-09T14:08:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UkCAU",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:08:18Z",
          "updatedAt": "2023-05-09T14:08:19Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nSince COSE Signed Merkle Tree Proofs ({{-COMETRE}}) support multiple Merkle Tree algorithms, SCITT supports different Transparency Service implementations of the Registry, such as historical Merkle Trees or sparse Merkle Trees.\r\n```",
              "createdAt": "2023-05-09T14:08:18Z",
              "updatedAt": "2023-05-09T14:08:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UkDsr",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:10:40Z",
          "updatedAt": "2023-05-09T14:10:40Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "```suggestion\r\nThe high-level validation algorithm is described in {{validation}}; the Registry-specific details of checking Receipts are covered in {{-COMTRE}}.\r\n```",
              "createdAt": "2023-05-09T14:10:40Z",
              "updatedAt": "2023-05-09T14:10:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UkE5d",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:12:16Z",
          "updatedAt": "2023-05-09T14:12:16Z",
          "comments": [
            {
              "originalPosition": 127,
              "body": "```suggestion\r\n  ? 4 => bstr                ; Key ID (optional)\r\n  ? 33 => COSE_X509\t         ; X.509 chain (optional)\r\n```",
              "createdAt": "2023-05-09T14:12:16Z",
              "updatedAt": "2023-05-09T14:12:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UkFq1",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:13:16Z",
          "updatedAt": "2023-05-09T14:13:16Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "any header parameters/attributes that are mandatory? we can make them mandatory by being in the label 2 array.",
              "createdAt": "2023-05-09T14:13:16Z",
              "updatedAt": "2023-05-09T14:13:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UkHE5",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:15:05Z",
          "updatedAt": "2023-05-09T14:15:06Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "how different is SCITT Version to Receipt Version",
              "createdAt": "2023-05-09T14:15:05Z",
              "updatedAt": "2023-05-09T14:15:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UkaPt",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:49:04Z",
          "updatedAt": "2023-05-09T14:49:04Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "```suggestion\r\n  390 => int               ; SCITT Receipt Version\r\n```",
              "createdAt": "2023-05-09T14:49:04Z",
              "updatedAt": "2023-05-09T14:49:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Wf2ZE",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-30T15:04:09Z",
          "updatedAt": "2023-05-30T15:04:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5Wf9Dy",
          "commit": {
            "abbreviatedOid": "c61a1bb"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-30T15:16:24Z",
          "updatedAt": "2023-05-30T15:16:24Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "```suggestion\r\n  2 => [+ label]            ; Critical headers\r\n```",
              "createdAt": "2023-05-30T15:16:24Z",
              "updatedAt": "2023-05-30T15:16:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Wf9YD",
          "commit": {
            "abbreviatedOid": "bf42e07"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-30T15:17:03Z",
          "updatedAt": "2023-05-30T15:17:04Z",
          "comments": [
            {
              "originalPosition": 127,
              "body": "will fix composite quantities later",
              "createdAt": "2023-05-30T15:17:03Z",
              "updatedAt": "2023-05-30T15:17:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Wf98o",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "iteration is good enough for now. waiting for cometre update and then go from there",
          "createdAt": "2023-05-30T15:18:10Z",
          "updatedAt": "2023-05-30T15:18:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5XVu_g",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:12:48Z",
          "updatedAt": "2023-06-06T14:12:48Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "A Receipt is a SCITT word for the COMETRE concept of a \"Signed Inclusion Proof\".",
              "createdAt": "2023-06-06T14:12:48Z",
              "updatedAt": "2023-06-06T14:12:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVvQD",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:13:15Z",
          "updatedAt": "2023-06-06T14:13:15Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n: a Receipt is a cryptographic proof that a Signed Statement is recorded in the Registry. Receipts are based on COSE Signed Merkle Tree Proofs {{-COMETRE}}; they consist of a Registry-specific inclusion proof, a signature by the Transparency Service of the state of the Registry, and additional metadata (contained in the signature's protected headers) to assist in auditing.\r\n```",
              "createdAt": "2023-06-06T14:13:15Z",
              "updatedAt": "2023-06-06T14:13:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVvuv",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:13:59Z",
          "updatedAt": "2023-06-06T14:14:00Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "```suggestion\r\n  ? 393 => RegistrationInfo  ; Registration policy information (optional)\r\n```",
              "createdAt": "2023-06-06T14:13:59Z",
              "updatedAt": "2023-06-06T14:14:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVvwu",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:14:03Z",
          "updatedAt": "2023-06-06T14:14:03Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "ideally there would be references to these tree types here.",
              "createdAt": "2023-06-06T14:14:03Z",
              "updatedAt": "2023-06-06T14:14:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVvyb",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "ad-l",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:14:06Z",
          "updatedAt": "2023-06-06T14:14:06Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "Add ?",
              "createdAt": "2023-06-06T14:14:06Z",
              "updatedAt": "2023-06-06T14:14:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVv2e",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:14:14Z",
          "updatedAt": "2023-06-06T14:14:14Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nMost of the details of the Receipt's contents are specified in the COSE Signed Merkle Tree Proof document {{-COMETRE}}.\r\n```",
              "createdAt": "2023-06-06T14:14:14Z",
              "updatedAt": "2023-06-06T14:14:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVwFu",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:14:38Z",
          "updatedAt": "2023-06-06T14:14:39Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "is this intentional?",
              "createdAt": "2023-06-06T14:14:39Z",
              "updatedAt": "2023-06-06T14:14:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVwQ9",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:14:58Z",
          "updatedAt": "2023-06-06T14:14:59Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "+1",
              "createdAt": "2023-06-06T14:14:58Z",
              "updatedAt": "2023-06-06T14:14:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVwV9",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:15:07Z",
          "updatedAt": "2023-06-06T14:15:07Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nReceipts are based on COSE Signed Merkle Tree Proofs ({{-COMETRE}}) with an additional wrapper structure that adds the following information:\r\n```",
              "createdAt": "2023-06-06T14:15:07Z",
              "updatedAt": "2023-06-06T14:15:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVwl3",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:15:33Z",
          "updatedAt": "2023-06-06T14:15:34Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "```suggestion\r\n- Since {{-COMETRE}} uses optional headers, the `crit` header (id: 2) MUST be included and all SCITT-specific headers (version, issuer DID and Registration Policy) MUST be marked critical.\r\n```",
              "createdAt": "2023-06-06T14:15:33Z",
              "updatedAt": "2023-06-06T14:15:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVwyD",
          "commit": {
            "abbreviatedOid": "bb9522c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:15:54Z",
          "updatedAt": "2023-06-06T14:15:54Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "+1",
              "createdAt": "2023-06-06T14:15:54Z",
              "updatedAt": "2023-06-06T14:15:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVxHs",
          "commit": {
            "abbreviatedOid": "af28f66"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:16:31Z",
          "updatedAt": "2023-06-06T14:16:31Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "+1",
              "createdAt": "2023-06-06T14:16:31Z",
              "updatedAt": "2023-06-06T14:16:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVxSG",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:16:49Z",
          "updatedAt": "2023-06-06T14:16:49Z",
          "comments": [
            {
              "originalPosition": 133,
              "body": "is \"did_manifest\" code for \"did document\" ?",
              "createdAt": "2023-06-06T14:16:49Z",
              "updatedAt": "2023-06-06T14:16:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVxSI",
          "commit": {
            "abbreviatedOid": "fc55952"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:16:49Z",
          "updatedAt": "2023-06-06T14:16:50Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "+1",
              "createdAt": "2023-06-06T14:16:49Z",
              "updatedAt": "2023-06-06T14:16:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVxZh",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:17:01Z",
          "updatedAt": "2023-06-06T14:17:02Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "```suggestion\r\nThe high-level validation algorithm is described in {{validation}}; the Registry-specific details of checking Receipts are covered in {{-COMETRE}}.\r\n```",
              "createdAt": "2023-06-06T14:17:02Z",
              "updatedAt": "2023-06-06T14:17:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVxjM",
          "commit": {
            "abbreviatedOid": "2e75db1"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:17:17Z",
          "updatedAt": "2023-06-06T14:17:18Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "+1",
              "createdAt": "2023-06-06T14:17:18Z",
              "updatedAt": "2023-06-06T14:17:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVxqA",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:17:30Z",
          "updatedAt": "2023-06-06T14:17:30Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "```suggestion\r\nThe retrieved Receipt may be embedded in the corresponding COSE_Sign1 document in the unprotected header, of the signed statement.\r\n```",
              "createdAt": "2023-06-06T14:17:30Z",
              "updatedAt": "2023-06-06T14:17:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVyUj",
          "commit": {
            "abbreviatedOid": "01f595d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:18:42Z",
          "updatedAt": "2023-06-06T14:18:43Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "+1",
              "createdAt": "2023-06-06T14:18:42Z",
              "updatedAt": "2023-06-06T14:18:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVyoW",
          "commit": {
            "abbreviatedOid": "01f595d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:19:16Z",
          "updatedAt": "2023-06-06T14:19:17Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "```suggestion\r\n; Details of the registration policy applied by the TS\r\n```",
              "createdAt": "2023-06-06T14:19:16Z",
              "updatedAt": "2023-06-06T14:19:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XV0Xi",
          "commit": {
            "abbreviatedOid": "2c6aed4"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:22:17Z",
          "updatedAt": "2023-06-06T14:22:18Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "I am okay with that re-statement. Maybe add a backward reference to the Terminology Section later?",
              "createdAt": "2023-06-06T14:22:17Z",
              "updatedAt": "2023-06-06T14:22:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XV8H6",
          "commit": {
            "abbreviatedOid": "01f595d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:35:32Z",
          "updatedAt": "2023-06-06T14:35:32Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "```suggestion\r\n  ? \"log_index\": uint,\r\n```",
              "createdAt": "2023-06-06T14:35:32Z",
              "updatedAt": "2023-06-06T14:35:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5YDfmo",
          "commit": {
            "abbreviatedOid": "90bd8c8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-06-13T14:23:06Z",
          "updatedAt": "2023-06-13T14:23:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 71,
      "id": "PR_kwDOIvmHss5S6HKl",
      "title": "Roywill main",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/71",
      "state": "CLOSED",
      "author": "roywill",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Updated with suggestions",
      "createdAt": "2023-06-13T16:27:15Z",
      "updatedAt": "2023-07-22T03:40:37Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1",
      "headRepository": "roywill/draft-ietf-scitt-architecture-Issue-45",
      "headRefName": "roywill-main",
      "headRefOid": "fba2e6541fc5b92863032e3c95a1d4248d690097",
      "closedAt": "2023-07-22T03:32:57Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@roywill, can you please address the changes above?",
          "createdAt": "2023-07-10T04:16:06Z",
          "updatedAt": "2023-07-10T04:16:06Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "iirc, this PR is stale, has already been implemented by other PRs, and has conflicts... merge it or close it...",
          "createdAt": "2023-07-19T17:15:31Z",
          "updatedAt": "2023-07-19T17:15:31Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree with @OR13 fully. This has been already addressed by other PR's so we can close this, without merging!",
          "createdAt": "2023-07-19T17:51:12Z",
          "updatedAt": "2023-07-19T17:51:52Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "closing per comments. \r\n@roywill please reopen if needed. ",
          "createdAt": "2023-07-22T03:32:57Z",
          "updatedAt": "2023-07-22T03:32:57Z"
        },
        {
          "author": "roywill",
          "authorAssociation": "NONE",
          "body": "I will be on it tomorrow.\r\n\r\nRoy Williams\r\n________________________________\r\nFrom: Steve Lasker ***@***.***>\r\nSent: Friday, July 21, 2023 8:33:08 PM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Roy Williams (E+P) ***@***.***>; Mention ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Roywill main (PR #71)\r\n\r\n\r\nClosed #71<https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/71>.\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/71#event-9890343787>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AJP7OQEIHHEQTXE3FWLNPPLXRNCXJANCNFSM6AAAAAAZFEQPCI>.\r\nYou are receiving this because you were mentioned.Message ID: ***@***.***>\r\n",
          "createdAt": "2023-07-22T03:40:37Z",
          "updatedAt": "2023-07-22T03:40:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5YE2Dt",
          "commit": {
            "abbreviatedOid": "86c11a3"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T16:54:50Z",
          "updatedAt": "2023-06-13T16:54:50Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Please note with your changes, we need to remove line : 980 below, as we are not registering Transparent Statements in the transparency service!",
              "createdAt": "2023-06-13T16:54:50Z",
              "updatedAt": "2023-06-13T16:54:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5YE31E",
          "commit": {
            "abbreviatedOid": "86c11a3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T16:59:20Z",
          "updatedAt": "2023-06-13T16:59:20Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "remove or change to... see below?",
              "createdAt": "2023-06-13T16:59:20Z",
              "updatedAt": "2023-06-13T16:59:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5YE4CQ",
          "commit": {
            "abbreviatedOid": "86c11a3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-06-13T16:59:44Z",
          "updatedAt": "2023-06-13T16:59:53Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nA collection of Transparent Statements must not leak information about the contents of other Signed Statements registered on the Transparency Service.\r\n```",
              "createdAt": "2023-06-13T16:59:44Z",
              "updatedAt": "2023-06-13T16:59:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ZCQqP",
          "commit": {
            "abbreviatedOid": "86c11a3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "please apply the suggestion from @henkbirkholz ",
          "createdAt": "2023-06-22T18:14:09Z",
          "updatedAt": "2023-06-22T18:14:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5bof1R",
          "commit": {
            "abbreviatedOid": "fba2e65"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "lgtm, any objections?",
          "createdAt": "2023-07-19T15:14:54Z",
          "updatedAt": "2023-07-19T15:14:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5bpbgW",
          "commit": {
            "abbreviatedOid": "fba2e65"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-19T17:14:43Z",
          "updatedAt": "2023-07-19T17:14:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 72,
      "id": "PR_kwDOIvmHss5UsiTZ",
      "title": "Removed TBD's from the draft",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/72",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Use the issuer tracker instead. This helps to improve readability",
      "createdAt": "2023-07-05T11:56:30Z",
      "updatedAt": "2023-07-10T15:25:42Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "702363eff7dca8e42c4c49ed942e6977e826f08a",
      "closedAt": "2023-07-10T15:24:35Z",
      "mergedAt": "2023-07-10T15:24:35Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "a8281e9ad5167fc308a7fee956048d9cc24255c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5aRBe0",
          "commit": {
            "abbreviatedOid": "3e04d03"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:34:24Z",
          "updatedAt": "2023-07-05T12:34:24Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I would prefer adding a line, that says this item is open for discussion and point to a github issue where it is been tracked. We have done this for CoRIM. Please see https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html",
              "createdAt": "2023-07-05T12:34:24Z",
              "updatedAt": "2023-07-05T12:34:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajUK3",
          "commit": {
            "abbreviatedOid": "3e04d03"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-07-07T15:53:55Z",
          "updatedAt": "2023-07-07T15:54:04Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "@yogeshbdeshpande could you please provide a suggestion for the meeting on Monday?",
              "createdAt": "2023-07-07T15:53:55Z",
              "updatedAt": "2023-07-07T15:54:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5apBHz",
          "commit": {
            "abbreviatedOid": "3e04d03"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T12:40:05Z",
          "updatedAt": "2023-07-08T12:40:05Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n# Federation\r\n\r\nThis topic is still under discussion, see [issue 79](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/79)\r\n```",
              "createdAt": "2023-07-08T12:40:05Z",
              "updatedAt": "2023-07-08T12:40:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avP7a",
          "commit": {
            "abbreviatedOid": "702363e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-07-10T15:17:22Z",
          "updatedAt": "2023-07-10T15:17:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avQ2H",
          "commit": {
            "abbreviatedOid": "702363e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:19:21Z",
          "updatedAt": "2023-07-10T15:19:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avQ6r",
          "commit": {
            "abbreviatedOid": "702363e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:19:31Z",
          "updatedAt": "2023-07-10T15:19:31Z",
          "comments": []
        }
      ]
    },
    {
      "number": 73,
      "id": "PR_kwDOIvmHss5UsjCb",
      "title": "Remove use cases",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/73",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "There is a separate use case document providing the details for these use cases. \r\n\r\nAdding a reference to the use case document would be useful!",
      "createdAt": "2023-07-05T11:58:56Z",
      "updatedAt": "2023-07-10T15:39:57Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-2",
      "headRefOid": "3ef84a906d03681dcb53f608f59ca661e3959bcf",
      "closedAt": "2023-07-10T15:39:53Z",
      "mergedAt": "2023-07-10T15:39:53Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "17879f6656c48f8bb368fc44504705fabaabe40d"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "use cases seem helpful to the architecture, but perhaps they belong in an appendix",
          "createdAt": "2023-07-05T12:54:32Z",
          "updatedAt": "2023-07-05T12:54:32Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5aRCw4",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:37:34Z",
          "updatedAt": "2023-07-05T12:37:40Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "@hannestschofenig We should do two approaches, rather than blanket removal:\r\n\r\nOption 1) My preferred Option: Somewhere in the Architecture text we refer to some known use cases and link it to the new document. Completely removing use case reference is not a good idea.\r\n\r\nOption 2) Retain the title # Use Cases and on the next line refer to the reference to the new document",
              "createdAt": "2023-07-05T12:37:34Z",
              "updatedAt": "2023-07-05T12:37:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajV5h",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-07-07T15:58:54Z",
          "updatedAt": "2023-07-07T15:59:01Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "A dedicated section here that will refer to the use cases document is required before merge.\r\nPlease note: the use-case I-D is subject of churn and has to be tracked independently!",
              "createdAt": "2023-07-07T15:58:54Z",
              "updatedAt": "2023-07-07T15:59:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5apBMo",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T12:43:55Z",
          "updatedAt": "2023-07-08T12:43:55Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Add a link to https://datatracker.ietf.org/doc/draft-ietf-scitt-software-use-cases/ ",
              "createdAt": "2023-07-08T12:43:55Z",
              "updatedAt": "2023-07-08T12:43:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aq5a8",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T04:20:10Z",
          "updatedAt": "2023-07-10T04:20:10Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": ":+1: to option 2",
              "createdAt": "2023-07-10T04:20:10Z",
              "updatedAt": "2023-07-10T04:20:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5arC98",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T05:21:24Z",
          "updatedAt": "2023-07-10T05:21:24Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Yep option 2. Then we can get back to editing the use case document :-)\r\n\r\nI'll make a GitHub suggestion to make this simpler",
              "createdAt": "2023-07-10T05:21:24Z",
              "updatedAt": "2023-07-10T05:25:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5arEHl",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-07-10T05:27:53Z",
          "updatedAt": "2023-07-10T05:27:59Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "```suggestion\r\n{::boilerplate bcp14-tagged}\r\n\r\n- # Use Cases\r\n\r\nThe building blocks defined in SCITT are intended to support applications in any supply chain that produces or relies upon digital artifacts, from the build and supply of software and IoT devices to advanced manufacturing and food supply.\r\n\r\nDetailed use cases are maintained in a separate document: https://datatracker.ietf.org/doc/draft-ietf-scitt-software-use-cases/\r\n```",
              "createdAt": "2023-07-10T05:27:54Z",
              "updatedAt": "2023-07-10T05:27:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auXbK",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:33:42Z",
          "updatedAt": "2023-07-10T13:33:43Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "maybe add in the informative reference section of the document header:`I-D.ietf-scitt-software-use-cases: sw-use-cases`\r\nand here: `{{-sw-use-cases}}`",
              "createdAt": "2023-07-10T13:33:43Z",
              "updatedAt": "2023-07-10T13:33:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avS0W",
          "commit": {
            "abbreviatedOid": "f8d7916"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:23:29Z",
          "updatedAt": "2023-07-10T15:23:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avTLw",
          "commit": {
            "abbreviatedOid": "f8d7916"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-07-10T15:24:16Z",
          "updatedAt": "2023-07-10T15:24:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 74,
      "id": "PR_kwDOIvmHss5UskAk",
      "title": "Removed RBAC",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/74",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-05T12:01:33Z",
      "updatedAt": "2023-10-23T23:24:06Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-3",
      "headRefOid": "e007370805cf699ea65e0db67da4544cd98e0ce9",
      "closedAt": "2023-07-07T15:55:20Z",
      "mergedAt": "2023-07-07T15:55:20Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "a89197d64f48419d0a65a69c433b6448929eb71c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5aRJyq",
          "commit": {
            "abbreviatedOid": "e007370"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-05T12:52:35Z",
          "updatedAt": "2023-07-05T12:52:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5aRMSx",
          "commit": {
            "abbreviatedOid": "e007370"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-07-05T12:57:52Z",
          "updatedAt": "2023-07-05T12:57:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5ajUlX",
          "commit": {
            "abbreviatedOid": "e007370"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "no artificial constraints at this point",
          "createdAt": "2023-07-07T15:55:07Z",
          "updatedAt": "2023-07-07T15:55:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 75,
      "id": "PR_kwDOIvmHss5UslLL",
      "title": "Updating registration policy text",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/75",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-05T12:04:47Z",
      "updatedAt": "2023-10-23T23:24:08Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-4",
      "headRefOid": "863c468df8f99b77a1e3a6d05f37aa595406f4c0",
      "closedAt": "2023-07-07T15:57:15Z",
      "mergedAt": "2023-07-07T15:57:15Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "ec5677026a519c9d867a2093327b3d843740cde1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5aQ9RP",
          "commit": {
            "abbreviatedOid": "e65bd07"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:25:37Z",
          "updatedAt": "2023-07-05T12:25:37Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nStatement offered by anonymous Issuers would only provide \r\n```",
              "createdAt": "2023-07-05T12:25:37Z",
              "updatedAt": "2023-07-05T12:25:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aQ9om",
          "commit": {
            "abbreviatedOid": "e65bd07"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:26:30Z",
          "updatedAt": "2023-07-05T12:26:31Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Is it Verification or Authorization",
              "createdAt": "2023-07-05T12:26:31Z",
              "updatedAt": "2023-07-05T12:26:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aQ-UN",
          "commit": {
            "abbreviatedOid": "e65bd07"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Left a minor comment, but in general LGTM!",
          "createdAt": "2023-07-05T12:27:54Z",
          "updatedAt": "2023-07-05T12:27:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5aQ-do",
          "commit": {
            "abbreviatedOid": "e65bd07"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:28:16Z",
          "updatedAt": "2023-07-05T12:28:16Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "I would say \"authorization\" is better",
              "createdAt": "2023-07-05T12:28:16Z",
              "updatedAt": "2023-07-05T12:28:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aRJnl",
          "commit": {
            "abbreviatedOid": "9d8ea2d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-05T12:52:12Z",
          "updatedAt": "2023-07-05T12:52:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5aRKit",
          "commit": {
            "abbreviatedOid": "9d8ea2d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:54:16Z",
          "updatedAt": "2023-07-05T12:54:17Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\n\"authorization\" is needed before registration of Signed Statements to\r\n```",
              "createdAt": "2023-07-05T12:54:16Z",
              "updatedAt": "2023-07-05T12:54:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajVQ2",
          "commit": {
            "abbreviatedOid": "863c468"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Significant simplification, will require discussion time at IETF 117, probably.",
          "createdAt": "2023-07-07T15:57:06Z",
          "updatedAt": "2023-07-07T15:57:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 76,
      "id": "PR_kwDOIvmHss5UsoME",
      "title": "Remove standardized registration policy",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/76",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR is incomplete because the standardized registration policy is scattered all over the document.",
      "createdAt": "2023-07-05T12:13:34Z",
      "updatedAt": "2023-07-10T16:32:19Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "b239beb3f797240f6cf2886ab6a97ae164e214b3",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-5",
      "headRefOid": "951b23efb70aad41674759f1aeb4d5e98a05b2b6",
      "closedAt": "2023-07-10T16:32:16Z",
      "mergedAt": "2023-07-10T16:32:16Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "8dd97759d1338abd48065cff000ef91e2a790297"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5aQ8TX",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:23:25Z",
          "updatedAt": "2023-07-05T12:23:25Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Why did you remove the list and made it into a statement ?",
              "createdAt": "2023-07-05T12:23:25Z",
              "updatedAt": "2023-07-05T12:23:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aQ8pE",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:24:09Z",
          "updatedAt": "2023-07-05T12:24:09Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Perhaps we can retain the list and add a last line to say, other formats can be added in future",
              "createdAt": "2023-07-05T12:24:09Z",
              "updatedAt": "2023-07-05T12:24:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aQ9WL",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:25:50Z",
          "updatedAt": "2023-07-05T12:25:50Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "It makes the document shorter. \r\n\r\nIf you think these payloads are import to the draft it would be important to add references and to expand the acronyms.",
              "createdAt": "2023-07-05T12:25:50Z",
              "updatedAt": "2023-07-05T12:25:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aRE0i",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:41:34Z",
          "updatedAt": "2023-07-05T12:41:34Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "I agree we should give due weightage to these acronyms as the they are the building blocks using SCITT and essential elements of Supply Chain Security!\r\n\r\nI would check with other reviewers what they think about this...",
              "createdAt": "2023-07-05T12:41:34Z",
              "updatedAt": "2023-07-05T12:41:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aRILf",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:48:54Z",
          "updatedAt": "2023-07-05T12:48:54Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nThe registration time is defined as the timestamp at which the TS has added this Signed Statement to its Registry.\r\n```",
              "createdAt": "2023-07-05T12:48:54Z",
              "updatedAt": "2023-07-05T12:48:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aRJGH",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:51:01Z",
          "updatedAt": "2023-07-05T12:51:02Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "perhaps these are actually COSE / JOSE registered claim names?",
              "createdAt": "2023-07-05T12:51:01Z",
              "updatedAt": "2023-07-05T12:51:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aSMvc",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T14:51:03Z",
          "updatedAt": "2023-07-05T14:51:03Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "That's fine for me. Use the list style,  add references and explain the acronyms.",
              "createdAt": "2023-07-05T14:51:03Z",
              "updatedAt": "2023-07-05T14:51:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aSNK1",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T14:51:39Z",
          "updatedAt": "2023-07-05T14:51:39Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Yes, this sounds like a regular claim name",
              "createdAt": "2023-07-05T14:51:39Z",
              "updatedAt": "2023-07-05T14:51:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajWns",
          "commit": {
            "abbreviatedOid": "56439e6"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-07-07T16:00:58Z",
          "updatedAt": "2023-07-07T16:01:05Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Please phrase as a dedicated issue and push a PR.\r\nThis is postponed after submission moratorium of IETF 117.",
              "createdAt": "2023-07-07T16:00:58Z",
              "updatedAt": "2023-07-07T16:01:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avV72",
          "commit": {
            "abbreviatedOid": "56439e6"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:30:02Z",
          "updatedAt": "2023-07-10T15:30:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avWhN",
          "commit": {
            "abbreviatedOid": "79adeeb"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:31:13Z",
          "updatedAt": "2023-07-10T15:31:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avWoz",
          "commit": {
            "abbreviatedOid": "79adeeb"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-07-10T15:31:28Z",
          "updatedAt": "2023-07-10T15:31:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avWzo",
          "commit": {
            "abbreviatedOid": "79adeeb"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:31:50Z",
          "updatedAt": "2023-07-10T15:31:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 77,
      "id": "PR_kwDOIvmHss5UtNIP",
      "title": "Clarify usage of Transparent Statements",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/77",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-05T13:43:14Z",
      "updatedAt": "2023-07-10T15:38:08Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "ec5677026a519c9d867a2093327b3d843740cde1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "arch-correction",
      "headRefOid": "3a24240f0d69bf92cf63736f87812b6669599312",
      "closedAt": "2023-07-10T15:38:04Z",
      "mergedAt": "2023-07-10T15:38:04Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "a7e70e142c1e2cc9c6e6e3f5c6835f34adf2b542"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> Potential topic for this Monday OR be moved to after the IETF 117 submission moratorium.\r\n\r\n@henkbirkholz This is a fundamental bug in the spec, we need to correct it ASAP!",
          "createdAt": "2023-07-07T16:06:01Z",
          "updatedAt": "2023-07-07T16:06:01Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, Thank you for the review. I agree with most of your edits.",
          "createdAt": "2023-07-07T16:43:40Z",
          "updatedAt": "2023-07-07T16:43:40Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 Thanks, I have done all the required edits, please have a look!",
          "createdAt": "2023-07-07T17:27:37Z",
          "updatedAt": "2023-07-07T17:27:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5ajTnV",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T15:52:19Z",
          "updatedAt": "2023-07-07T15:52:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The directionality of this, feels difficult...\r\n\r\nI agree auditor checks transparent statements... not sure the parenthetical is helpful.",
              "createdAt": "2023-07-07T15:52:19Z",
              "updatedAt": "2023-07-07T15:52:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajTrP",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T15:52:29Z",
          "updatedAt": "2023-07-07T15:52:30Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n: an entity that checks the correctness and consistency of all Transparent Statements issued by a Transparency Service.\r\n```",
              "createdAt": "2023-07-07T15:52:29Z",
              "updatedAt": "2023-07-07T15:52:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajT1k",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T15:52:57Z",
          "updatedAt": "2023-07-07T15:52:57Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "\"issued to\" will lead to the 2 party vs 3 party model discussion... we probably don't want to invite that.",
              "createdAt": "2023-07-07T15:52:57Z",
              "updatedAt": "2023-07-07T15:52:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajUai",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T15:54:36Z",
          "updatedAt": "2023-07-07T15:54:37Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n: a Signed Statement that is augmented with a Receipt created via Registration in a Transparency Service ( the receipt is stored under tag TBD_N in the unprotected header of the Signed Statement).\r\n```",
              "createdAt": "2023-07-07T15:54:36Z",
              "updatedAt": "2023-07-07T15:54:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajVyd",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T15:58:33Z",
          "updatedAt": "2023-07-07T15:58:34Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nThis section describes, at a high level, the three main roles and associated processes in SCITT: Issuers and the Signed Statement issuance process, Transparency Service and the Signed Statement Registration process, Verifiers of the Transparent Statements and the Validation process (including verification of signatures).\r\n```",
              "createdAt": "2023-07-07T15:58:34Z",
              "updatedAt": "2023-07-07T16:57:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajWhW",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:00:40Z",
          "updatedAt": "2023-07-07T16:00:40Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "I am not sure about this... I think policies being in place applies to making a receipt (an action the TS performs)... not to producing a signed statement (an action an Issuer performs).",
              "createdAt": "2023-07-07T16:00:40Z",
              "updatedAt": "2023-07-07T16:00:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajW7E",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:01:52Z",
          "updatedAt": "2023-07-07T16:01:53Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "```suggestion\r\nA Transparent Statement including a Receipt ensures that the associated Signed Statement passed its Registration Policy and was recorded appropriately.\r\n```",
              "createdAt": "2023-07-07T16:01:52Z",
              "updatedAt": "2023-07-07T16:01:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajXIV",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Potential topic for this Monday OR be moved to after the IETF 117 submission moratorium.",
          "createdAt": "2023-07-07T16:02:27Z",
          "updatedAt": "2023-07-07T16:02:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5ajqM-",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:50:19Z",
          "updatedAt": "2023-07-07T16:50:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "ok! Agree with the statement, will change",
              "createdAt": "2023-07-07T16:50:19Z",
              "updatedAt": "2023-07-07T16:50:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajqd5",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:51:13Z",
          "updatedAt": "2023-07-07T16:51:13Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I would prefer avoiding specific here. I will make it a general statement",
              "createdAt": "2023-07-07T16:51:13Z",
              "updatedAt": "2023-07-07T16:51:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajq_q",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:53:02Z",
          "updatedAt": "2023-07-07T16:53:02Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Verifiers first verify the Transparent Statement, to check the inclusion in the log (offline).\r\n\r\nWhether further Verification of Signed Statement is left to implementation, so I would remove the Signed Statement from Verifiers actions",
              "createdAt": "2023-07-07T16:53:02Z",
              "updatedAt": "2023-07-07T16:53:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajrbF",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:54:25Z",
          "updatedAt": "2023-07-07T16:54:25Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Makes sense, I will make the edits",
              "createdAt": "2023-07-07T16:54:25Z",
              "updatedAt": "2023-07-07T16:54:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajskY",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:58:10Z",
          "updatedAt": "2023-07-07T16:58:10Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "updated",
              "createdAt": "2023-07-07T16:58:10Z",
              "updatedAt": "2023-07-07T16:58:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajtxz",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T17:02:07Z",
          "updatedAt": "2023-07-07T17:02:07Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "better?",
              "createdAt": "2023-07-07T17:02:07Z",
              "updatedAt": "2023-07-07T17:02:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajt20",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T17:02:22Z",
          "updatedAt": "2023-07-07T17:02:22Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": ":+1: ",
              "createdAt": "2023-07-07T17:02:22Z",
              "updatedAt": "2023-07-07T17:02:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajzPs",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T17:20:32Z",
          "updatedAt": "2023-07-07T17:20:33Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "This section talks about Append Only log, so the `text` about honesty makes sense here?\r\n",
              "createdAt": "2023-07-07T17:20:33Z",
              "updatedAt": "2023-07-07T17:20:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aj1gx",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T17:28:00Z",
          "updatedAt": "2023-07-07T17:28:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Done the change in the new commit",
              "createdAt": "2023-07-07T17:28:01Z",
              "updatedAt": "2023-07-07T17:28:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aj1pd",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T17:28:28Z",
          "updatedAt": "2023-07-07T17:28:29Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Done, please have a look!",
              "createdAt": "2023-07-07T17:28:28Z",
              "updatedAt": "2023-07-07T17:28:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aj2aL",
          "commit": {
            "abbreviatedOid": "11046fe"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T17:30:11Z",
          "updatedAt": "2023-07-07T17:30:12Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "@OR13  I did not find anything particularly objectionable/wrong in the text above so retained it.",
              "createdAt": "2023-07-07T17:30:11Z",
              "updatedAt": "2023-07-07T17:30:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5apBQX",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T12:46:19Z",
          "updatedAt": "2023-07-08T12:46:19Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "thats fine, I don't think the text is wrong, I just don't think it's needed here.",
              "createdAt": "2023-07-08T12:46:19Z",
              "updatedAt": "2023-07-08T12:46:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5apBQh",
          "commit": {
            "abbreviatedOid": "13f8006"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-08T12:46:25Z",
          "updatedAt": "2023-07-08T12:46:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5aq6R7",
          "commit": {
            "abbreviatedOid": "13f8006"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "A few minor nits to cleanup, then LGTM",
          "createdAt": "2023-07-10T04:25:54Z",
          "updatedAt": "2023-07-10T04:28:41Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "A space got lost:\r\n\r\n>  a Signed Statement that is augmented with a Receipt created via Registration in a Transparency **Service (the** receipt is ",
              "createdAt": "2023-07-10T04:25:54Z",
              "updatedAt": "2023-07-10T04:28:42Z"
            },
            {
              "originalPosition": 74,
              "body": "nit: looks like the line breaks got reformatted. Please break on sentences.",
              "createdAt": "2023-07-10T04:28:06Z",
              "updatedAt": "2023-07-10T04:28:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5atKOz",
          "commit": {
            "abbreviatedOid": "13f8006"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T10:40:20Z",
          "updatedAt": "2023-07-10T10:40:20Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n: a Signed Statement that is augmented with a Receipt created via Registration in a Transparency Service (the receipt is stored in the unprotected header of COSE Envelope of the Signed Statement).\r\n```",
              "createdAt": "2023-07-10T10:40:20Z",
              "updatedAt": "2023-07-10T10:40:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5atKi7",
          "commit": {
            "abbreviatedOid": "72b5559"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T10:41:10Z",
          "updatedAt": "2023-07-10T10:41:10Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "```suggestion\r\nsome Transparency Services may provide limited support for historical queries on the Signed Statements they have registered, and accept the risk of being blamed for inconsistent Registration or Issuer equivocation.\r\n```",
              "createdAt": "2023-07-10T10:41:10Z",
              "updatedAt": "2023-07-10T10:41:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5atKsp",
          "commit": {
            "abbreviatedOid": "72b5559"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T10:41:35Z",
          "updatedAt": "2023-07-10T10:41:35Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "approvable fix below",
              "createdAt": "2023-07-10T10:41:35Z",
              "updatedAt": "2023-07-10T10:41:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5atVQB",
          "commit": {
            "abbreviatedOid": "72b5559"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T11:10:12Z",
          "updatedAt": "2023-07-10T11:10:12Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "@henkbirkholz I am doing it now",
              "createdAt": "2023-07-10T11:10:12Z",
              "updatedAt": "2023-07-10T11:10:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avYuy",
          "commit": {
            "abbreviatedOid": "3a24240"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:36:09Z",
          "updatedAt": "2023-07-10T15:36:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avZBN",
          "commit": {
            "abbreviatedOid": "3a24240"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:36:47Z",
          "updatedAt": "2023-07-10T15:36:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avZcT",
          "commit": {
            "abbreviatedOid": "3a24240"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\n\r\nLine item at 962 could be done later",
          "createdAt": "2023-07-10T15:37:45Z",
          "updatedAt": "2023-07-10T15:37:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 78,
      "id": "PR_kwDOIvmHss5U1QVU",
      "title": "Attempt to define resolution and dereferencing",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/78",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR attempts to address the problem of documenting the various ways that known key content types, such as `application/jwk+json` and `application/cose-key` are discovered from opaque strings or URIs such as `iss` and `kid`.\r\n\r\nThis PR also explains how DIDs are similar to OIDC.",
      "createdAt": "2023-07-06T17:29:51Z",
      "updatedAt": "2023-07-10T16:24:17Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1",
      "headRepository": "transmute-industries/draft-ietf-scitt-architecture",
      "headRefName": "feat/key-discovery",
      "headRefOid": "c0cc1543fda0c31e23b72c10df4d8cef71a9ec98",
      "closedAt": "2023-07-10T16:24:17Z",
      "mergedAt": "2023-07-10T16:24:17Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "7a014a4b56f972bf64baa86b122effa2dd93bba0"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I have a working demo of this on scitt.xyz, \r\n\r\nhttps://transmute.id/did:web:scitt.xyz\r\n\r\nhttps://scitt.xyz/.well-known/did.json\r\n\r\nIts also possible to do same thing with did methods other than `did:web`, for example `did:jwk`...\r\n\r\nThere is a demo of that working with index db here: https://scitt.xyz/demo\r\n\r\nThis shows that there is interoperability across issuers that use different did methods, that conform to the same resolution and dereferencing interfaces. ",
          "createdAt": "2023-07-06T17:55:15Z",
          "updatedAt": "2023-07-06T17:55:32Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5abCMu",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-06T17:46:52Z",
          "updatedAt": "2023-07-06T17:46:53Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "@Sakurann this is related to the conversations we have had on https://www.w3.org/TR/did-core/#verification-relationships\r\n\r\n... if you use those JSON-LD relationships would cannot eliminate did documents, or you need to encode the relationship in the identifier itself... for example:\r\n\r\n```\r\ndid:example:123/assertion/kid => jwk+json\r\ndid:example:123/assertion=> jwk-set+json\r\n```",
              "createdAt": "2023-07-06T17:46:52Z",
              "updatedAt": "2023-07-06T17:46:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5abCxg",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-06T17:48:36Z",
          "updatedAt": "2023-07-06T17:48:36Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "See a similar section of the W3C draft: https://w3c.github.io/vc-jwt/#key-discovery\r\n\r\nIt's a mess, because of mistakes made in DID Core... So we expect anything taking a dependency on DIDs to have similar sections of their spec.",
              "createdAt": "2023-07-06T17:48:36Z",
              "updatedAt": "2023-07-06T17:48:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajXlG",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "a proposal for discussion @ IETF 117 Hackathon and meeting seems very useful to me.\r\n\r\n:+1: ",
          "createdAt": "2023-07-07T16:03:47Z",
          "updatedAt": "2023-07-07T16:03:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5amH9B",
          "commit": {
            "abbreviatedOid": "cfa28e3"
          },
          "author": "roywill",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T21:52:46Z",
          "updatedAt": "2023-07-07T21:52:47Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "How about:\r\nand 'kid' MUST then be a URL relative to `iss`",
              "createdAt": "2023-07-07T21:52:46Z",
              "updatedAt": "2023-07-07T21:52:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5amMOG",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "roywill",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "Asked Kristina to also look at this.",
          "createdAt": "2023-07-07T21:57:09Z",
          "updatedAt": "2023-07-07T21:57:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5aoPlV",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:33:09Z",
          "updatedAt": "2023-07-08T03:33:10Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n`kid` MUST either be an absolute URL,\r\nor a relative URL. Relative URL MUST be\r\nrelative to an `iss` value. When relative URL is used,\r\n`iss` MUST also be present in the protected header.\r\n```\r\n\r\nI think the requirement conveyed can be clearer.\r\n\r\nit also confused me originally if this is only about DIDs or not. looks like it is not..",
              "createdAt": "2023-07-08T03:33:09Z",
              "updatedAt": "2023-07-08T03:45:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoQ3W",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:35:08Z",
          "updatedAt": "2023-07-08T03:35:09Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nResolving `kid` MUST return an identity document of a registered content type (a set of public keys).\r\n```\r\nlet's be consistent in capitalization.",
              "createdAt": "2023-07-08T03:35:08Z",
              "updatedAt": "2023-07-08T03:35:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoTWX",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:38:51Z",
          "updatedAt": "2023-07-08T03:38:52Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nTo dereference a DID URL, it first MUST be resolved. After that the fragment is processed according to the media type.\r\n```",
              "createdAt": "2023-07-08T03:38:51Z",
              "updatedAt": "2023-07-08T03:38:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoTiI",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:39:12Z",
          "updatedAt": "2023-07-08T03:39:13Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nfirst, the identity document for `did:example:123` is resolved as content type `application/did+json`,\r\n```",
              "createdAt": "2023-07-08T03:39:12Z",
              "updatedAt": "2023-07-08T03:39:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoT4p",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:40:14Z",
          "updatedAt": "2023-07-08T03:40:14Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "`in JSON` here should be removed or made clearer.",
              "createdAt": "2023-07-08T03:40:14Z",
              "updatedAt": "2023-07-08T03:40:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoUJh",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:41:05Z",
          "updatedAt": "2023-07-08T03:41:06Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "why is there a need for a content type for a JWK? JWK is a published RFC and has a clearly defined content/structure",
              "createdAt": "2023-07-08T03:41:05Z",
              "updatedAt": "2023-07-08T03:41:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoVZZ",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:44:54Z",
          "updatedAt": "2023-07-08T03:44:54Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "I think this should be moved before line 379. it really confused me if DIDs are required or not.\r\n\r\nI don't know if this is a separate issue, but honestly would be good to have a sentence or two what to do/expect when it is not a DID... like finding a keys using `https` URL scheme, for example, usually requires defining a `.well-known` path and structure of a document found there...",
              "createdAt": "2023-07-08T03:44:54Z",
              "updatedAt": "2023-07-08T03:48:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoVi-",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:46:27Z",
          "updatedAt": "2023-07-08T03:46:28Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nThe details of both `DID resolution` and `DID dereferencing` are out of scope for this document.\r\n```",
              "createdAt": "2023-07-08T03:46:28Z",
              "updatedAt": "2023-07-08T03:46:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoVpV",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:49:08Z",
          "updatedAt": "2023-07-08T03:49:09Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "what about relative DID URLs??\r\n\r\nalso a reference to the definition of relative DID URL in [DID Core](https://www.w3.org/TR/did-core/#relative-did-urls) might be helpful? ",
              "createdAt": "2023-07-08T03:49:08Z",
              "updatedAt": "2023-07-08T03:49:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoVsb",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:49:59Z",
          "updatedAt": "2023-07-08T03:50:00Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "how is this section related to a sentence above `The details of both `did resolution` and `did dereferencing` are out of scope for this document.` should be clearer",
              "createdAt": "2023-07-08T03:49:59Z",
              "updatedAt": "2023-07-08T03:50:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoV4g",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:51:50Z",
          "updatedAt": "2023-07-08T03:51:50Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "I don't think there is a need to copy what is already defined in OIDC.Core and rfc6749. just pointing to the related sections in those specs is sufficient. \r\n\r\nif you want to include examples for those who might not be familiar with OIDC/OAuth, that's fine, but right now it looks like you are redefining.",
              "createdAt": "2023-07-08T03:51:50Z",
              "updatedAt": "2023-07-08T03:53:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoW2z",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:56:22Z",
          "updatedAt": "2023-07-08T03:56:22Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "I am still catching up, but using ID Tokens/Access Tokens here intuitively seems odd. Can Issuer be a natural person authenticated by OIDC? ",
              "createdAt": "2023-07-08T03:56:22Z",
              "updatedAt": "2023-07-08T03:56:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoW_w",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:56:57Z",
          "updatedAt": "2023-07-08T03:56:57Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "I think `.well-known/jwt-issuer` defined in SD-JWT VC draft is more relevant here. https://vcstuff.github.io/draft-terbu-sd-jwt-vc/draft-terbu-oauth-sd-jwt-vc.html#name-jwt-issuer-metadata",
              "createdAt": "2023-07-08T03:56:57Z",
              "updatedAt": "2023-07-08T03:56:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoXLE",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:57:47Z",
          "updatedAt": "2023-07-08T03:57:48Z",
          "comments": [
            {
              "originalPosition": 136,
              "body": "```suggestion\r\nFor example, when DIDs are used:\r\n```",
              "createdAt": "2023-07-08T03:57:48Z",
              "updatedAt": "2023-07-08T03:57:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoYBf",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "made comments, but I think a bit more discussion/work is needed.",
          "createdAt": "2023-07-08T04:00:47Z",
          "updatedAt": "2023-07-08T04:00:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5auLbh",
          "commit": {
            "abbreviatedOid": "155aaa3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:13:03Z",
          "updatedAt": "2023-07-10T13:13:03Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nnext, the fragment `#key-2` is dereferenced to a verification method that contains a `publicKeyJwk` property.\r\n```",
              "createdAt": "2023-07-10T13:13:03Z",
              "updatedAt": "2023-07-10T13:13:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auMmI",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:15:28Z",
          "updatedAt": "2023-07-10T13:15:29Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I agree, I filed an issue for this: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/81",
              "createdAt": "2023-07-10T13:15:29Z",
              "updatedAt": "2023-07-10T13:15:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auNWu",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:17:04Z",
          "updatedAt": "2023-07-10T13:17:05Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Just being explicit.. and... because resolution and dereferencing are only described in the abstract in did core.\r\n\r\nMost of this text would not be needed if DID Core defined resolution and dereferencing more concretely",
              "createdAt": "2023-07-10T13:17:04Z",
              "updatedAt": "2023-07-10T13:17:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auN9b",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:18:20Z",
          "updatedAt": "2023-07-10T13:18:21Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "It's definitely a separate issue, the list is currently discussing all the possible ways to identify an organization with public keys... we are pretty sure we want to support DIDs, but we don't know how many other schemes we should support.",
              "createdAt": "2023-07-10T13:18:21Z",
              "updatedAt": "2023-07-10T13:18:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auOTR",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:19:03Z",
          "updatedAt": "2023-07-10T13:19:04Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Hard to fix, given DID Core doesn't define them either.\r\n\r\nAny more specific suggestion here?",
              "createdAt": "2023-07-10T13:19:03Z",
              "updatedAt": "2023-07-10T13:19:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auPNK",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:20:50Z",
          "updatedAt": "2023-07-10T13:20:51Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "fwiw, I plan to add that to the vc-jwt draft when it lands as well...\r\n\r\nHowever, I disagree that drafts of \"VCs\" are more relevant than OIDC, which has massive adoption.",
              "createdAt": "2023-07-10T13:20:50Z",
              "updatedAt": "2023-07-10T13:20:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auRRf",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:23:38Z",
          "updatedAt": "2023-07-10T13:23:39Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "I agree with this comment, but I don't think it's clear enough to just point to the sections... it also breaks the flow of reading the document. \r\n\r\nProbably some stronger explanation up front and links to the relevant section of the document addresses this concern.",
              "createdAt": "2023-07-10T13:23:38Z",
              "updatedAt": "2023-07-10T13:23:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auT1J",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:26:33Z",
          "updatedAt": "2023-07-10T13:26:34Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "It's an example... the point is JWTs are useless until they are profiled in a way that easier to adopt and ensures interop... thats what OIDC did for JWT, what will SCITT do for signed statements about software artifacts? \r\n\r\nThis is probably not conveyed well, and possibly more directly to the working group than readers of the draft... I suspect this whole section will need several iterations to get right.",
              "createdAt": "2023-07-10T13:26:33Z",
              "updatedAt": "2023-07-10T13:26:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auUFj",
          "commit": {
            "abbreviatedOid": "c0cc154"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "@Sakurann thank you for such a thorough review!\r\n\r\nI filed issues for things I could not address easily in the current PR. \r\n",
          "createdAt": "2023-07-10T13:27:05Z",
          "updatedAt": "2023-07-10T13:28:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avbgF",
          "commit": {
            "abbreviatedOid": "c0cc154"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T15:42:18Z",
          "updatedAt": "2023-07-10T15:42:19Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "nit: linebreak on sentences across the PR",
              "createdAt": "2023-07-10T15:42:18Z",
              "updatedAt": "2023-07-10T15:42:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avkc2",
          "commit": {
            "abbreviatedOid": "c0cc154"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM to merge as a baseline for future discussion",
          "createdAt": "2023-07-10T16:03:07Z",
          "updatedAt": "2023-07-10T16:03:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avlnD",
          "commit": {
            "abbreviatedOid": "cfa28e3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T16:06:02Z",
          "updatedAt": "2023-07-10T16:06:02Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I think we addressed this, with applying kristina's suggestions",
              "createdAt": "2023-07-10T16:06:02Z",
              "updatedAt": "2023-07-10T16:06:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avltf",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T16:06:16Z",
          "updatedAt": "2023-07-10T16:06:17Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "agreed, I removed it",
              "createdAt": "2023-07-10T16:06:16Z",
              "updatedAt": "2023-07-10T16:06:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avl7z",
          "commit": {
            "abbreviatedOid": "c0cc154"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T16:06:49Z",
          "updatedAt": "2023-07-10T16:06:49Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "fix it, in editorial PR",
              "createdAt": "2023-07-10T16:06:49Z",
              "updatedAt": "2023-07-10T16:06:58Z"
            }
          ]
        }
      ]
    },
    {
      "number": 80,
      "id": "PR_kwDOIvmHss5VBONZ",
      "title": "Small but important grammar/editorial fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/80",
      "state": "MERGED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A bunch of small but important drafting fixes. \r\nShouldn't be any controversial content changes in this one",
      "createdAt": "2023-07-09T17:40:43Z",
      "updatedAt": "2023-07-10T14:07:07Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "ec5677026a519c9d867a2093327b3d843740cde1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "jag-uk/editorial-nits",
      "headRefOid": "a06041729d5af9318f0ba9c1f3aa34692defd535",
      "closedAt": "2023-07-10T13:50:50Z",
      "mergedAt": "2023-07-10T13:50:50Z",
      "mergedBy": "JAG-UK",
      "mergeCommit": {
        "oid": "8a7ffa3ca9a54ef77f6728c07a0f9c4800da5fb1"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@JAG-UK : The others authors have not even looked at it. We should avoid rapid merges like this. It sets a wrong precedence in the community.",
          "createdAt": "2023-07-10T13:54:22Z",
          "updatedAt": "2023-07-10T13:54:22Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> @JAG-UK : The others authors have not even looked at it. We should avoid rapid merges like this. It sets a wrong precedence in the community.\r\n\r\nApologies, I took two thumbs-up to be good and was intending to set a clean base for the other open PRs that we might want to get in ahead of the 117 cut-off today. We have a call in an hour, if it's a problem we can revert\r\n",
          "createdAt": "2023-07-10T13:57:46Z",
          "updatedAt": "2023-07-10T13:57:46Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@JAG-UK I only see Orie Approval, so I would suggest we wait for other approvers, before merging this.",
          "createdAt": "2023-07-10T13:59:55Z",
          "updatedAt": "2023-07-10T13:59:55Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "@JAG-UK, I'd like to see this PR presented in the group for feedback, if that is okay.",
          "createdAt": "2023-07-10T14:03:09Z",
          "updatedAt": "2023-07-10T14:03:09Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> @JAG-UK, I'd like to see this PR presented in the group for feedback, if that is okay.\r\n\r\nSure thing. If you both tick this I'll revert it: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/82\r\n",
          "createdAt": "2023-07-10T14:07:07Z",
          "updatedAt": "2023-07-10T14:07:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5aq2w0",
          "commit": {
            "abbreviatedOid": "51aa433"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks, @JAG-UK\r\nGreat edits, thank you. Overall LGTM, with one minor nit/clarification of wording.",
          "createdAt": "2023-07-10T04:03:33Z",
          "updatedAt": "2023-07-10T04:10:28Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "> Breadth of access if critical so the Transparency \r\n\r\nWas this intended to be:\r\nBreadth of access **is** critical so the",
              "createdAt": "2023-07-10T04:03:33Z",
              "updatedAt": "2023-07-10T04:10:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5at8KL",
          "commit": {
            "abbreviatedOid": "a060417"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T12:39:55Z",
          "updatedAt": "2023-07-10T12:39:55Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nProducing a Transparent Statement might be considered a form of notarization.\r\n```",
              "createdAt": "2023-07-10T12:39:55Z",
              "updatedAt": "2023-07-10T12:39:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5at8VB",
          "commit": {
            "abbreviatedOid": "a060417"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T12:40:20Z",
          "updatedAt": "2023-07-10T12:40:21Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "avoiding normative language, not sure if its as much of a deal as it is at W3C",
              "createdAt": "2023-07-10T12:40:21Z",
              "updatedAt": "2023-07-10T12:40:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5at8mk",
          "commit": {
            "abbreviatedOid": "a060417"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T12:40:59Z",
          "updatedAt": "2023-07-10T12:41:00Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "```suggestion\r\nImplementations of Transparency Services might protect their Registry using a combination of trusted hardware, replication and consensus protocols, and cryptographic evidence.\r\n```",
              "createdAt": "2023-07-10T12:40:59Z",
              "updatedAt": "2023-07-10T12:41:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5at9Gs",
          "commit": {
            "abbreviatedOid": "a060417"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "my nits can be ignored",
          "createdAt": "2023-07-10T12:42:08Z",
          "updatedAt": "2023-07-10T12:42:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5auNsY",
          "commit": {
            "abbreviatedOid": "a060417"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:17:45Z",
          "updatedAt": "2023-07-10T13:17:46Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Only capitalized words are normative. So, it is completely fine to use \"may\" here.",
              "createdAt": "2023-07-10T13:17:45Z",
              "updatedAt": "2023-07-10T13:17:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 82,
      "id": "PR_kwDOIvmHss5VF3Fr",
      "title": "Revert \"Small but important grammar/editorial fixes\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/82",
      "state": "MERGED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Reverts ietf-wg-scitt/draft-ietf-scitt-architecture#80",
      "createdAt": "2023-07-10T14:04:01Z",
      "updatedAt": "2023-10-23T23:24:17Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "8a7ffa3ca9a54ef77f6728c07a0f9c4800da5fb1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "revert-80-jag-uk/editorial-nits",
      "headRefOid": "de9fc0e78335bdb3eff50afcc16a9d7fc7580643",
      "closedAt": "2023-07-10T14:36:52Z",
      "mergedAt": "2023-07-10T14:36:52Z",
      "mergedBy": "JAG-UK",
      "mergeCommit": {
        "oid": "99f9d3a5f6384810005e02e032ece48c7c479060"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5auu0N",
          "commit": {
            "abbreviatedOid": "de9fc0e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGMT!",
          "createdAt": "2023-07-10T14:16:48Z",
          "updatedAt": "2023-07-10T14:16:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 85,
      "id": "PR_kwDOIvmHss5VG_TS",
      "title": "Various grammer and typo nits",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/85",
      "state": "MERGED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fairly big conflict rebase of the reverted #80, but hopefully all good and simple.",
      "createdAt": "2023-07-10T17:14:30Z",
      "updatedAt": "2023-10-23T23:24:15Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "8dd97759d1338abd48065cff000ef91e2a790297",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "jag-uk/fix-typos-for-117",
      "headRefOid": "88345d4f1e2688ade2e8ae1a1471ac0a9e59613f",
      "closedAt": "2023-07-10T17:56:44Z",
      "mergedAt": "2023-07-10T17:56:44Z",
      "mergedBy": "JAG-UK",
      "mergeCommit": {
        "oid": "4e490bbe2c001874f4d1da7265fde8d92f7fffde"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Thanks a ton, Jon, for the thorough review! :+1: ",
          "createdAt": "2023-07-10T17:19:19Z",
          "updatedAt": "2023-07-10T17:19:19Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@JAG-UK Thank you again for Great work, much appreciated!",
          "createdAt": "2023-07-10T17:35:44Z",
          "updatedAt": "2023-07-10T17:35:44Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5awNvO",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "One non-blocking nit.",
          "createdAt": "2023-07-10T17:16:39Z",
          "updatedAt": "2023-07-10T17:18:20Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nTrust in the Transparency Service itself is supported both by protecting their implementation (using, for instance, replication, trusted hardware, and remote attestation of a system's operational state) and by enabling independent audits of the correctness and consistency of its Registry, thereby holding the organization that operates it accountable.\r\n```",
              "createdAt": "2023-07-10T17:16:39Z",
              "updatedAt": "2023-07-10T17:18:20Z"
            },
            {
              "originalPosition": 24,
              "body": "nitpicking",
              "createdAt": "2023-07-10T17:16:47Z",
              "updatedAt": "2023-07-10T17:18:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awP78",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T17:22:55Z",
          "updatedAt": "2023-07-10T17:22:55Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nBreadth of access is critical so the Transparency Service specified in this architecture cater to two types of audiences:\r\n```",
              "createdAt": "2023-07-10T17:22:55Z",
              "updatedAt": "2023-07-10T17:22:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awQpy",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T17:24:43Z",
          "updatedAt": "2023-07-10T17:24:43Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "@JAG-UK I think software was deliberately added as the current scope was only `software`",
              "createdAt": "2023-07-10T17:24:43Z",
              "updatedAt": "2023-07-10T17:24:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awQ4j",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T17:25:21Z",
          "updatedAt": "2023-07-10T17:25:22Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Sorry I just realized that software is already used in 194 so fine with it: now.",
              "createdAt": "2023-07-10T17:25:21Z",
              "updatedAt": "2023-07-10T17:25:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awR3W",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T17:27:42Z",
          "updatedAt": "2023-07-10T17:27:43Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "```suggestion\r\nEach Transparency Service also defines its own Registration Policies, which MUST apply to all entries in the Registry.\r\n```",
              "createdAt": "2023-07-10T17:27:43Z",
              "updatedAt": "2023-07-10T17:27:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awTQa",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T17:30:45Z",
          "updatedAt": "2023-07-10T17:30:45Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "```suggestion\r\nAn Issuer must first decide on a suitable format to serialize the Statement payload. For a software supply chain, payloads describing the software artifacts may, for example, include\r\n```",
              "createdAt": "2023-07-10T17:30:45Z",
              "updatedAt": "2023-07-10T17:30:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awTk0",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T17:31:39Z",
          "updatedAt": "2023-07-10T17:31:39Z",
          "comments": [
            {
              "originalPosition": 192,
              "body": "```suggestion\r\nOn one hand, this enables valid actors to detect and disambiguate malicious actors who issue contradictory Signed Statements to different entities (Verifiers, Auditors, Issuers), otherwise known as 'equivocation'.\r\n```",
              "createdAt": "2023-07-10T17:31:39Z",
              "updatedAt": "2023-07-10T17:31:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awUnY",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM! I have left few .nits, Please do consider before merging. \r\nYou have my approval to merge",
          "createdAt": "2023-07-10T17:34:38Z",
          "updatedAt": "2023-07-10T17:34:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 88,
      "id": "PR_kwDOIvmHss5WP9Sr",
      "title": "MInor fix to fragment mismatch",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/88",
      "state": "MERGED",
      "author": "shigeya",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-24T16:25:03Z",
      "updatedAt": "2023-08-21T15:31:16Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "4e490bbe2c001874f4d1da7265fde8d92f7fffde",
      "headRepository": "shigeya/draft-ietf-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "2dd593446a4a8a8d110cbcf772f52f162898995d",
      "closedAt": "2023-08-21T15:31:15Z",
      "mergedAt": "2023-08-21T15:31:15Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "0f468f4e36876a94489bf1748b838e52040655d3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5cFeRB",
          "commit": {
            "abbreviatedOid": "2dd5934"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks Good To Me!\r\n\r\nThanks",
          "createdAt": "2023-07-25T08:40:17Z",
          "updatedAt": "2023-07-25T08:40:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5enBAD",
          "commit": {
            "abbreviatedOid": "2dd5934"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-08-21T15:30:19Z",
          "updatedAt": "2023-08-21T15:30:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 94,
      "id": "PR_kwDOIvmHss5X5me_",
      "title": "Proposal for Section 6 - Signed Statement Issuance, Registration, and\u2026",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/94",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Attempt to clean up Section 6",
      "createdAt": "2023-08-14T16:16:43Z",
      "updatedAt": "2023-09-26T14:28:09Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f283c4167f8350f529ae2adb893118133fa0c553",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "59eb9735d8b3438e071c9b56c1c6cf301a8dbb24",
      "closedAt": "2023-09-26T14:27:59Z",
      "mergedAt": "2023-09-26T14:27:59Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "0383ec2b5a23f11d1a42800aebbe38368e12376d"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Orie, you realize that you are commenting on text that I didn't suggest. This text has already been there in the submitted draft",
          "createdAt": "2023-09-19T16:14:41Z",
          "updatedAt": "2023-09-19T16:14:41Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@hannestschofenig yes, I do realize that... The comment is still relevant to progressing the document, and its not a blocking change request (I approved the PR).",
          "createdAt": "2023-09-19T17:16:36Z",
          "updatedAt": "2023-09-19T17:16:49Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5eAmVe",
          "commit": {
            "abbreviatedOid": "c3168a0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-14T16:27:07Z",
          "updatedAt": "2023-08-14T16:27:08Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Line 644 does not look right to me? Assuming that you want atleast one header and a statement as payload I will re-write the statement, ",
              "createdAt": "2023-08-14T16:27:07Z",
              "updatedAt": "2023-08-14T16:27:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5eAnZV",
          "commit": {
            "abbreviatedOid": "c3168a0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-14T16:30:01Z",
          "updatedAt": "2023-08-14T16:30:02Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nSigned Statements are CBOR encoded {{-CBOR}} and protected by CBOR Object Signing and Encryption (COSE {{-COSE}}). Additionally, it contains at least one or more headers and a set of statements as its payload.\r\n```",
              "createdAt": "2023-08-14T16:30:01Z",
              "updatedAt": "2023-08-14T16:30:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5eAodM",
          "commit": {
            "abbreviatedOid": "c3168a0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-14T16:32:59Z",
          "updatedAt": "2023-08-14T16:32:59Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "```suggestion\r\n3. Signed Statement validation.\r\n```",
              "createdAt": "2023-08-14T16:32:59Z",
              "updatedAt": "2023-08-14T16:32:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5eAoz5",
          "commit": {
            "abbreviatedOid": "c3168a0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-14T16:33:59Z",
          "updatedAt": "2023-08-14T16:33:59Z",
          "comments": [
            {
              "originalPosition": 143,
              "body": "```suggestion\r\n4. Apply Registration Policy: for named policies, the Transparency Service should check that the required Registration info attributes are present in the Signed Statement and apply the check described in Table 1.\r\n```",
              "createdAt": "2023-08-14T16:33:59Z",
              "updatedAt": "2023-08-14T16:33:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5eLh6N",
          "commit": {
            "abbreviatedOid": "c3168a0"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T08:30:46Z",
          "updatedAt": "2023-08-16T08:30:47Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Accepted your wording suggestion",
              "createdAt": "2023-08-16T08:30:46Z",
              "updatedAt": "2023-08-16T08:30:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5eLlEv",
          "commit": {
            "abbreviatedOid": "c3168a0"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T08:38:03Z",
          "updatedAt": "2023-08-16T08:38:03Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "Fixed this issue.",
              "createdAt": "2023-08-16T08:38:03Z",
              "updatedAt": "2023-08-16T08:38:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXBjp",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-19T14:20:49Z",
          "updatedAt": "2023-09-19T14:20:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5hXCRZ",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:22:01Z",
          "updatedAt": "2023-09-19T14:22:01Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "we should NOT do this... we should use https://datatracker.ietf.org/doc/draft-ietf-cose-cwt-claims-in-headers/\r\n\r\nFor now, I would recommend simply saying `kid` is mandatory and MUST be an absolute DID URL.",
              "createdAt": "2023-09-19T14:22:01Z",
              "updatedAt": "2023-09-19T14:22:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXCu5",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:22:50Z",
          "updatedAt": "2023-09-19T14:22:50Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\n- Content type (label: `3`): Media type of payload, as a string. For example, `application/spdx+json` is the media type of SDPX in JSON encoding.\r\n```",
              "createdAt": "2023-09-19T14:22:50Z",
              "updatedAt": "2023-09-19T14:48:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXEOn",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:24:25Z",
          "updatedAt": "2023-09-19T14:24:26Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Do we want to allow COAP? see also https://datatracker.ietf.org/doc/draft-ietf-cose-typ-header-parameter/\r\n\r\n`typ` is for the envelope, not the payload type, but the same CBOR media type stuff applies",
              "createdAt": "2023-09-19T14:24:25Z",
              "updatedAt": "2023-09-19T14:24:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXU3C",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:51:45Z",
          "updatedAt": "2023-09-19T14:51:45Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Tracking in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/100",
              "createdAt": "2023-09-19T14:51:45Z",
              "updatedAt": "2023-09-19T14:51:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5heQtW",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T10:41:00Z",
          "updatedAt": "2023-09-20T10:41:00Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n##  Signed Statement Envelope\r\n```",
              "createdAt": "2023-09-20T10:41:00Z",
              "updatedAt": "2023-09-20T10:41:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5heRdY",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T10:42:54Z",
          "updatedAt": "2023-09-20T10:42:55Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "@hannestschofenig : As the Main heading for the section is `Signed Statement Issuance, Registration, and Verification`\r\n\r\nI think, it makes sense to introduce this section as `Signed Statement Envelope` The reason been (a) We are not discussing Issuance per say here\r\n\r\n(b) We do not have a fixed signed statement format, but we just have an Envelope which contains a `Payload`",
              "createdAt": "2023-09-20T10:42:54Z",
              "updatedAt": "2023-09-20T10:42:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5iA0eJ",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-26T14:10:15Z",
          "updatedAt": "2023-09-26T14:10:16Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "As discussed in the Editors meeting, address in another PR.",
              "createdAt": "2023-09-26T14:10:15Z",
              "updatedAt": "2023-09-26T14:10:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5iBAvS",
          "commit": {
            "abbreviatedOid": "59eb973"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-26T14:27:05Z",
          "updatedAt": "2023-09-26T14:27:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5iBAyI",
          "commit": {
            "abbreviatedOid": "59eb973"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM with resolution",
          "createdAt": "2023-09-26T14:27:09Z",
          "updatedAt": "2023-09-26T14:27:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5iBBIW",
          "commit": {
            "abbreviatedOid": "59eb973"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM! After all the hard work !",
          "createdAt": "2023-09-26T14:27:46Z",
          "updatedAt": "2023-09-26T14:27:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 95,
      "id": "PR_kwDOIvmHss5ZCfAo",
      "title": "Follow BCP 14 rules for SHOULD/SHOULD NOT",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/95",
      "state": "MERGED",
      "author": "ad-l",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #91 ",
      "createdAt": "2023-08-29T13:53:14Z",
      "updatedAt": "2023-09-19T14:51:44Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0f468f4e36876a94489bf1748b838e52040655d3",
      "headRepository": "ad-l/draft-ietf-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "184fbad4201b6aa3545e6d672bea4c2f539bd0d2",
      "closedAt": "2023-09-19T14:51:44Z",
      "mergedAt": "2023-09-19T14:51:44Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "a7ba78e98d6089ffe5c5c95c51d582baef634233"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "please accept or dismiss my change suggestions, and ping me for a re-review.",
          "createdAt": "2023-09-05T14:06:59Z",
          "updatedAt": "2023-09-05T14:06:59Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "please accept or dismiss my change suggestions, and ping me for a re-review.",
          "createdAt": "2023-09-19T14:19:55Z",
          "updatedAt": "2023-09-19T14:19:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5fZfhz",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:07:51Z",
          "updatedAt": "2023-08-29T14:07:51Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nIssuers MAY update their DID Document at any time, for instance to refresh their signing keys or algorithms, but they SHOULD NOT remove or change any of their previous keys unless they intend to revoke all Signed Statements that are registered as Transparent Statements issued with those keys.\r\n```",
              "createdAt": "2023-08-29T14:07:51Z",
              "updatedAt": "2023-08-29T14:07:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZf0x",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:08:22Z",
          "updatedAt": "2023-08-29T14:08:23Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nThe Issuer's DID appears in the protected header of Signed Statements' Envelopes, while the version of the key from the DID Document used to sign the Signed Statement is written in the `kid` header.\r\n```",
              "createdAt": "2023-08-29T14:08:22Z",
              "updatedAt": "2023-08-29T14:08:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZgja",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:09:41Z",
          "updatedAt": "2023-08-29T14:09:42Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "nice!",
              "createdAt": "2023-08-29T14:09:41Z",
              "updatedAt": "2023-08-29T14:09:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZhbD",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:11:13Z",
          "updatedAt": "2023-08-29T14:11:14Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "```suggestion\r\nThis attestation evidence can be supplemented with Receipts for the software and configuration of the service, as measured in its attestation report.\r\n```",
              "createdAt": "2023-08-29T14:11:13Z",
              "updatedAt": "2023-08-29T14:11:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZh47",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:12:02Z",
          "updatedAt": "2023-08-29T14:12:02Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\n- a Transparency Service MAY store evidence about the resolution of DIDs into DID Documents.\r\n```",
              "createdAt": "2023-08-29T14:12:02Z",
              "updatedAt": "2023-08-29T14:12:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZjdI",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:14:04Z",
          "updatedAt": "2023-08-29T14:14:04Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "I suggest we not invent a new parameter for this, can we use `iss`  via the CWT header draft:\r\nhttps://datatracker.ietf.org/doc/draft-ietf-cose-cwt-claims-in-headers/",
              "createdAt": "2023-08-29T14:14:04Z",
              "updatedAt": "2023-08-29T14:14:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZn-H",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:18:04Z",
          "updatedAt": "2023-08-29T14:18:05Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "```suggestion\r\n- ts_identifier: The DID of the Transparency Service that issued the Receipt. Verifiers MAY use this DID as a key discovery mechanism to verify the Receipt; in this case the verification is the same as for Signed Claims and the signer MAY include the `kid` header parameter. Verifiers MUST support the `did:web` method, all other methods are optional.\r\n```",
              "createdAt": "2023-08-29T14:18:05Z",
              "updatedAt": "2023-08-29T14:18:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZo5D",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:18:58Z",
          "updatedAt": "2023-08-29T14:18:58Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "we should consider \"Statement Issuer\" vs \"Receipt Issuer\", for better clarity.",
              "createdAt": "2023-08-29T14:18:58Z",
              "updatedAt": "2023-08-29T14:18:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZpoX",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:19:42Z",
          "updatedAt": "2023-08-29T14:19:42Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "```suggestion\r\nVerifiers MAY be configured to re-verify the Issuer's signature locally, but this requires a fresh resolution of the Issuer's DID, which MAY fail if the DID Document is not available or if the statement's signing key has been revoked. Otherwise, the Verifier trusts the validation done by the Transparency Service during Registration.\r\n```",
              "createdAt": "2023-08-29T14:19:42Z",
              "updatedAt": "2023-08-29T14:19:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZrXU",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "we need to refer to \"manifest\" as \"controller document or did document\".",
          "createdAt": "2023-08-29T14:21:21Z",
          "updatedAt": "2023-08-29T14:21:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5fZtr9",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:24:47Z",
          "updatedAt": "2023-08-29T14:24:47Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "One method is \"mandatory\" to support, other DID Methods are optional, a transparency service MUST support at least 1 did method.",
              "createdAt": "2023-08-29T14:24:47Z",
              "updatedAt": "2023-08-29T14:24:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZugt",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:26:11Z",
          "updatedAt": "2023-08-29T14:26:12Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "TS must advertise the DID methods they support.\r\n\r\nIndependently, implementations MUST support did:web (but they may be configured not to accept it)",
              "createdAt": "2023-08-29T14:26:11Z",
              "updatedAt": "2023-08-29T14:26:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZ6BR",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:46:45Z",
          "updatedAt": "2023-08-29T14:46:46Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Move this requirement to the TS section",
              "createdAt": "2023-08-29T14:46:45Z",
              "updatedAt": "2023-08-29T14:46:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZ68f",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:48:30Z",
          "updatedAt": "2023-08-29T14:48:30Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Create a new issue to move this to a new place!",
              "createdAt": "2023-08-29T14:48:30Z",
              "updatedAt": "2023-08-29T14:48:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZ_y9",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:57:32Z",
          "updatedAt": "2023-08-29T14:57:32Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "The verifier is interested in the authenticity of the issuer of the transparent statement and signed statement... The verifier trusts the TS to vet the issuer of the signed statement... the verifier benefits from the transparency service, if they can't trust the TS, there is no reason to do SCITT.",
              "createdAt": "2023-08-29T14:57:32Z",
              "updatedAt": "2023-08-29T15:04:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fy-Vs",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:39:41Z",
          "updatedAt": "2023-09-01T15:39:41Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "For interoperability there are a few choices: either we pick a DID method that is mandatory to implement or we have the TS support all methods listed in the document and clients can select one.\r\n\r\nWhich approach do you prefer?",
              "createdAt": "2023-09-01T15:39:41Z",
              "updatedAt": "2023-09-01T15:39:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fy_Kt",
          "commit": {
            "abbreviatedOid": "a0a7589"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:41:53Z",
          "updatedAt": "2023-09-01T15:41:53Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "What is a \"public service identity\"? Let's use terms that are well established. For example, do you want to say that the TS MUST have a certificate and a private key?",
              "createdAt": "2023-09-01T15:41:53Z",
              "updatedAt": "2023-09-01T15:41:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fy_95",
          "commit": {
            "abbreviatedOid": "a0a7589"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:43:27Z",
          "updatedAt": "2023-09-01T15:43:27Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "I don't want to have normative language on attestation in this document because so far attestation hasn't been integrated. It appears strange to suddenly bring it up here.",
              "createdAt": "2023-09-01T15:43:27Z",
              "updatedAt": "2023-09-01T15:43:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fzASN",
          "commit": {
            "abbreviatedOid": "a0a7589"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:44:10Z",
          "updatedAt": "2023-09-01T15:44:11Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Explain what exactly you want to store.",
              "createdAt": "2023-09-01T15:44:10Z",
              "updatedAt": "2023-09-01T15:44:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fzBeG",
          "commit": {
            "abbreviatedOid": "a0a7589"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:47:15Z",
          "updatedAt": "2023-09-01T15:47:16Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "```suggestion\r\n- version: Receipt version number; MUST be set to `0` for implementation of this document.\r\n```",
              "createdAt": "2023-09-01T15:47:16Z",
              "updatedAt": "2023-09-01T15:47:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fzBqu",
          "commit": {
            "abbreviatedOid": "a0a7589"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:47:49Z",
          "updatedAt": "2023-09-01T15:47:49Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "Everyone understands what the purpose of version numbers are. So, there is no need to talk about what could be done in the future to create a new version",
              "createdAt": "2023-09-01T15:47:49Z",
              "updatedAt": "2023-09-01T15:47:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fzB6G",
          "commit": {
            "abbreviatedOid": "a0a7589"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:48:32Z",
          "updatedAt": "2023-09-01T15:48:32Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "But the TS signs the already signed claim. Wouldn't there be suddently two issuers there?",
              "createdAt": "2023-09-01T15:48:32Z",
              "updatedAt": "2023-09-01T15:48:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5f4FBy",
          "commit": {
            "abbreviatedOid": "c1ce4ad"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-03T14:28:33Z",
          "updatedAt": "2023-09-03T14:28:34Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "That would be one example. I am not sure, if limiting, for example, to certificate and private signing key is a useful thing to do here. Maybe it is, but it feels rather artificially constraining.\r\n\r\nMaybe this is also a symptom of a bigger problem? \"Identity\" is a hot topic in scitt (as the thread you started shows: https://mailarchive.ietf.org/arch/msg/scitt/kubTlBU7sKLSkTpHdVqudsY7U1Y). Maybe we should dedicate text on that topic (carefully, in order to support to operationalize) based on that discussion and then refer back to a corresponding section?",
              "createdAt": "2023-09-03T14:28:33Z",
              "updatedAt": "2023-09-03T14:28:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5gCD1U",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T14:08:05Z",
          "updatedAt": "2023-09-05T14:08:05Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Ping the issue link here to resolve this, thread",
              "createdAt": "2023-09-05T14:08:05Z",
              "updatedAt": "2023-09-05T14:08:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5gCEJ8",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T14:08:38Z",
          "updatedAt": "2023-09-05T14:08:38Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@hannestschofenig we discussed wanting a dedicated issue to discuss, and keeping this PR on topic.",
              "createdAt": "2023-09-05T14:08:38Z",
              "updatedAt": "2023-09-05T14:08:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5gCElP",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T14:09:25Z",
          "updatedAt": "2023-09-05T14:09:26Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "No, its find to have have a nested cose sign 1 with a different header.",
              "createdAt": "2023-09-05T14:09:25Z",
              "updatedAt": "2023-09-05T14:09:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXIXr",
          "commit": {
            "abbreviatedOid": "c1ce4ad"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:29:52Z",
          "updatedAt": "2023-09-19T14:29:52Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "+1",
              "createdAt": "2023-09-19T14:29:52Z",
              "updatedAt": "2023-09-19T14:29:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXJqE",
          "commit": {
            "abbreviatedOid": "effcc6f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:32:02Z",
          "updatedAt": "2023-09-19T14:32:03Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "+1",
              "createdAt": "2023-09-19T14:32:02Z",
              "updatedAt": "2023-09-19T14:32:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXJvS",
          "commit": {
            "abbreviatedOid": "effcc6f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:32:12Z",
          "updatedAt": "2023-09-19T14:32:12Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "+1",
              "createdAt": "2023-09-19T14:32:12Z",
              "updatedAt": "2023-09-19T14:32:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXJ1I",
          "commit": {
            "abbreviatedOid": "effcc6f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:32:21Z",
          "updatedAt": "2023-09-19T14:32:21Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "+1",
              "createdAt": "2023-09-19T14:32:21Z",
              "updatedAt": "2023-09-19T14:32:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXO7H",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:41:12Z",
          "updatedAt": "2023-09-19T14:41:13Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "Resolved with: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/94#discussion_r1330217675",
              "createdAt": "2023-09-19T14:41:12Z",
              "updatedAt": "2023-09-19T14:41:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXPvU",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:42:40Z",
          "updatedAt": "2023-09-19T14:42:41Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@ad-l  to file a separate issue",
              "createdAt": "2023-09-19T14:42:40Z",
              "updatedAt": "2023-09-19T14:42:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXQFy",
          "commit": {
            "abbreviatedOid": "184fbad"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:43:18Z",
          "updatedAt": "2023-09-19T14:43:18Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "Now captured in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/97",
              "createdAt": "2023-09-19T14:43:18Z",
              "updatedAt": "2023-09-19T14:43:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXQNO",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:43:31Z",
          "updatedAt": "2023-09-19T14:43:31Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/98",
              "createdAt": "2023-09-19T14:43:31Z",
              "updatedAt": "2023-09-19T14:43:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXQUz",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:43:43Z",
          "updatedAt": "2023-09-19T14:43:44Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/98",
              "createdAt": "2023-09-19T14:43:43Z",
              "updatedAt": "2023-09-19T14:43:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXQ0s",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:44:35Z",
          "updatedAt": "2023-09-19T14:44:35Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/98",
              "createdAt": "2023-09-19T14:44:35Z",
              "updatedAt": "2023-09-19T14:44:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXR2W",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:46:27Z",
          "updatedAt": "2023-09-19T14:46:27Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Tracked in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/99",
              "createdAt": "2023-09-19T14:46:27Z",
              "updatedAt": "2023-09-19T14:46:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXSRZ",
          "commit": {
            "abbreviatedOid": "184fbad"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-19T14:47:12Z",
          "updatedAt": "2023-09-19T14:47:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 101,
      "id": "PR_kwDOIvmHss5auKk2",
      "title": "Update company for steve lasker",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/101",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-19T22:13:51Z",
      "updatedAt": "2023-09-21T03:59:10Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "a7ba78e98d6089ffe5c5c95c51d582baef634233",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "update-org",
      "headRefOid": "d1713fdfa0ddb13305e6ceca49e68fd7a1205292",
      "closedAt": "2023-09-21T03:59:10Z",
      "mergedAt": "2023-09-21T03:59:10Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "f283c4167f8350f529ae2adb893118133fa0c553"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5hdQNS",
          "commit": {
            "abbreviatedOid": "d1713fd"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-09-20T08:44:22Z",
          "updatedAt": "2023-09-20T08:44:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5hdQ6G",
          "commit": {
            "abbreviatedOid": "d1713fd"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "yes",
          "createdAt": "2023-09-20T08:45:45Z",
          "updatedAt": "2023-09-20T08:45:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 104,
      "id": "PR_kwDOIvmHss5bzXew",
      "title": "Remove feed",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/104",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR highlights how easy it would be to remove feed from the architecture, and notes that feed is redundant to `Reg_Info` which provides more flexibility and is already unbounded in terms of implementation complexity.",
      "createdAt": "2023-10-03T15:08:17Z",
      "updatedAt": "2023-10-20T16:02:12Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "37dbbc686c529bdc89765f18e8fafd20b732f387",
      "headRepository": "transmute-industries/draft-ietf-scitt-architecture",
      "headRefName": "fix/remove-feed",
      "headRefOid": "86f0e2f56fd6bdaea8c09fbfaab44b292a0300c0",
      "closedAt": "2023-10-20T16:02:12Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, are you suggesting the existing [feed property](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#section-3-2.10.1) (tstr) moves to a named property under `reg_info`?  \r\n> Protected_Header = {\r\n>   1 => int               ; algorithm identifier\r\n>   3 => tstr              ; payload type\r\n>  4 => bstr              ; Key ID\r\n>  ; TBD, Labels are temporary\r\n>  391 => tstr            ; DID of Issuer\r\n>  ~~392 => tstr            ; Feed~~\r\n>  393 => Reg_Info        ; Registration Policy info\r\n>}\r\n\r\n```\r\nReg_Info = {\r\n  ? \"feed_id\": tstr,\r\n  ? \"register_by\": uint .within (~time),\r\n  ? \"sequence_no\": uint,\r\n  ? \"issuance_ts\": uint .within (~time),\r\n  ? \"no_replay\": null,\r\n  * tstr => any\r\n}\r\n```\r\n\r\nOr, are you saying SCITT doesn't have a well known feed property, and consumers need to decide their own name/value pairs within the `Reg_Info`?",
          "createdAt": "2023-10-03T23:04:53Z",
          "updatedAt": "2023-10-03T23:04:53Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "NONE",
          "body": "I very much prefered a world in which makers of statements MUST idenfify a feed. Knowing that there is some specific field that consumers and producers are using to co-ordinate the context of their statements lets me, as a TS implementor, organise data much more conveniently. \r\n\r\nI get this benefit without having to care a lot about exactly what form the feed id has. From my PoV it is just a tuple [DID, feed id]. I don't care that many issuers may make statements about the same feed id.\r\n\r\nIf I understand this change correctly, moving to reg info seems to make its presence optional ? And so I would have to start understanding where all the different issuers *chose* to make their equivlent of feed id known. \r\n\r\nIt's presense as a MUST does not require a strong opinion re what *form* it takes. I believe the standard would be much more practical and useful if the field was mandatory but its content were left to applications with some guidance from profiles.\r\n\r\n",
          "createdAt": "2023-10-04T09:30:12Z",
          "updatedAt": "2023-10-04T13:25:48Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Feed was previously defined as a string separate from reg info.\n\nAfter this PR is merged you could add feed as a new property of reg info, along with guidance on its use, or leave it unspecified which would essentially be equivalent to what the spec says now.\n\nSince the structure of feed is not defined, this PR doesn't impact interoperability.\n\nIssuers might prefer to use different expressions of feed in reg info, for example cpe and gtin... what happens if they want to include both? \n\nWhat about all 3 { feed, cpe, purl } ?\n\nRemoving feed doesn't prevent properties from being added to reg info and as has been discussed at great length, feed isn't the only member of the protected header that transparency services can index on.\n\n\n\n",
          "createdAt": "2023-10-04T23:57:35Z",
          "updatedAt": "2023-10-04T23:57:35Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Removing feed from the protected header also makes room for using feed to describe the index exposed by the transparency service without confusing that with the topic identifier the issuer included in reg info.\n\n",
          "createdAt": "2023-10-05T00:02:23Z",
          "updatedAt": "2023-10-05T00:02:23Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "NONE",
          "body": "> Since the structure of feed is not defined, this PR doesn't impact interoperability.\r\n\r\nAh, this is where we differ. I see its presence and its definition as 'an opaque statement issuer identifier' as crucial from the perspective of practical applications and interoperability. Without it the context of statements seems entirely arbitrary.\r\n\r\n> Issuers might prefer to use different expressions of feed in reg info\r\n\r\nThey are welcome to do so, and I can see plenty of places that could be useful. I see that as supplimentary to the basic utility of a feed identifier as a co-ordination context.\r\n\r\n> Removing feed doesn't prevent properties from being added to reg info \r\n\r\nNeither does keeping it think ?\r\n\r\n> has been discussed at great length, \r\n\r\nI understood the issue with feed was the attempt to make it more structured than an 'opaque issuer defined value'. I see the attempt at adding mandatory structure, possibly even 'strongly recommended' structure as undermining the applicability of the standard.\r\n\r\n\r\n> feed isn't the only member of the protected header that transparency services can index on.\r\n\r\nOk, great, what do you think is more appropriate here, what am i missing ?",
          "createdAt": "2023-10-05T10:16:17Z",
          "updatedAt": "2023-10-05T10:17:01Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 I beg to differ. Feed should not be part of RegInfo\r\n\r\nThe reason I see it this way is:\r\n\r\n1. Feed is an additional information about the Statements made for the Artifact, How issuer would like to identify all the Statements pertaining to the Artifact. It has All Statements Scope (about an artifact)\r\n2. Registration Information container is for about the registration specific aspect of the specific command, When it was registered. Till what time it has a validity etc. It has per Command Scope.\r\n3. We should not link the two as the scope is different!\r\n4. Any other comments are Welcome!",
          "createdAt": "2023-10-05T10:38:16Z",
          "updatedAt": "2023-10-05T10:38:16Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "NONE",
          "body": "FWI: \r\n\r\nWhen I saw 'feed' in the earlier work presented as just a string it struck me as a simple, powerful and practical way to have a base line context for statements.\r\n\r\nWhen I got a sense of the efforts to add structure to it I didn't think happy thoughts. I just couldn't see how there could be 'one way'.\r\n\r\nIf it moves the world forward to stop talking about it and leave it out, we can of course work with that. It could always come a long later if it is realy as useful as I think it is.\r\n\r\nIt does seem to mean that trusted service implementations will all be inventing different ways to contextualise statements. Possibly that is actually the right thing, and scitt users should be aware of the specifics of each TS. \r\n\r\nThe presence of feed as 'a string' seemed to offer a really good baseline - as long as it didn't try to be opinionated about structure.",
          "createdAt": "2023-10-05T10:40:04Z",
          "updatedAt": "2023-10-05T10:40:36Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "RegInfo is about feed... because it will be used to order the feed by the ts..the RDF style feed, would look like:\n\nfeed: {\nid : // graph node id\ntype: // graph node type\n... }\n\nThe whole idea of registering something is to be able to come back and see filtered views of what has been registered.\n\nSince feed has no structure, it is extraneous to reg info.\n\nPerhaps an alternative PR will propose an informative way that the transparency service processes feeds, maybe something like:\n\nselect * from feeds where feed.id = device.id\n\nBut the same thing can already be accomplished by indexing on any of the other custom properties the ts registration policy allows.\n\nAnother alternative would be to make the registration policy normative and require feed to be present.\n\nI'm open to other solutions, let's see some PRs :)\n\n",
          "createdAt": "2023-10-05T12:42:44Z",
          "updatedAt": "2023-10-05T12:44:31Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR could be merged first, then https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/108 could address the CDDL changes, and https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/107 could be updated to find replace \"Feed\" with \"Subject\" / \"sub\" and or tag 2.\r\n\r\n",
          "createdAt": "2023-10-07T14:02:19Z",
          "updatedAt": "2023-10-07T14:02:19Z"
        },
        {
          "author": "sylvanc",
          "authorAssociation": "NONE",
          "body": "The purpose of the `feed`\u200b header is to allow a single issuer `iss`\u200b to sign for different purposes.\r\n\r\nFor example:\r\n\r\n* A Microsoft product group may have a single `iss`\u200b identifier. That product group may produce a collection of software products, each packaged as a container. Each of those containers has a different purpose. The product group can indicate that purpose in the `feed`\u200b. When a new container image for `feed`\u200b \"my-https-front-end\" is produced, the signed statement for it can be distinguished from the signed statements for the \"my-database-connector\" container image (and all of its versions).\r\n* An operator of an online service single `iss`\u200b identifier. That operator may produce a series of signed statements regarding the software they run with `feed` \"our-software-product\" and, separately, a series of signed statements regarding which versions of their software customers should currently be using, with `feed` \"our-software-usage-policy\".\r\n* A foundation that produces an open source library may have a single `iss`\u200b identifier. That foundation might release a series of signed statements for their x86 binaries with `feed` \"oss-library-x86-64\" and a separate one for ARM binaries with `feed` \"oss-library-aarch64\".\r\n\r\nWithout a header that indicates the purpose of the signed statement, there is a confusion attack. For example:\r\n\r\n* An online service provider may intend to run a \"my-database-connector\" container from some issuer. Due to a malicious confusion attack, they are given signed statements for a \"my-database-connector-with-debug-backdoor\" container.\r\n\r\nIn other words: without a `feed`\u200b, an `iss`\u200b can only be used for a single purpose.\r\n\r\nThe name `feed` (as opposed to, say, `purpose`) is to indicate that the signed statements may be augmented or superceded with additional signed statements for the same purpose. For example, a software product may have a new version released for the same `feed`.\r\n",
          "createdAt": "2023-10-11T00:38:47Z",
          "updatedAt": "2023-10-11T00:38:47Z"
        },
        {
          "author": "edoardogiordano",
          "authorAssociation": "NONE",
          "body": "As other already mention I feel the need to have an identifier that MUST be present to differentiate between different products within the same issuer.\r\n\r\n> This PR could be merged first, then #108 could address the CDDL changes, and #107 could be updated to find replace \"Feed\" with \"Subject\" / \"sub\" and or tag 2.\r\n\r\nIn my understanding your suggestion here is to separate the concept of an identifier, which would be the sub field of the CWT claim and the concept of the feed which would allow more complex references between various statements. If this is the intended behavior, than I agree this could be the way to proceed.",
          "createdAt": "2023-10-11T07:58:10Z",
          "updatedAt": "2023-10-11T08:24:51Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@sylvanc So according to your definition a `Feed` is an information about a Product. it is not clear to me whether the Feed identify a specific revision of the product or it associates to any/all revisions of a product.\r\nThen if it pertains to a all revisions, then how a statement about a specific revision can be identified ?\r\n\r\nDo we need to recommend the same in the Architecture document ?\r\n\r\nAlso the existing Feed definition implied, multiple issuers can use the Feed to identify statements pertaining to an Artifact.\r\n\r\nWe need to clearly define, 1. Purpose 2. Scope 3. Usage examples of Feed before introducing into the specification.\r\n\r\nOtherwise, it triggers confusion/ambiguity in the Specification.\r\n\r\nI recommend we Remove Feed from the existing specification, come up with a clear proposal which defines 1.2. & 3. above and then re-introduce the same",
          "createdAt": "2023-10-11T09:44:03Z",
          "updatedAt": "2023-10-11T09:44:03Z"
        },
        {
          "author": "sylvanc",
          "authorAssociation": "NONE",
          "body": "No, `feed` is not a product. A `feed` identifies an unbounded sequence of statements about the same topic. It is a _purpose_, with the explicit ability to continue to make new statements for that purpose.\r\n\r\nA signed statement is meaningless without both an issuer `iss` and a `feed`. Removing it creates a situation where a relying party must do a \"deep dive\" of the payload in order to guess at the statement's purpose.",
          "createdAt": "2023-10-11T14:13:54Z",
          "updatedAt": "2023-10-11T14:13:54Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> Multiple Issuers, X, Y,Z are making statements about the same product P.\r\n\r\nThis resonates with me, as it accomplishes the scenarios entities do today. \r\n\r\n> An Issuer : X is issuing statements about Multiple products (P, Q, R):\r\n\r\nThis one is less clear. Can we articulate how the above could be used in practice? Trying to correlate across multiple Artifacts (products as noted above) feels like a conflation and complication. Rather than attempt to make a statement about multiple artifacts, why not make the statement on each artifact?\r\n\r\n> A `feed` identifies an unbounded sequence of statements about the same topic. It is a _purpose_, with the explicit ability to continue to make new statements for that purpose.\r\n\r\nThis seems consistent with: [Attempt clarification of Feed purpose and differentiate from reg_info #107](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/107)\r\n\r\nIf we can ground the designs in the problems we're trying to solve, ([the use cases](https://www.ietf.org/archive/id/draft-ietf-scitt-software-use-cases-01.html)) we might be able to better address a proposal. \r\nFrom: [Use CWT Claims in Headers: comment](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/108#issuecomment-1753959506)\r\n\r\nThe thing I'd like to test with this discussion is whether two or more identities can make statements about the same artifact.\r\n\r\n1. Wabbit Networks (_the identity `391: did`_) releases their `net-monitor v1` software (_the Artifact_)\r\n1. Wabbit Networks publishes a Signed Statement using a `\"392: feed\": \"wabbitnetworks-netmonv3linux` and `\"391: DID\":=\"wabbitnetworks\"` on their `scitt.wabbit-networks.io` service. \r\n1. Wabbit Networks has an auditor publish a signed statement: `\"392: feed\": \"wabbitnetworks-netmonv3linux` and `\"391: did\":=\"coyote-security\"` on the same `scitt.wabbit-networks.io` service.\r\n1. Cosmic security, Mitre, and other independent publishers make statements about the same Artifact\r\n    - `\"392: feed\": \"wabbitnetworks-netmonv3linux` and `\"391: did\":=\"cosmicsecurity\"` on their `scitt.cosmic-security.io` service. \r\n    - `\"392: feed\": \"wabbitnetworks-netmonv3linux` and `\"identity\":=\"mitre\"` on their `scitt.mitre.org` service. \r\n\r\nAs a consumer, ACME Rockets can\r\n- query the `scitt.wabbit-networks.io` service, to get statements associated with the net-monitor v1 software package.\r\n- query `scitt.mitre.org` for any public statements, using `\"392: feed\": \"wabbitnetworks-netmonv3linux` as the means to find statements from Mitre for the Wabbit Networks, net-monitor v1 software.\r\n- optionally query `scitt.cosmic-security.io` as they specialize in aerospace software, providing deeper insights for the specific aerospace vertical.\r\n\r\nACME Rockets (_the consumer_) can choose to trust the statements because they trust the independent identities making statements. Which endpoints they query is up to them. They could equally choose to NOT trust Coyote Security, (because who trusts the Coyote?), or because they're not tailored to the unique needs Cosmic Security addresses.\r\n\r\nIn the above case, `392: feed` is used to independently identify a collection of statements about an artifact, independently from the identity, and consistent across SCITT Transparency Service Instances\r\n\r\nIs the above usecase one we're trying to solve? \r\n- If not, what is the problem we're solving, and how would someone implement the above?\r\n- If so, does `392: feed` and `391: did` solve the problem? If not, what are the alternatives?\r\n",
          "createdAt": "2023-10-11T14:27:35Z",
          "updatedAt": "2023-10-11T14:27:35Z"
        },
        {
          "author": "sylvanc",
          "authorAssociation": "NONE",
          "body": "That's a great use case. Yes, any `iss` can make a statement with a given `feed`. But `feed` isn't a \"controlled\" or \"owned\" value - no need for registering it. The tuple of (`iss`, `feed`) identifies the sequence of statements from an issuer - which works well with your Coyote example.",
          "createdAt": "2023-10-11T14:42:33Z",
          "updatedAt": "2023-10-11T14:42:33Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixes #11 ",
          "createdAt": "2023-10-18T16:30:26Z",
          "updatedAt": "2023-10-18T16:30:26Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm withdrawing this PR, however I may object to the current text in future published revisions. \r\n\r\nI look forward to reviewing the next draft.",
          "createdAt": "2023-10-20T16:02:12Z",
          "updatedAt": "2023-10-20T16:02:12Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5jk-qj",
          "commit": {
            "abbreviatedOid": "86f0e2f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-11T09:48:39Z",
          "updatedAt": "2023-10-11T09:48:39Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "The existing specification statements here are extremely confusing to me!\r\n\r\nI think, we should clearly distinguish the two use cases and describe them individually.\r\n\r\nUse Case 1:\r\nAn Issuer : X is issuing statements about  Multiple products (P, Q, R):\r\n\r\nUse Case 2:\r\nMultiple Issuers, X, Y,Z are making statements about the same product P.\r\n\r\nWe need to have these two cases clearly covered in the specificiation.",
              "createdAt": "2023-10-11T09:48:39Z",
              "updatedAt": "2023-10-11T09:48:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 105,
      "id": "PR_kwDOIvmHss5b0EEr",
      "title": "Cleanup of remaining references to Claims. ",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/105",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #15, #16 and #8",
      "createdAt": "2023-10-03T17:01:11Z",
      "updatedAt": "2023-10-06T00:45:38Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0383ec2b5a23f11d1a42800aebbe38368e12376d",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "claim-cleanup",
      "headRefOid": "ce0b9f4d64668f3a96059d9d665fa3ea97f31af5",
      "closedAt": "2023-10-06T00:45:38Z",
      "mergedAt": "2023-10-06T00:45:38Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "e6e4f1831ac8d8b21696d7be199b26775da1d447"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5i9bxs",
          "commit": {
            "abbreviatedOid": "ce0b9f4"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM, thanks for finishing this off",
          "createdAt": "2023-10-05T16:23:14Z",
          "updatedAt": "2023-10-05T16:23:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 106,
      "id": "PR_kwDOIvmHss5b1SWs",
      "title": "Markdown Formatting Fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/106",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A number of markdown formatting errors caused [i-d-template](https://github.com/martinthomson/i-d-template/) to fail processing and rendering.\r\n\r\nAs an example, see [section-5.1.1.1-5](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html#section-5.1.1.1-5)",
      "createdAt": "2023-10-03T20:50:21Z",
      "updatedAt": "2023-10-06T00:49:58Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e6e4f1831ac8d8b21696d7be199b26775da1d447",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "markdown-cleanup",
      "headRefOid": "780466cec1c3d2dcf8faa5ea21bd28de2ac4ae75",
      "closedAt": "2023-10-06T00:49:58Z",
      "mergedAt": "2023-10-06T00:49:58Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "37dbbc686c529bdc89765f18e8fafd20b732f387"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5i9bjK",
          "commit": {
            "abbreviatedOid": "b3bd2f0"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM - nobody loves broken markdown :-)",
          "createdAt": "2023-10-05T16:22:39Z",
          "updatedAt": "2023-10-05T16:22:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 107,
      "id": "PR_kwDOIvmHss5cItAF",
      "title": "Attempt clarification of Feed purpose and differentiate from reg_info",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/107",
      "state": "MERGED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is an attempt to break the deadlock on Feeds vs searchability etc.\r\n\r\nWithout making any normative changes (I hope!) I seek to clarify a handful of issues:\r\n\r\n- Why do we need Feed at all? Because it is the very simple but essential way of ensuring the desired goal of non-equivocation. It makes it practical to discover or eliminate equivocation through a very simple but powerful way of linking related Transparent Statements together, and providing a very simple way of enable pre-commitment for statements of fact and accountability. In less fancy but as useful ways it also ensures that the relying party or someone with a copy of one Transparent Statement in their hands can ensure completeness of the set they're evaluating, and confirm that they are up-to-date with supply chain information that can move very fast.\r\n\r\n- Does Feed need a structure? No, assuming the above is the purpose of grouping statements together then it doesn't mater what it's called as long as it's the same for all items in the group. This again cements the need for it to be in the Envelope though, since otherwise coordinating all the points in various systems that would need to know what value to put in there would be impractical. By having it in the Envelope anyone with a single Transparent statement from the Feed would know what to use for either making new statements or looking in the TS for related statements.\r\n\r\n- Can Feed just be a part of reg_info? No, because reg_info is defined for a very different purpose. Registration Policies are also very complicated and need work, but I don't think they need work to close this particular issue.\r\n\r\nWhile there are still clarity issues in the spec which I would love for us to address soon, I think this minimal change makes it possible to move on and removes the pollution from the discussion about types of identity, self-describing serialised data structures, and the like. Crucially, in keeping with the findings from -117, I believe it shows that it is possible to carry the 'findability' information that was required by the applications building on top of SCOITT building blocks without going outside our charter and defining things at the semantic or application layer. ",
      "createdAt": "2023-10-06T17:28:23Z",
      "updatedAt": "2023-10-23T23:23:31Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "40dc274de6b72b476be88938bc5a008d6afb4d1c",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "dev/jag-uk/clarify-feed",
      "headRefOid": "caae2e893be38a85985b582791cf7abcf70d4a05",
      "closedAt": "2023-10-20T19:24:48Z",
      "mergedAt": "2023-10-20T19:24:48Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "e9bd8209be9085a6dcb5a935e5cba5a676c75835"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I've fine taking the changes in this PR as is, but I think Feed should still be removed / replaced with COSE conventions, see https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/108",
          "createdAt": "2023-10-07T14:04:29Z",
          "updatedAt": "2023-10-07T14:04:48Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "NONE",
          "body": "Could someone please describe what a \"registered claim name\" is? For example, using a \"Registry of Deeds\"  analogy, would Book and Page number,be considered the \"registered claim name\"?",
          "createdAt": "2023-10-07T18:26:20Z",
          "updatedAt": "2023-10-07T18:26:20Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@rjb4standards in COSE and JOSE, there are names like \"iss\" and \"sub\" that are already registered in iana, and there are \"private names\" like \"vendor_branding_info\", that are not registered.\n\nRegistered names are established by updating the registries which requires publishing documents usually.\n\nPrivate names are ones that people decided to use, without registering them.\n",
          "createdAt": "2023-10-08T13:15:49Z",
          "updatedAt": "2023-10-08T13:15:49Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixes #11 ",
          "createdAt": "2023-10-18T16:29:57Z",
          "updatedAt": "2023-10-18T16:29:57Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR adds clarity and works well with the recent PRs (#113)\r\nAre there any objections to merging? If so, please identify what should be changed prior, and what couldn't be resolved with additional PRs of clarity.",
          "createdAt": "2023-10-18T19:10:28Z",
          "updatedAt": "2023-10-18T19:10:28Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Please merge asap",
          "createdAt": "2023-10-20T16:35:00Z",
          "updatedAt": "2023-10-20T16:35:00Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging to move the spec forward, with a cleanup PR coming. \r\nMerging current discussions will enable additional conversations at IETF 118.",
          "createdAt": "2023-10-20T19:24:38Z",
          "updatedAt": "2023-10-20T19:24:38Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5jGH9k",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I skimmed this and these edits were very good, and clarified for me in an educational way. I don't want to quibble on word choice, but want to better understand what promise means specifically in the context of feeds and non-equivocation.",
          "createdAt": "2023-10-06T17:59:05Z",
          "updatedAt": "2023-10-06T17:59:52Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "Minor: This edit and all the others are great, but can we be a little more explicit about the what and/or how of the *promise* non-equivocation is in this context? The use of that word throws me off.",
              "createdAt": "2023-10-06T17:59:05Z",
              "updatedAt": "2023-10-06T17:59:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5jHRl2",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This seems fine, but I think the CDDL can be simplified and we can reuse registered claim names to accomplish the same thing",
          "createdAt": "2023-10-06T22:09:34Z",
          "updatedAt": "2023-10-06T22:09:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kRAha",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T12:23:31Z",
          "updatedAt": "2023-10-17T12:23:32Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Why should this statement be part of the specification text? Maybe we should try to fix the meaning of Reg_Info?\r\n\r\nPlease find a first attempt to bash at #113 ",
              "createdAt": "2023-10-17T12:23:32Z",
              "updatedAt": "2023-10-17T12:23:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kRGZy",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T12:35:13Z",
          "updatedAt": "2023-10-17T12:35:13Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I checked the definition of Verifier as it starts to move into more focus now. Pulling the definition in here for convenience:\r\n```\r\nan entity that consumes Transparent Statements (a specialization of Signed Statement Consumer),\r\nverifying their proofs and inspecting their Statement payload, either before using corresponding\r\nArtifacts, or later to audit an Artifact's provenance on the supply chain.\r\n```\r\n\r\nWith respect to the quoted definition:\r\n1.) `specialization of Signed Statement Consumer` seems to be outdated?\r\n2.) what kind of proofs in `verifying their proofs`?\r\n3.) payload opaque to the TS is inspected in `inspecting their Statement payload`?\r\n4.) what does `before using corresponding Artifacts` mean?\r\n\r\nWith respect to the proposed changes in line 189:\r\n1.) how do Verifiers `ensure completeness`? Is that via `verifying their proofs`?\r\n2.) `Statements linked to the one(s) they are evaluating` is done via the Feed value, right?",
              "createdAt": "2023-10-17T12:35:13Z",
              "updatedAt": "2023-10-17T12:35:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kdZK2",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T15:34:05Z",
          "updatedAt": "2023-10-18T15:34:05Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Nit: title case:\r\n```suggestion\r\n### Support for Multiple Artifacts\r\n```",
              "createdAt": "2023-10-18T15:34:05Z",
              "updatedAt": "2023-10-18T15:34:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kfFmW",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T18:53:09Z",
          "updatedAt": "2023-10-18T18:53:09Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "> Quoted definition on verifier:\r\n\r\n@henkbirkholz, should this be a separate PR to add any [clarification for Verifier within the terminology](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md?plain=1#L244)? \r\n\r\n> 1.) how do Verifiers `ensure completeness`? Is that via `verifying their proofs`?\r\n> 2.) `Statements linked to the one(s) they are evaluating` is done via the Feed value, right?\r\n\r\nMy interpretation of the following: \r\n> Verifiers use the Feed to ensure completeness and non-equivocation in supply chain evidence by identifying all Transparent Statements linked to the one(s) they are evaluating.\r\n\r\nA consumer|verifier can query the statements about the ~feed~ subject. They may choose to query all statements, filter the statements by specific issuers, filter by specific contentTypes, or a mix of the each. But, all are related to a specific artifact, as defined by a ~feed~ subject.  Because they've identified \"the artifact\" by a subject\r\n",
              "createdAt": "2023-10-18T18:53:09Z",
              "updatedAt": "2023-10-18T18:53:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kfGyV",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "rjb4standards",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T18:56:20Z",
          "updatedAt": "2023-10-18T18:56:20Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@henkbirkholz when we say related to the same artifact, does this imply a historical record/tracking type of report for the \"same artifact\"? Thanks.",
              "createdAt": "2023-10-18T18:56:20Z",
              "updatedAt": "2023-10-18T18:56:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kfKPr",
          "commit": {
            "abbreviatedOid": "4d6db74"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T19:04:58Z",
          "updatedAt": "2023-10-18T19:04:58Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "#113 was merged, and helps. This appears to add clarity and doesn't seem to conflict.\r\n\r\nI'm also thinking Registration Policy Metadata is the right heading, unless we rename Reg_Info ",
              "createdAt": "2023-10-18T19:04:58Z",
              "updatedAt": "2023-10-18T19:04:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kfSKG",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T19:13:39Z",
          "updatedAt": "2023-10-18T19:13:40Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "The definition of non-equivocation is a good topic that we could possibly provide a link. For example: https://www.dpss.inesc-id.pt/~rodrigo/nonequiv_podc12.pdf\r\n\r\nI think trying to describe non-equivocation in the spec is beyond the scope.",
              "createdAt": "2023-10-18T19:13:39Z",
              "updatedAt": "2023-10-18T19:13:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kffi8",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T19:34:08Z",
          "updatedAt": "2023-10-18T19:34:09Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@rjb4standards,\r\nAs an example:\r\nWabbit-networks ships the `net-monitor v1` software package.\r\nThey wish to provide:\r\n- SPDX SBOM\r\n- ClycloneDX SBOM\r\n- A VEX report\r\n- Updated VEX reports as they learn more\r\n- A statement when the product will no longer be maintained for support\r\n- A statement that says it's being replaced by v1.2\r\n\r\nAll those are statements that Wabbit-networks may make on that specific artifact.\r\n\r\nOther entities, such as Cosmic Security or MITRE can also make statements about the same artifact.\r\n\r\nAs a consumer, you would use the ~Feed~ | Subject to correlate all the statements about the same Artifact The `net-monitor v1` package.",
              "createdAt": "2023-10-18T19:34:08Z",
              "updatedAt": "2023-10-18T19:34:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kw3Y2",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Fixing `Feed` content in the doc to `CWT Subject Claim` occurrences where possible must be done before submission!",
          "createdAt": "2023-10-20T16:48:31Z",
          "updatedAt": "2023-10-20T16:48:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kxg7Z",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:20:06Z",
          "updatedAt": "2023-10-20T18:20:07Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I am leery of changing this to information about the Artifact.  The job of the transparency service is to countersign the signature not make any determination or claims about the content.  In fact there are scenarios where we don't want that information to be anywhere near the service.  ",
              "createdAt": "2023-10-20T18:20:06Z",
              "updatedAt": "2023-10-20T18:20:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxim_",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:24:03Z",
          "updatedAt": "2023-10-20T18:24:03Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "The stitching of coherent information from multiple sources is complex.  The view from within a corporation could be the public published information augmented with the internal Legal or security endorsements.  Thus the thought that all relevant content flows through one Transparency services does not work here.  In addition, the decision of whether one identity can make statements about another's product is not under the control of the Transparency service.   The feed is not going to be authoritative in this context.",
              "createdAt": "2023-10-20T18:24:03Z",
              "updatedAt": "2023-10-20T18:24:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxkK1",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:28:31Z",
          "updatedAt": "2023-10-20T18:28:31Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "I don't agree that the discriminator for a product is within the signed statements.  In the case where product identity is mandated within the artifact, requiring it to be replicated into the detached signature is unclear.  \r\nIn the use case where there is a global or major Transparency service, I could make a case that the product information hints to auditors more than the frequency of which statements are process, and that may be unacceptable.  Right now the information disclosure in a signed detached signature is limited.  Can someone make a case why we must\\should scope this here?  I could see it being necessary for some vertical process.",
              "createdAt": "2023-10-20T18:28:31Z",
              "updatedAt": "2023-10-20T18:28:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxlTu",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:32:04Z",
          "updatedAt": "2023-10-20T18:32:05Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "The registration\\configuration of trusted identity sources is a problem.  How this is addressed is the open issue.  I don't see a solution where there are hints in the receipts to know that configuration policy has changed to drive this.  Nor do I see every consumer binding to the feed.   The model of asking for every receipt for the policy also seems flawed to me.  The original refocus on \"feeds\" was to offer a solution here which is now been segmented off the discussion and left as a future problem.",
              "createdAt": "2023-10-20T18:32:05Z",
              "updatedAt": "2023-10-20T18:32:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxlgd",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:32:45Z",
          "updatedAt": "2023-10-20T18:32:46Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Why \"recently very recently\"?",
              "createdAt": "2023-10-20T18:32:45Z",
              "updatedAt": "2023-10-20T18:32:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxmDO",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:34:01Z",
          "updatedAt": "2023-10-20T18:34:01Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "Thanks for the paper, I reviewed it, it was informative (but I likely need more time to understand it). To bring it back to the PR, I was asking if we have to define this term in this spec. Other terms, such as client in #102.\r\n\r\nIf that is not needed, feel free to resolve this comment. I will take it to mean I might be behind the shared understanding of other WG contributors and participants and it is well understood (and I am asking us to define water for specs in a specification about water purification level of obtuseness, to be funny about it).\r\n\r\nIf you would like it be added, I can make an issue and PR an explanation summarized from this and/or other sources. Let me know.",
              "createdAt": "2023-10-20T18:34:01Z",
              "updatedAt": "2023-10-20T18:34:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxmcm",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:35:12Z",
          "updatedAt": "2023-10-20T18:35:12Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "Don't see this working?  The verification of a transparent statement should never require binding to a feed.  I thought we were talking about feeds for auditors not end users.  If so, making it that end user needs to see the Transparency Service directly and \"subscribe\" has issues.",
              "createdAt": "2023-10-20T18:35:12Z",
              "updatedAt": "2023-10-20T18:35:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxn7I",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:39:32Z",
          "updatedAt": "2023-10-20T18:39:32Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "Don't agree as VEX style statements or claims can be augmented by the same entity and only the latter matters.  In that case the retrieval of all statements of a feed is a huge tax.  This concept of retrieval should be an application based solution (think a public registry) where graph style queries go.  It is at this layer the uber ownership and who gets to write new information per product is made.  That is not a function of the Transparency service. ",
              "createdAt": "2023-10-20T18:39:32Z",
              "updatedAt": "2023-10-20T18:39:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxoGE",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:40:08Z",
          "updatedAt": "2023-10-20T18:40:09Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Is this a shorthand way of alluding to the epoch works from the RATS WG? If so, should we word appropriately and reference that as one potential temporal approach, which can be substituted for others? (I am guessing here based on wording, but I could be very wrong).\r\n\r\nhttps://datatracker.ietf.org/doc/draft-birkholz-rats-epoch-markers/05/",
              "createdAt": "2023-10-20T18:40:08Z",
              "updatedAt": "2023-10-20T18:40:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxqQT",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:47:32Z",
          "updatedAt": "2023-10-20T18:47:33Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "We presume the statement below, \r\n\r\n> the retrieval of all statements of a feed is a huge tax\r\n\r\nwith this reservation below.\r\n\r\n> Don't agree as VEX style statements or claims can be augmented by the same entity and only the latter matters.\r\n\r\nGiven the higher-level architecture of SCITT, what about this sentence or current draft requires a consumer of a TS retrieve all statements of the feed at once or at all, but not look at one and query *if* there are statements that were published with metadata in one statement indicating others before or after this statement in a sequence? This goes outside the scope of SCITT, but inside VEX and other formats. In formats I have helped design or maintain, you can look at pointers to records, before, after, or show me the most current (from a data model perspective, not that different from how the IETF Datatracker works when you visit an old draft; you do not need to visit a page and read all drafts in a single page at once). So where is this called and why do we assume this here or elsewhere in the current spec draft?",
              "createdAt": "2023-10-20T18:47:33Z",
              "updatedAt": "2023-10-20T18:47:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxtRa",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:56:53Z",
          "updatedAt": "2023-10-20T18:56:53Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "@aj-stein-nist \r\n> feel free to resolve this comment. I will take it to mean I might be behind the shared understanding of other WG contributors and participants and it is well understood (and I am asking us to define water for specs in a specification about water purification level of obtuseness, to be funny about it).\r\n> If you would like it be added, I can make an issue and PR an explanation summarized from this and/or other sources. Let me know.\r\n\r\nYou're not behind, rather it's a great topic to clarify. Please do create an issue, and/or add a PR, it would be much appreciated as I'm sure others have the same question.",
              "createdAt": "2023-10-20T18:56:53Z",
              "updatedAt": "2023-10-20T18:56:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxueY",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:00:48Z",
          "updatedAt": "2023-10-20T19:00:49Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "This is a great topic as we dig deeper into receipts. Please open a new issue for receipts, or we can have that conversation in #103 ",
              "createdAt": "2023-10-20T19:00:48Z",
              "updatedAt": "2023-10-20T19:00:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxzsK",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:15:13Z",
          "updatedAt": "2023-10-20T19:15:13Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "@roywill \r\n> Don't agree as VEX style statements or claims can be augmented by the same entity and only the latter matters. In that case the retrieval of all statements of a feed is a huge tax. \r\n\r\nI agree with fetching all statements for an Artifact, based don't the `CWT_Claim => sub` may not be practical, or needed. \r\nThe verifier may want all statements, of a particular contentType, such as VEX, or all statements of a specific issuer, of a specific contentType. \r\nThese are all great topics when we discuss indexing, querying, etc. Which may likely be application layer concepts. \r\nWe can iterate this text a bit more, in a subsequent issue/PR",
              "createdAt": "2023-10-20T19:15:13Z",
              "updatedAt": "2023-10-20T19:15:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kx0bS",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:17:51Z",
          "updatedAt": "2023-10-20T19:17:51Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "> Thus the thought that all relevant content flows through one Transparency services does not work here. \r\n\r\nAgreed. This is also why we need a property for multiple instances of SCITT to have a property to correlate upon :) \r\n\r\nResolving this, and open to additional Issues/PRs for additional clarity.",
              "createdAt": "2023-10-20T19:17:51Z",
              "updatedAt": "2023-10-20T19:17:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kx04J",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:19:30Z",
          "updatedAt": "2023-10-20T19:19:30Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I believe this update is saying the registration policy can read the non-opaque envelope header to make the decisions. ",
              "createdAt": "2023-10-20T19:19:30Z",
              "updatedAt": "2023-10-20T19:19:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kx15T",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:22:50Z",
          "updatedAt": "2023-10-20T19:22:50Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "```suggestion\r\nFor example, a Registry may only allow a Signed Statement to be registered if it was signed very recently, or may reject a Signed Statement if it arrives out of order in some sequenced protocol.\r\n```\r\nCorrecting, what may, or may not have been an intentional duplication of \"_recently_\"",
              "createdAt": "2023-10-20T19:22:50Z",
              "updatedAt": "2023-10-20T19:22:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 108,
      "id": "PR_kwDOIvmHss5cK9gO",
      "title": "Use CWT Claims in Headers",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/108",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR shows that feed is redundant to CWT Claims in headers.\r\nIf this approach gains consensus we won't need to register special tags in the protected header, and can instead use the RFC that allows this to happen.\r\n\r\nFor context, see this discussion from the list:\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/cose/KNRge3vxXF3A2LY24DNo6ZQxrNc/",
      "createdAt": "2023-10-07T13:56:10Z",
      "updatedAt": "2023-10-20T16:53:07Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "37dbbc686c529bdc89765f18e8fafd20b732f387",
      "headRepository": "transmute-industries/draft-ietf-scitt-architecture",
      "headRefName": "feat-cwt-claims",
      "headRefOid": "4d414a4aeea8d08f5a7741c45ac62e84b63dade8",
      "closedAt": "2023-10-20T16:53:07Z",
      "mergedAt": "2023-10-20T16:53:07Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "0f5dc15c8c0f2d0372ab73e5f8d3f9b677b59210"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR also aligns with the terminology used in W3C, where:\r\n\r\n`issuer's make claims about subjects`.\r\n\r\nW3C requires additional structure for the identifiers of issuers and subjects, they need to be https://www.w3.org/TR/json-ld11/#node-identifiers\r\n\r\nJOSE and COSE do not restrict `iss` and `sub` like this, they are both `string or URI`.... just like `feed`.\r\n\r\n- https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.1\r\n- https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.2\r\n\r\n- https://datatracker.ietf.org/doc/html/rfc8392#section-3.1.1\r\n- https://datatracker.ietf.org/doc/html/rfc8392#section-3.1.2\r\n\r\nI don't see why we would invent a new label for the \"identifier which the statements are in relation to\", when we already have `iss` and `sub`.",
          "createdAt": "2023-10-07T14:00:32Z",
          "updatedAt": "2023-10-07T14:00:53Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "NONE",
          "body": "The reason to have a new label is to avoid conflating it with something it isn't. Or at least something that it only imperfectly reflects.\r\n\r\nAs a trusted service implementor interested in making strong and clear assertions about completeness and non-equivocation over a series of statements, what do I do if I also see 'exp' or 'iat' in the context of 'iss' and 'sub' ? When I read a standard, from the perspective of a TS implementor again, that mentions just iss, and sub do I get to assume that I will never deal with those ?\r\n\r\nIf those are not permitted how is this actually a CWT ?\r\n\r\nThese things possibly have answers but I don't think my confusion will be an isolated one. What I would really like to see for feed id is wording like this:\r\n\r\n```\r\nTrusted Services MUST treat the feed id as an opaque series of bytes.\r\n Issuers MAY define encoding appropriate for their domain for the benefit\r\n of relying parties. Completeness and non-equivocation guarantees MUST \r\nonly be defined in terms of the opaque array of bytes comprising the feed id\r\n```\r\n\r\nI believe that permits issuers and relying parties full flexibility of expression _in the context_ of a very clearly articulated series of statements.\r\n\r\nIn otherwords, if we use 'sub' but define it that way, I don't see how it really is anything to do with 8392.\r\n\r\nAnd this would imply the restoration of DID. So we continue to have both",
          "createdAt": "2023-10-09T15:30:56Z",
          "updatedAt": "2023-10-09T15:38:35Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "> If those are not permitted how is this actually a CWT ?\r\n\r\nSigned statements are not CWTs, unless the payload content type is a CBOR map that uses registered claim names.\r\n\r\nYou can use CWT Claims in headers for payload that are xml files, this was discussed on the related draft, in the mailing list discussion I linked.\r\n\r\n`sub` as a arbitrary text or `feed` as arbitrary text are equivalent.\r\n\r\nThe only reason not to use `sub` would be that you have a well defined relationship between `sub` and `feed` and `iss` where you need all 3 to accomplish something... AFAIK, we don't have that.",
          "createdAt": "2023-10-09T15:40:56Z",
          "updatedAt": "2023-10-09T15:42:32Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "NONE",
          "body": "> Signed statements are not CWTs, unless the payload content type is a CBOR map that uses registered claim names.\r\n\r\nOk, in that case, what is the TS expected to do ? I mean, it seems to force the TS to take account of the content type when before it did not ?\r\n\r\n",
          "createdAt": "2023-10-09T15:50:14Z",
          "updatedAt": "2023-10-09T15:52:08Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "> Ok, in that case, what is the TS expected to do ? I mean, it seems to force the TS to take account of the content type when before it did not ?\r\n\r\nThe TS has a registration policy that answers this question.\r\n\r\ncontent type has always been a parameter the TS might use to deny a registration, for example, my TS might accept XML SBOMs and reject JSON ones, or vice versa.\r\n\r\nRegardless of how you structure the info in a protected header, the registration policy and the architecture document have to make this clear.\r\n\r\nIt seems easier to make it clear, by reusing other specs, that provide context for implementers.",
          "createdAt": "2023-10-09T16:33:12Z",
          "updatedAt": "2023-10-09T17:15:15Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Aligning with existing specs is \ud83d\udcaf part of the SCITT Charter.\r\nLooking a [CWT Subect](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.2)\r\n>  The \"sub\" (subject) claim identifies the principal that is the\r\n   subject of the JWT.  The claims in a JWT are normally statements\r\n   about the subject.  The subject value MUST either be scoped to be\r\n   locally unique in the context of the issuer or be globally unique.\r\n   The processing of this claim is generally application specific.  The\r\n   \"sub\" value is a case-sensitive string containing a StringOrURI\r\n   value.  Use of this claim is OPTIONAL.\r\n   \r\n This covers a few things we've discussed, such as:\r\n- `case-sensitivity` - which I personally find frustrating as someone trying to differentiate the difference between `a123` and `A123` is just creating a future frustration point for users that get confused why a query for one fails to find the other. However, specifying this is fine, and best practice would be to lowercase all ids- but I digress \ud83d\ude44 \r\n- `StringOrURI value` covers the various ways an issuer may choose to represent their Artifact Feed identifier.\r\n\r\nThe thing I'd like to test with this discussion is whether two or more parties can make statements about the same artifact.\r\n\r\n1. Wabbit Networks (_the identity_) releases their `net-monitor v1` software (_the Artifact_)\r\n1. Wabbit Networks publishes a Signed Statement using a `\"sub\": \"wabbitnetworks-netmonv3linux` and `\"iss\":=\"wabbitnetworks\"` on their `scitt.wabbit-networks.io` service. \r\n1. Wabbit Networks has an auditor publish a signed statement: `\"sub\": \"wabbitnetworks-netmonv3linux` and `\"iss\":=\"coyote-security\"` on the same `scitt.wabbit-networks.io` service.\r\n1. Cosmic security, Mitre and other independent publishers make statements about the same Artifact\r\n    - `\"sub\": \"wabbitnetworks-netmonv3linux` and `\"iss\":=\"cosmicsecurity\"` on their `scitt.cosmic-security.io` service. \r\n    - `\"sub\": \"wabbitnetworks-netmonv3linux` and `\"iss\":=\"mitre\"` on their `scitt.mitre.org` service. \r\n\r\nAs a consumer, ACME Rockets can\r\n- query the `scitt.wabbit-networks.io` service, to get statements associated with the net-monitor v1 software package. \r\n- query `scitt.mitre.org` for any public statements, using `\"sub\": \"wabbitnetworks-netmonv3linux` as the means to find statements from Mitre for the Wabbit Networks, net-monitor v1 software.\r\n- optionally query `scitt.cosmic-security.io` as they specialize in aerospace software, providing deeper insights for the specific aerospace vertical.\r\n\r\nACME Rockets (_the consumer_) can choose to trust the statements because they trust the independent identities making statements. Which endpoints they query is up to them. They could equally choose to NOT trust Coyote Security, (because who trusts the Coyote), or because they're not tailored to the unique needs Cosmic Security addresses.\r\n\r\nCan `subject` be used to independently identify a collection of statements about an artifact, independently from the issuer, and consistent across SCITT Transparency Service Instances?",
          "createdAt": "2023-10-09T22:09:34Z",
          "updatedAt": "2023-10-09T22:09:34Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "NONE",
          "body": "Ok, so I think I understand where this PR is trying to go. With respect I just don't agree with what I understand of its intent :-)\r\n\r\nIs there  something you can\u2019t achieve where the CWT is just binary encoded in the feed id ? Provided everyone agrees the envelope feed id is an opaque string nobody needs to refer to the combination of other standards and specific reg policies to get base line confidence over the context for a series of statements.\r\n\r\nI beleive having any structure in the feed id will gaurantee divergent and incompatible combinations of TS, issuer, series-of-statements. In particular, regarding the re-use of 'sub', I base this assertion on significant practical exposure to iss/sub in the context of identity providers & JWT's.\r\n\r\nIf we go the structured road we will lose the opportunity to define a single universal means to identify a complete series of statements in the envelope of the statement.\r\n\r\nWith a single property, defined as an opaque byte string, I believe we will get a simplicity that is enabling rather than limiting: On top of that base, richer interpretations can be built for TS's and issuers that wish to be mutualy content aware. And all TS implementations can guarantee a base level of utility before considering added value.\r\n\r\nYet consumers of those same feeds, regardless of origin, will still enjoy the base line ability to correlate the series of statements and demonstrate completeness and so on.\r\n\r\n> It seems easier to make it clear, by reusing other specs, that provide context for implementers.\r\n\r\nSpeaking as a prospective implementor I  feel the opposite.\r\n\r\n> Can subject be used to independently identify a collection of statements about an artifact, independently from the issuer, and consistent across SCITT Transparency Service Instances?\r\n\r\nProvided that its value is opaque to the TS for the purposes of defining the complete series, yes I believe so. And very much think this is a good thing to aim for.\r\n\r\nThat is my stall set out as clearly as I can make it :-)\r\n",
          "createdAt": "2023-10-10T08:58:08Z",
          "updatedAt": "2023-10-10T09:02:03Z"
        },
        {
          "author": "sylvanc",
          "authorAssociation": "NONE",
          "body": "I left some comments in #104 related to this. tl;dr: I agree with @robinbryce that a `feed` defines an unbounded sequence of statements made for the same purpose.\r\n\r\nObviously, any tag can be reused to mean anything you like. We can declare that `sub` means `feed`. That may require significant documentation to dissuade people from putting the a subject into `sub` instead.\r\n\r\nDo I understand that the intention is to not put `iss` at the top level, but to embed it in `CWT_claims` ? Is the goal there for existing CWT relying parties to accept these?",
          "createdAt": "2023-10-11T14:35:18Z",
          "updatedAt": "2023-10-11T14:35:18Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixes #11 ",
          "createdAt": "2023-10-18T16:29:40Z",
          "updatedAt": "2023-10-18T16:29:40Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kc8WZ",
          "commit": {
            "abbreviatedOid": "1a9af1f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Feedback to prep this for a vote for using CWT as defined here, or replacing Feed with Subject (without CTW)",
          "createdAt": "2023-10-18T14:51:22Z",
          "updatedAt": "2023-10-18T14:57:48Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\n```\r\n",
              "createdAt": "2023-10-18T14:51:22Z",
              "updatedAt": "2023-10-18T14:57:48Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-10-18T14:51:31Z",
              "updatedAt": "2023-10-18T14:57:48Z"
            },
            {
              "originalPosition": 8,
              "body": "I was going to suggest removing:\r\n> , throughout this spec, this is also called feed.\r\n\r\nand use a separate PR to replace Feed with Subject. \r\nTo keep this PR isolated to these changes, I'd leave this sentence and cleanup in another PR: Update Feed to be Subject",
              "createdAt": "2023-10-18T14:54:49Z",
              "updatedAt": "2023-10-18T14:57:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kwVAV",
          "commit": {
            "abbreviatedOid": "0a6db22"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T16:01:19Z",
          "updatedAt": "2023-10-20T16:01:20Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I object to removing this, until a later date... there is still too much confusion, keep this for now.",
              "createdAt": "2023-10-20T16:01:20Z",
              "updatedAt": "2023-10-20T16:01:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kwl_X",
          "commit": {
            "abbreviatedOid": "0a6db22"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T16:26:55Z",
          "updatedAt": "2023-10-20T16:26:55Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n  2 => tstr; sub, the subject about which the statements are made, throughout this spec, this is also called feed.\r\n```",
              "createdAt": "2023-10-20T16:26:55Z",
              "updatedAt": "2023-10-20T16:26:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kwn9v",
          "commit": {
            "abbreviatedOid": "4d414a4"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T16:29:48Z",
          "updatedAt": "2023-10-20T16:29:48Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "why is 393 still in, when there is 13 in?",
              "createdAt": "2023-10-20T16:29:48Z",
              "updatedAt": "2023-10-20T16:29:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kwpqU",
          "commit": {
            "abbreviatedOid": "4d414a4"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Reg_Info is still out of place here, but I can accept that is incremental progress",
          "createdAt": "2023-10-20T16:32:11Z",
          "updatedAt": "2023-10-20T16:32:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kw5e-",
          "commit": {
            "abbreviatedOid": "4d414a4"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\nIncremental progress, with #107, #114 coming in as well.",
          "createdAt": "2023-10-20T16:52:16Z",
          "updatedAt": "2023-10-20T16:52:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 110,
      "id": "PR_kwDOIvmHss5cx1rU",
      "title": "Kramdown format fixes, including width of code blocks - IETF Datatracker Update",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/110",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR is intended to update https://datatracker.ietf.org/doc/draft-ietf-scitt-architecture/ as the current version has broken codeblock formatting and no longer reflects the current state of the draft\r\n\r\n- https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html#section-5.1.1.1-5\r\n- https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html#section-5.1.1.1.1-8\r\n- https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html#section-5.1.1.1.1-9\r\n- https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html#section-5.1.1.2-8\r\n- https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html#section-5.1.1.2-9\r\n ",
      "createdAt": "2023-10-13T22:42:54Z",
      "updatedAt": "2023-10-16T15:54:25Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "37dbbc686c529bdc89765f18e8fafd20b732f387",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "format-width-fixes",
      "headRefOid": "44ccf1476290e2de51c21d1c963463b869a8d181",
      "closedAt": "2023-10-16T15:40:24Z",
      "mergedAt": "2023-10-16T15:40:24Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "512b43a01341759fdc1a0d25b63e06d2add1e1b9"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I looked through the changes and they are fine.\r\nThanks for fixing the over-long lines in the examples.",
          "createdAt": "2023-10-16T14:41:23Z",
          "updatedAt": "2023-10-16T14:41:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kJ_ny",
          "commit": {
            "abbreviatedOid": "8f77ee8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": ":ship: it",
          "createdAt": "2023-10-16T15:38:35Z",
          "updatedAt": "2023-10-16T15:38:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kJ_8Q",
          "commit": {
            "abbreviatedOid": "8f77ee8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T15:39:14Z",
          "updatedAt": "2023-10-16T15:39:14Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n2. Such Statements must be registered on a secure append-only Log, so that their provenance and history can be independently and consistently audited\r\n3. Issuers can efficiently prove to any other party the Registration of their Signed Statements; verifying this proof ensures that the Issuer is consistent and non-equivocal when producing Signed Statements\r\n```",
              "createdAt": "2023-10-16T15:39:14Z",
              "updatedAt": "2023-10-16T15:39:15Z"
            }
          ]
        }
      ]
    },
    {
      "number": 111,
      "id": "PR_kwDOIvmHss5c1SpL",
      "title": "Change Feed label 392 to bstr, representing an opaque series of bytes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/111",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This attempts to resolve the balance between a generic string and a structured string for how issuers and verifiers can identify \"a sequence of Signed Statements about the same Artifact.\", as [currently defined](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md?plain=1#L189)\r\n\r\nChanging to `bstr` enables an issuer to set the `Feed` to be a `sub`, and it also allows an issuer to use other identifier formats. \r\n\r\nThere's a great suggestion to use `sub`, as part of the CTW (PR #108). And at first it looks fairly simple.\r\n```cddl\r\nCWT_Claims = {\r\n  1 => tstr; iss, the issuer that is making statements\r\n  2 -> tstr; sub, the subject about which the statements are made, throughout this spec, this is also called feed.\r\n * tstr => any\r\n}\r\n```\r\n\r\nThe challenge is a CWT_Claim is far more expressive [as defined](https://www.iana.org/assignments/cwt/cwt.xhtml)\r\n\r\nFor an issuer and a verifier to clearly identify the specific artifact they are referencing with CWT_Claims, it would be both powerful and confusing for an issuer to specify which CWT_Claims properties they were using to identify the feed.\r\n\r\nAn issuer could add: \r\n\r\n```cddl\r\nCWT_Claims = {\r\n  1 => tstr; iss, the issuer that is making statements\r\n  2 -> tstr; sub, the subject about which the statements are made, throughout this spec, this is also called feed.\r\n  256 -> bstr; ueid, The Universal Entity ID \r\n  260 -> array; hwversion, the Hardware Version Identifier\r\n  2395 -> uint; psa-security-lifecycle, PSA Security Lifecycle\t\r\n   * tstr => any\r\n}\r\n```\r\n\r\nUsing the text in PR #103, changing the Feed to `bstr`, makes it clear the Feed is:\r\n\r\n> Feed:\r\n> : a logical collection of Statements about the same Artifact.\r\n> For any step or set of steps in a supply chain there will be multiple statements made about the same Artifact. Issuers use the Feed to create a coherent sequence of Signed Statements about the same Artifact and Verifiers use the Feed to ensure completeness and non-equivocation in supply chain evidence by identifying all Transparent Statements linked to the one(s) they are evaluating.\r\nFixe #11 ",
      "createdAt": "2023-10-15T15:41:11Z",
      "updatedAt": "2023-10-20T18:07:30Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "37dbbc686c529bdc89765f18e8fafd20b732f387",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "feed_as_bstr",
      "headRefOid": "b1e72c7b34df021160d4891bbe80546b9e50c6c7",
      "closedAt": "2023-10-20T18:07:30Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "robinbryce",
          "authorAssociation": "NONE",
          "body": "LGTM",
          "createdAt": "2023-10-16T15:12:02Z",
          "updatedAt": "2023-10-16T15:12:02Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, in lieu of #108 ",
          "createdAt": "2023-10-20T18:07:30Z",
          "updatedAt": "2023-10-20T18:07:30Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kEXpp",
          "commit": {
            "abbreviatedOid": "b1e72c7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-15T20:29:02Z",
          "updatedAt": "2023-10-15T20:29:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kdGZx",
          "commit": {
            "abbreviatedOid": "b1e72c7"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-18T15:06:33Z",
          "updatedAt": "2023-10-18T15:06:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 113,
      "id": "PR_kwDOIvmHss5dAcIl",
      "title": "Proposal to rephrase the Reg_Info definition",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/113",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Fixes #112 ",
      "createdAt": "2023-10-17T11:46:31Z",
      "updatedAt": "2023-10-23T23:23:37Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "512b43a01341759fdc1a0d25b63e06d2add1e1b9",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "reg-info-patch1",
      "headRefOid": "3694890a62b8c77afa42f5655da0e116ede2ac9a",
      "closedAt": "2023-10-18T15:20:04Z",
      "mergedAt": "2023-10-18T15:20:04Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "c02c19372d242fcf000310522c2926f7aff3edd6"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Good clarification, with a few nits to reduce and clarify the text",
          "createdAt": "2023-10-18T00:07:47Z",
          "updatedAt": "2023-10-18T00:07:47Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "All edits have been addressed. I believe this is ready for merging.",
          "createdAt": "2023-10-18T14:50:08Z",
          "updatedAt": "2023-10-18T14:50:08Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> I would prefer \"The key/value pair semantics are application-specific, or even possibly specified by each Issuer for each of their Feed.\" but I am fine with both formulations. Thanks.\r\n\r\nThanks, @fournet \r\nSounds like we can address this suggestion separately and we can merge this as-is ",
          "createdAt": "2023-10-18T15:19:52Z",
          "updatedAt": "2023-10-18T15:19:52Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kWrR2",
          "commit": {
            "abbreviatedOid": "ec0464e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T00:02:40Z",
          "updatedAt": "2023-10-18T00:02:41Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n- Registration Policy info (label: `TBD`, temporary: `393`): A map containing key/value pairs set by the Issuer which are sealed on Registration and non-opaque to the Transparency Service. The key/value pair semantics are specified by each Issuer or are specific to the Issuer and Feed tupel. Examples include: the sequence number of signed statements on a feed, Issuer metadata, or a reference to other transparent statements (e.g., augments, replaces, new-version, CPE-for).\r\n```",
              "createdAt": "2023-10-18T00:02:41Z",
              "updatedAt": "2023-10-18T00:02:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kWrs4",
          "commit": {
            "abbreviatedOid": "ec0464e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T00:04:32Z",
          "updatedAt": "2023-10-18T00:04:32Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n: the process of submitting a Signed Statement to a Transparency Service, applying the Transparency Service's Registration Policy, storing the Signed Statement in the Registry, producing a Receipt, and returning it to the submitting Issuer.\r\n```\r\nClarified \"it\" to be the signed statement, and not which policy was applied. \r\nAlthough, we should clarify if each statement references the policy(s) applied, or does the SCITT service make entries when a policy changes?",
              "createdAt": "2023-10-18T00:04:32Z",
              "updatedAt": "2023-10-18T00:04:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kWryS",
          "commit": {
            "abbreviatedOid": "ec0464e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T00:05:05Z",
          "updatedAt": "2023-10-18T00:05:05Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-10-18T00:05:05Z",
              "updatedAt": "2023-10-18T00:05:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kWrz5",
          "commit": {
            "abbreviatedOid": "ec0464e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T00:05:16Z",
          "updatedAt": "2023-10-18T00:05:16Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-10-18T00:05:16Z",
              "updatedAt": "2023-10-18T00:05:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kWr1x",
          "commit": {
            "abbreviatedOid": "ec0464e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T00:05:28Z",
          "updatedAt": "2023-10-18T00:05:29Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Removing 2 extra blank lines",
              "createdAt": "2023-10-18T00:05:29Z",
              "updatedAt": "2023-10-18T00:05:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kXD5O",
          "commit": {
            "abbreviatedOid": "ec0464e"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T01:57:52Z",
          "updatedAt": "2023-10-18T01:57:52Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Very minor nit: tuple, not tupel in \"to the Issuer and Feed tupel.\" Otherwise, it makes content a little clearer for me.",
              "createdAt": "2023-10-18T01:57:52Z",
              "updatedAt": "2023-10-18T11:55:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kaNFc",
          "commit": {
            "abbreviatedOid": "f7fa9f3"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Great improvement, a couple of small suggestions",
          "createdAt": "2023-10-18T09:38:48Z",
          "updatedAt": "2023-10-18T09:43:25Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n- Registration Policy info (label: `TBD`, temporary: `393`): A map containing key/value pairs provided and controlled by the Issuer that are sealed on Registration and non-opaque to the Transparency Service. The key/value pair semantics are specified by each individual Issuer or are specific to the Issuer and Feed tuple. Examples include: sequence number of signed statement on feed, Issuer metadata, or reference to other transparent statements (e.g., augments, replaces, new-version, CPE-for).\r\n```",
              "createdAt": "2023-10-18T09:38:48Z",
              "updatedAt": "2023-10-18T09:43:25Z"
            },
            {
              "originalPosition": 11,
              "body": "We have the principle of 'long running operations' in SCITT and in order to be practical we can't define an API or components that block for the time it takes to settle or achieve finality on certain kinds of ledger systems. IN order to avoid the implication that Registration is a single atomic operation that starts with a Signed Statement and ends with a final Receipt. This suggestion still compels the TS to produce the receipt, but it can then be returned, or later fetched, depending on implementation.\r\n\r\n```suggestion\r\n: the process of submitting a Signed Statement to a Transparency Service, applying the Transparency Service's Registration Policy, storing the Signed Statement in the Registry, and producing a Receipt.\r\n```",
              "createdAt": "2023-10-18T09:43:08Z",
              "updatedAt": "2023-10-18T09:43:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kcsej",
          "commit": {
            "abbreviatedOid": "b24df6a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T14:25:53Z",
          "updatedAt": "2023-10-18T14:25:54Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n- Registration Policy info (label: `TBD`, temporary: `393`): A map containing key/value pairs set by the Issuer which are sealed on Registration and non-opaque to the Transparency Service. The key/value pair semantics are specified by each Issuer or are specific to the Issuer and Feed tuple. Examples include: the sequence number of signed statements on a feed, Issuer metadata, or a reference to other transparent statements (e.g., augments, replaces, new-version, CPE-for).\r\n```",
              "createdAt": "2023-10-18T14:25:53Z",
              "updatedAt": "2023-10-18T14:25:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kc-bw",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-10-18T14:54:51Z",
          "updatedAt": "2023-10-18T14:54:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kdAnI",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM as it addresses all feedback and clarifies the conversations",
          "createdAt": "2023-10-18T14:58:35Z",
          "updatedAt": "2023-10-18T14:58:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kdDx7",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I would prefer \"The key/value pair semantics are application-specific, or even possibly specified by each Issuer for each of their Feed.\" but I am fine with both formulations. Thanks. ",
          "createdAt": "2023-10-18T15:03:59Z",
          "updatedAt": "2023-10-18T15:03:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kdEqZ",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T15:05:32Z",
          "updatedAt": "2023-10-18T15:05:33Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n: the process of submitting a Signed Statement to a Transparency Service, applying the Transparency Service's Registration Policy, and producing a Receipt.\r\n```",
              "createdAt": "2023-10-18T15:05:32Z",
              "updatedAt": "2023-10-18T15:05:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kdG7m",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T15:06:50Z",
          "updatedAt": "2023-10-18T15:06:50Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The registry might not store the signed statement... it might only store a \"leaf\" or \"hash\" of it... it only needs to store what is needed to produce the receipt.",
              "createdAt": "2023-10-18T15:06:50Z",
              "updatedAt": "2023-10-18T15:06:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kdIUz",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-18T15:07:37Z",
          "updatedAt": "2023-10-18T15:07:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kdPuY",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T15:16:45Z",
          "updatedAt": "2023-10-18T15:16:46Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Good catch",
              "createdAt": "2023-10-18T15:16:46Z",
              "updatedAt": "2023-10-18T15:16:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 114,
      "id": "PR_kwDOIvmHss5dKJ2Y",
      "title": "Rename Feed to Subject",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/114",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "PR addressing the conversation around Feed is redundant with Subject, as defined in CWT\r\n- [3.1.2.  sub (Subject) Claim](https://www.rfc-editor.org/rfc/rfc8392.html#section-3.1.2)\r\n    >    The \"sub\" (subject) claim has the same meaning and processing rules\r\n    >    as the \"sub\" claim defined in Section 4.1.2 of [RFC7519], except that\r\n    >    the value is a StringOrURI, as defined in Section 2 of this\r\n    >    specification.  The Claim Key 2 is used to identify this claim.\r\n- [4.1.2.  \"sub\" (Subject) Claim](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.2)\r\n    >    The \"sub\" (subject) claim identifies the principal that is the\r\n    >    subject of the JWT.  The claims in a JWT are normally statements\r\n    >    about the subject.  The subject value MUST either be scoped to be\r\n    >    locally unique in the context of the issuer or be globally unique.\r\n    >    The processing of this claim is generally application specific.  The\r\n    >    \"sub\" value is a case-sensitive string containing a StringOrURI\r\n    >    value.  Use of this claim is OPTIONAL.\r\n\r\nThis PR intentionally contrasts #108\r\n\r\nChoice for folks to vote upon:\r\n\r\n- [ ] Rename Feed to Subject\r\n- [ ] Should we also include CWT_Claims, which contains the subject #108 \r\n\r\nFixes #11 ",
      "createdAt": "2023-10-18T15:47:17Z",
      "updatedAt": "2023-10-20T18:06:53Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0f5dc15c8c0f2d0372ab73e5f8d3f9b677b59210",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "feed-becomes-subject",
      "headRefOid": "a8fed6ba50b710bef8e3695e281b964d83bc4521",
      "closedAt": "2023-10-20T18:06:53Z",
      "mergedAt": "2023-10-20T18:06:53Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "40dc274de6b72b476be88938bc5a008d6afb4d1c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kdp83",
          "commit": {
            "abbreviatedOid": "52d8851"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-18T16:03:52Z",
          "updatedAt": "2023-10-18T16:03:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kdrY7",
          "commit": {
            "abbreviatedOid": "52d8851"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "One small but important nit ",
          "createdAt": "2023-10-18T16:06:46Z",
          "updatedAt": "2023-10-18T16:08:19Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "...to which the statement _refers_, surely?",
              "createdAt": "2023-10-18T16:06:46Z",
              "updatedAt": "2023-10-18T16:08:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kd1Zz",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-10-18T16:22:13Z",
          "updatedAt": "2023-10-18T16:22:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kd4tD",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T16:26:01Z",
          "updatedAt": "2023-10-18T16:26:01Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "Does the subject (old feed) is mandatory?\r\n\r\n",
              "createdAt": "2023-10-18T16:26:01Z",
              "updatedAt": "2023-10-18T16:26:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kd6fH",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T16:27:55Z",
          "updatedAt": "2023-10-18T16:27:56Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "I didn't make that explicit change, but yes an issuer of a signed statement must have a subject. ",
              "createdAt": "2023-10-18T16:27:55Z",
              "updatedAt": "2023-10-18T16:27:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kd8YR",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-10-18T16:30:02Z",
          "updatedAt": "2023-10-18T16:30:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kp1j-",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T21:28:39Z",
          "updatedAt": "2023-10-19T21:28:53Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "Isn't 2 'crit`? Shouldn't 'sub' be nested in a 13 (see https://www.ietf.org/archive/id/draft-ietf-cose-cwt-claims-in-headers-06.html#name-representation)?",
              "createdAt": "2023-10-19T21:28:39Z",
              "updatedAt": "2023-10-19T21:30:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kqQ8P",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T22:36:07Z",
          "updatedAt": "2023-10-19T22:36:07Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "Ahh, yes, I incorrectly pulled `2` from the CWT spec. \r\nIn this PR, we're not pulling in CWT. That is deferred to #108\r\nThis PR renames `Feed` to `Subject`, aligning with the definition of Subject, within CWT. \r\nCan we agree with this incremental step? If so, what tag should we use? I can repurpose 392, but I think we agree [cbor-tags](https://www.iana.org/assignments/cbor-tags/cbor-tags.xhtml) should have a common tag  for `subject`, which is outside the scope of this PR.\r\n\r\n- Do we agree with the rename?\r\n- What CBOR tag should we use?",
              "createdAt": "2023-10-19T22:36:07Z",
              "updatedAt": "2023-10-19T22:36:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kvbeS",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T14:20:31Z",
          "updatedAt": "2023-10-20T14:20:31Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "To unblock, I've set the label to 392 (previous temporary label), as a `bytestring`, similar to #111. This unblocks the rename, with the ability to relax to `string` if we decide, or possibly shift to a CWT (#108). ",
              "createdAt": "2023-10-20T14:20:31Z",
              "updatedAt": "2023-10-20T14:20:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kvc8k",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T14:22:35Z",
          "updatedAt": "2023-10-20T14:22:35Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "Above reference is outdated. Please see updated [line 658](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/114/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R658)\r\n> `392 => bstr            ; Subject`",
              "createdAt": "2023-10-20T14:22:35Z",
              "updatedAt": "2023-10-20T14:22:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxZwU",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:02:36Z",
          "updatedAt": "2023-10-20T18:02:36Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "With #108 merged, removing this entry. ",
              "createdAt": "2023-10-20T18:02:36Z",
              "updatedAt": "2023-10-20T18:02:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 115,
      "id": "PR_kwDOIvmHss5dZ77C",
      "title": "Adding Orie as a Contributor",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/115",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-20T17:06:20Z",
      "updatedAt": "2023-10-23T23:23:26Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0f5dc15c8c0f2d0372ab73e5f8d3f9b677b59210",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "dragging-orie-into-this",
      "headRefOid": "5906d79945eb5b974133740b127f2a930ef0eb38",
      "closedAt": "2023-10-23T21:26:51Z",
      "mergedAt": "2023-10-23T21:26:51Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "628504c60f9502468da32a50421a6c28626c76d9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kxDtY",
          "commit": {
            "abbreviatedOid": "fed0abe"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-20T17:13:20Z",
          "updatedAt": "2023-10-20T17:13:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kx2ty",
          "commit": {
            "abbreviatedOid": "fed0abe"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:25:12Z",
          "updatedAt": "2023-10-20T19:25:12Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-10-20T19:25:12Z",
              "updatedAt": "2023-10-20T19:25:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kx20-",
          "commit": {
            "abbreviatedOid": "5906d79"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-10-20T19:25:36Z",
          "updatedAt": "2023-10-20T19:25:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 118,
      "id": "PR_kwDOIvmHss5dbVz2",
      "title": "Cleanup for 118",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/118",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "General edits, cleanup of terminology, consistency, clarity, and chopping extra words, sentences and paragraphs to make it more consumable. \r\n\r\n**Guided by the \"Less is more\"** theory\r\n\r\nIf you feel something should be un-deleted, please quantify why it's so important and/or unique. \r\n",
      "createdAt": "2023-10-20T23:35:56Z",
      "updatedAt": "2023-10-23T23:23:18Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e9bd8209be9085a6dcb5a935e5cba5a676c75835",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "cleanup-for-118",
      "headRefOid": "1d8251f9b8581a179eaa34a4d2ead384ad3c168d",
      "closedAt": "2023-10-23T19:53:03Z",
      "mergedAt": "2023-10-23T19:53:03Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "a1f98906191bb7bd15293957c01707c82fba6426"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Ready for review, before submission to the datatracker by Sunday evening PST",
          "createdAt": "2023-10-21T16:13:50Z",
          "updatedAt": "2023-10-21T16:56:57Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Delta from 117: https://author-tools.ietf.org/api/iddiff?url_1=https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.txt&url_2=https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/cleanup-for-118/draft-ietf-scitt-architecture.txt",
          "createdAt": "2023-10-21T16:57:02Z",
          "updatedAt": "2023-10-21T16:57:02Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "The HTML view of the \"Editors copy\" for this PR: https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/cleanup-for-118/draft-ietf-scitt-architecture.html",
          "createdAt": "2023-10-23T15:41:23Z",
          "updatedAt": "2023-10-23T15:41:23Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker These are very involved set of changes, which will need time to review properly. My personal take but we should not  rush to make it to IETF 118, until all other authors approve of the change!",
          "createdAt": "2023-10-23T17:47:39Z",
          "updatedAt": "2023-10-23T17:47:39Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> @SteveLasker These are very involved set of changes, which will need time to review properly. My personal take but we should not rush to make it to IETF 118, until all other authors approve of the change!\r\n\r\n@yogeshbdeshpande  I appreciate the feedback. We have been asking for feedback for several days and we're now at the deadline. Without merging this content, we're asking the rest of IETF community to not benefit from the cleaned up consistency across the document.  As editor, the consistency of the doc as a stable reference point provides more clarity for the consumer. As it's still a draft, we will continue to take feedback, but we really need to publish the best version we have. The version prior to this change has duplicate, inconsistent references.",
          "createdAt": "2023-10-23T19:51:58Z",
          "updatedAt": "2023-10-23T19:51:58Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kyz1x",
          "commit": {
            "abbreviatedOid": "732bb69"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-21T01:22:54Z",
          "updatedAt": "2023-10-21T01:22:54Z",
          "comments": [
            {
              "originalPosition": 400,
              "body": "This section was duped, and out of sync with [line 689](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/118/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R689)",
              "createdAt": "2023-10-21T01:22:54Z",
              "updatedAt": "2023-10-21T01:22:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kzPhq",
          "commit": {
            "abbreviatedOid": "4bc31c9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-21T04:02:08Z",
          "updatedAt": "2023-10-21T04:02:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5k5xem",
          "commit": {
            "abbreviatedOid": "c55fe1a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I filed https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/120 based on discussion on the call... I suggest additional issue markers be filed, and this PR be merged.",
          "createdAt": "2023-10-23T15:23:11Z",
          "updatedAt": "2023-10-23T15:23:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5k6AN3",
          "commit": {
            "abbreviatedOid": "c55fe1a"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Minor grammar and capitalization issues, but otherwise looks good. I will continue reading and point out anything more serious by 4:59 PT, oh well, I have not been so useful. Thus far, improvements look good to me, but more to follow.",
          "createdAt": "2023-10-23T15:51:28Z",
          "updatedAt": "2023-10-23T16:10:33Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Minor, non-blocking: producer is not capitalized like producer, is this a problem re capitalization discussion during today's interim meeting?\r\n\r\n```suggestion\r\nWithin the SCITT Architecture, a Producer is known as an Issuer, and a Consumer is known as a Verifier.\r\n```\r\n\r\nOr perhaps it is the opposite, with both lower-case producer and consumer, but this seems unlikely given the document.",
              "createdAt": "2023-10-23T15:51:28Z",
              "updatedAt": "2023-10-23T16:10:33Z"
            },
            {
              "originalPosition": 55,
              "body": "Minor, non-blocking: the range is ...\r\n\r\n```suggestion\r\nHowever, the range of use cases and applications in this document is broader, which requires more flexibility in how each Transparency Service is implemented and operates.\r\n```",
              "createdAt": "2023-10-23T15:57:26Z",
              "updatedAt": "2023-10-23T16:10:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5k62u8",
          "commit": {
            "abbreviatedOid": "db310e7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T17:44:06Z",
          "updatedAt": "2023-10-23T17:44:07Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "```suggestion\r\n1. **Issuers**: organizations, stakeholders, and users involved in creating or attesting to supply chain artifacts, releasing authentic Statements to a definable set of peers\r\n```",
              "createdAt": "2023-10-23T17:44:06Z",
              "updatedAt": "2023-10-23T17:44:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5k63Fl",
          "commit": {
            "abbreviatedOid": "db310e7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T17:44:42Z",
          "updatedAt": "2023-10-23T17:44:42Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "I would retain stakeholders as consumers sounds contradictory to Issuers",
              "createdAt": "2023-10-23T17:44:42Z",
              "updatedAt": "2023-10-23T17:44:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5k73-y",
          "commit": {
            "abbreviatedOid": "db310e7"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T19:52:40Z",
          "updatedAt": "2023-10-23T19:52:40Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "I just realized we added consumers to issuers, as opposed to Verifiers. I've fixed in this PR",
              "createdAt": "2023-10-23T19:52:40Z",
              "updatedAt": "2023-10-23T19:52:40Z"
            }
          ]
        }
      ]
    },
    {
      "number": 119,
      "id": "PR_kwDOIvmHss5di0p3",
      "title": "Adding \"Consumers\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/119",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T15:18:08Z",
      "updatedAt": "2023-10-23T23:23:47Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "cleanup-for-118",
      "baseRefOid": "c55fe1a7245febab3064f3e8c8c8290070786e8d",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "45056e6b40879e1dd94ee7941b2ddc1c159f7267",
      "closedAt": "2023-10-23T17:11:22Z",
      "mergedAt": "2023-10-23T17:11:22Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "a3eaa85731579fdad97c46f7d2502cc463ab658c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5k6mDw",
          "commit": {
            "abbreviatedOid": "45056e6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM,\r\nThanks, @hannestschofenig. the stakeholders to consumers looks like a great change. I don't know if we'd keep both, or replace. I'll merge this to keep moving forward.\r\nAlso, thanks for the catch on CBOR ",
          "createdAt": "2023-10-23T17:11:11Z",
          "updatedAt": "2023-10-23T17:11:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 121,
      "id": "PR_kwDOIvmHss5djKgF",
      "title": "Add references to the format list",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/121",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T16:11:24Z",
      "updatedAt": "2023-10-23T20:15:35Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "a1f98906191bb7bd15293957c01707c82fba6426",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "references",
      "headRefOid": "45391321f34c4e2f644a375ec5be2468c4337d6b",
      "closedAt": "2023-10-23T20:15:28Z",
      "mergedAt": "2023-10-23T20:15:28Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "ff7fffea52e9986666eca62af2a3eef61ba8254e"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker Please take it before making a draft cutoff for IETF today, if there is enough concensus among co-authors!",
          "createdAt": "2023-10-23T16:15:11Z",
          "updatedAt": "2023-10-23T16:15:11Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "To minimize the merge conflicts, I'll merge after PR #118, before the IETF deadline today",
          "createdAt": "2023-10-23T17:09:17Z",
          "updatedAt": "2023-10-23T17:09:52Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@yogeshbdeshpande, if you wanted to re-target the PR to the  https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/tree/cleanup-for-118 branch, I can merge right away",
          "createdAt": "2023-10-23T17:12:22Z",
          "updatedAt": "2023-10-23T17:12:22Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker : lets merge for 118.",
          "createdAt": "2023-10-23T17:13:55Z",
          "updatedAt": "2023-10-23T17:15:43Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@yogeshbdeshpande, yes, that's the plan. Your PR will conflict with PR #118 as I re-ordered the list alphabetically. \r\nI was suggesting could re-target the PR against the https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/tree/cleanup-for-118 branch, I could just merge without conflicts.\r\nI could also just copy/paste your edits, but that wouldn't show your contribution in git history.",
          "createdAt": "2023-10-23T17:28:47Z",
          "updatedAt": "2023-10-23T17:28:47Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "ok, please merge your PR and then I will Rebase my (this) PR",
          "createdAt": "2023-10-23T17:38:31Z",
          "updatedAt": "2023-10-23T17:38:31Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5k6NYV",
          "commit": {
            "abbreviatedOid": "0a6c155"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Minor nits around spacing and a URL update (pretending I understand my employer).",
          "createdAt": "2023-10-23T16:17:38Z",
          "updatedAt": "2023-10-23T16:22:39Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I will venture a guess that you can be more specific if you point to either.\r\n\r\nThe NIST specifications:\r\n\r\n```suggestion\r\n    target: https://csrc.nist.gov/Projects/Software-Identification-SWID/guidelines\r\n```\r\n\r\nOr the referenced ISO specifications, which is what NIST recommends you do on the changed link above.\r\n\r\n> The SWID Tag format, defined by the International Organization for Standardization (ISO) and the International Electrotechnical Commission (IEC) standard ISO/IEC 19770-2, is a structured metadata format for describing a software product. NIST recommends use of the latest version of this standard, [ISO/IEC 19770-2:2015](https://webstore.ansi.org/RecordDetail.aspx?sku=ISO%2fIEC+19770-2%3a2015).\r\n\r\n```suggestion\r\n    target: https://www.iso.org/standard/65666.html\r\n```",
              "createdAt": "2023-10-23T16:17:39Z",
              "updatedAt": "2023-10-23T16:22:39Z"
            },
            {
              "originalPosition": 5,
              "body": "Is there a reason for the double space?\r\n\r\n```suggestion\r\n    title: did:web Decentralized Identifiers Method Spec\r\n```",
              "createdAt": "2023-10-23T16:22:09Z",
              "updatedAt": "2023-10-23T16:22:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5k6lHM",
          "commit": {
            "abbreviatedOid": "c154c5b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-10-23T17:08:49Z",
          "updatedAt": "2023-10-23T17:08:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5k6zpl",
          "commit": {
            "abbreviatedOid": "c154c5b"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T17:38:27Z",
          "updatedAt": "2023-10-23T17:38:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5k7Kz_",
          "commit": {
            "abbreviatedOid": "c154c5b"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thanks for adding the references.\r\n\r\nI am not sure whether you can indeed add them in this style but you can try. I would just use this style:\r\n\r\nSLSA {{SLSA}}",
          "createdAt": "2023-10-23T18:26:34Z",
          "updatedAt": "2023-10-23T18:26:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 122,
      "id": "PR_kwDOIvmHss5dlUe-",
      "title": "Update references for datatracker submission",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/122",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T22:52:24Z",
      "updatedAt": "2023-10-23T23:23:01Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "628504c60f9502468da32a50421a6c28626c76d9",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "submission-update",
      "headRefOid": "c31249dc691e39f3a3ae6b12da1dbba925208ff1",
      "closedAt": "2023-10-23T22:53:12Z",
      "mergedAt": "2023-10-23T22:53:12Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "d0fb2231337ef6b4c499b98e585e86a5adf7013b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 123,
      "id": "PR_kwDOIvmHss5dptHs",
      "title": "Address Receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/123",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR makes it clearer that merkle trees are not required, and what the structure of a receipt is.",
      "createdAt": "2023-10-24T14:55:48Z",
      "updatedAt": "2023-10-26T19:46:43Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d0fb2231337ef6b4c499b98e585e86a5adf7013b",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "fix/remove-merkle-assumptions",
      "headRefOid": "97e532b6814d909890d65d97446eb466ef650580",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "robinbryce",
          "authorAssociation": "NONE",
          "body": "Just to be clear, we very much appreciate the work on the cose merkle proof format and intend to use that by default where we can.",
          "createdAt": "2023-10-24T16:33:43Z",
          "updatedAt": "2023-10-24T16:33:43Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "NONE",
          "body": "And also of course, LGTM",
          "createdAt": "2023-10-24T16:35:06Z",
          "updatedAt": "2023-10-24T16:35:06Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "If you approved this PR, you should probably review and approve https://github.com/cose-wg/draft-ietf-cose-merkle-tree-proofs/pull/8 ",
          "createdAt": "2023-10-24T21:04:18Z",
          "updatedAt": "2023-10-24T21:04:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5lDTZN",
          "commit": {
            "abbreviatedOid": "913c7e1"
          },
          "author": "dmitrizagidulin",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": ":+1: ",
          "createdAt": "2023-10-24T16:25:58Z",
          "updatedAt": "2023-10-24T16:25:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5lFQIC",
          "commit": {
            "abbreviatedOid": "5311caa"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-24T21:03:07Z",
          "updatedAt": "2023-10-24T21:03:07Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "if we dare, we can make this an actual well known software supply chain media type",
              "createdAt": "2023-10-24T21:03:07Z",
              "updatedAt": "2023-10-24T21:03:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOc2-",
          "commit": {
            "abbreviatedOid": "5311caa"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "I might have some mistakes, as I was lazily using the github review/suggestion feature.",
          "createdAt": "2023-10-25T21:32:20Z",
          "updatedAt": "2023-10-25T21:47:33Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "```suggestion\r\n  2 => tstr; sub, the subject\r\n```\r\nSo close :-)",
              "createdAt": "2023-10-25T21:32:20Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 169,
              "body": "So this is a transitional version, where we have to decide what the difference between 13 and 393 is?",
              "createdAt": "2023-10-25T21:33:33Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 168,
              "body": "Not sure how happy everybody going for \"simplicity\" will be with optional attributes in the protected header.",
              "createdAt": "2023-10-25T21:35:11Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 178,
              "body": "a header map",
              "createdAt": "2023-10-25T21:36:36Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 164,
              "body": "type name conflict with line 910. This one should probably be:\r\n\r\n```suggestion\r\nSigned_Statement_Protected_Header = {\r\n```",
              "createdAt": "2023-10-25T21:38:30Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 177,
              "body": "a CBOR data item including the protected header map. Probably should be:\r\n\r\n```suggestion\r\n    protected : bstr .cbor Signed_Statement_Protected_Header / bstr .size 0 \r\n```",
              "createdAt": "2023-10-25T21:41:19Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 102,
              "body": "```suggestion\r\n\r\nlabel = int / tstr\r\nvalue = any\r\n\r\nInclusion_Proofs = [ + bstr ]\r\n```",
              "createdAt": "2023-10-25T21:45:51Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 120,
              "body": "```suggestion\r\n  * label => value\r\n```",
              "createdAt": "2023-10-25T21:46:09Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 161,
              "body": "```suggestion\r\n  * label => value\r\n```",
              "createdAt": "2023-10-25T21:46:31Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOh1Q",
          "commit": {
            "abbreviatedOid": "51ca52f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T21:51:19Z",
          "updatedAt": "2023-10-25T21:51:20Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "Yep, not trying to fix everything at once.",
              "createdAt": "2023-10-25T21:51:20Z",
              "updatedAt": "2023-10-25T21:51:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOiJs",
          "commit": {
            "abbreviatedOid": "51ca52f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T21:52:34Z",
          "updatedAt": "2023-10-25T21:52:35Z",
          "comments": [
            {
              "originalPosition": 168,
              "body": "I am fine banning x509 from headers... But it was my understanding that it was required to be supported, and it clearly can't be made mandatory.",
              "createdAt": "2023-10-25T21:52:34Z",
              "updatedAt": "2023-10-25T21:52:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOiSv",
          "commit": {
            "abbreviatedOid": "51ca52f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T21:53:07Z",
          "updatedAt": "2023-10-25T21:53:08Z",
          "comments": [
            {
              "originalPosition": 178,
              "body": "Wut",
              "createdAt": "2023-10-25T21:53:07Z",
              "updatedAt": "2023-10-25T21:53:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOib8",
          "commit": {
            "abbreviatedOid": "9c370bf"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T21:53:42Z",
          "updatedAt": "2023-10-25T21:53:42Z",
          "comments": [
            {
              "originalPosition": 177,
              "body": "Thank you!",
              "createdAt": "2023-10-25T21:53:42Z",
              "updatedAt": "2023-10-25T21:53:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOjcy",
          "commit": {
            "abbreviatedOid": "5311caa"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T21:57:52Z",
          "updatedAt": "2023-10-25T21:57:52Z",
          "comments": [
            {
              "originalPosition": 178,
              "body": "see unlabeled CDDL fragment at the end of this Section:\r\n\r\nhttps://www.rfc-editor.org/rfc/rfc9052.html#name-header-parameters",
              "createdAt": "2023-10-25T21:57:52Z",
              "updatedAt": "2023-10-25T21:57:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOkhj",
          "commit": {
            "abbreviatedOid": "5604893"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T22:02:13Z",
          "updatedAt": "2023-10-25T22:02:13Z",
          "comments": [
            {
              "originalPosition": 178,
              "body": "Did I forget to include: `Signed_Statement_Unprotected_Header = { * label => value }` ?\r\nThat is what I meant. It can end up as: `unprotected: {}`",
              "createdAt": "2023-10-25T22:02:13Z",
              "updatedAt": "2023-10-25T22:02:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lPKrK",
          "commit": {
            "abbreviatedOid": "5604893"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-26T00:01:51Z",
          "updatedAt": "2023-10-26T00:01:51Z",
          "comments": [
            {
              "originalPosition": 176,
              "body": "Receipt_Unprotected_Header has a redundant definition. Probably needs even more qualification in the type name? Where does -222 go and where does -333 go?",
              "createdAt": "2023-10-26T00:01:51Z",
              "updatedAt": "2023-10-26T00:01:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lPLSZ",
          "commit": {
            "abbreviatedOid": "5604893"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-26T00:03:23Z",
          "updatedAt": "2023-10-26T00:03:24Z",
          "comments": [
            {
              "originalPosition": 147,
              "body": "```suggestion\r\n    protected : bstr .cbor Receipt_Protected_Header,\r\n```",
              "createdAt": "2023-10-26T00:03:23Z",
              "updatedAt": "2023-10-26T00:03:24Z"
            }
          ]
        }
      ]
    }
  ]
}